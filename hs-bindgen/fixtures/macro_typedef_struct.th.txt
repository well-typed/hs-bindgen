-- addDependentFile examples/golden/macro_typedef_struct.h
{-| __C declaration:__ @MY_TYPE@

    __defined at:__ @macro_typedef_struct.h:1:9@

    __exported by:__ @macro_typedef_struct.h@
-}
newtype MY_TYPE
    = MY_TYPE {un_MY_TYPE :: CInt}
      {- ^ __C declaration:__ @MY_TYPE@

           __defined at:__ @macro_typedef_struct.h:1:9@

           __exported by:__ @macro_typedef_struct.h@
      -}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Bits,
                      Bounded,
                      Enum,
                      FiniteBits,
                      Integral,
                      Ix,
                      Num,
                      Real)
{-| __C declaration:__ @bar@

    __defined at:__ @macro_typedef_struct.h:3:9@

    __exported by:__ @macro_typedef_struct.h@
-}
data Bar
    = Bar {bar_x :: CInt
           {- ^ __C declaration:__ @x@

                __defined at:__ @macro_typedef_struct.h:4:7@

                __exported by:__ @macro_typedef_struct.h@
           -},
           bar_y :: MY_TYPE
           {- ^ __C declaration:__ @y@

                __defined at:__ @macro_typedef_struct.h:5:11@

                __exported by:__ @macro_typedef_struct.h@
           -}}
      {- ^ __C declaration:__ @bar@

           __defined at:__ @macro_typedef_struct.h:3:9@

           __exported by:__ @macro_typedef_struct.h@
      -}
    deriving stock (Eq, Show)
instance Storable Bar
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure Bar <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Bar bar_x_3
                                       bar_y_4 -> pokeByteOff ptr_1 (0 :: Int) bar_x_3 >> pokeByteOff ptr_1 (4 :: Int) bar_y_4
