-- addDependentFile examples/golden/skip_over_long_double.h
-- #include <skip_over_long_double.h>
-- void hs_bindgen_test_skip_over_long_double_c7f5e756cd95b3ed (signed int arg1) { fun2(arg1); }
-- /* get_fun2_ptr */ __attribute__ ((const)) void (*hs_bindgen_test_skip_over_long_double_94047676e402a0bf (void)) (signed int arg1) { return &fun2; } 
{-| __C declaration:__ @fun2@

    __defined at:__ @skip_over_long_double.h:7:6@

    __exported by:__ @skip_over_long_double.h@
-}
foreign import ccall safe "hs_bindgen_test_skip_over_long_double_c7f5e756cd95b3ed" fun2 :: CInt ->
                                                                                           IO Unit
{-| __C declaration:__ @fun2@

    __defined at:__ @skip_over_long_double.h:7:6@

    __exported by:__ @skip_over_long_double.h@
-}
foreign import ccall safe "hs_bindgen_test_skip_over_long_double_94047676e402a0bf" hs_bindgen_test_skip_over_long_double_94047676e402a0bf :: IO (FunPtr (CInt ->
                                                                                                                                                         IO Unit))
{-# NOINLINE fun2_ptr #-}
fun2_ptr :: FunPtr (CInt -> IO Unit)
fun2_ptr = unsafePerformIO hs_bindgen_test_skip_over_long_double_94047676e402a0bf
{-| __C declaration:__ @struct2@

    __defined at:__ @skip_over_long_double.h:13:8@

    __exported by:__ @skip_over_long_double.h@
-}
data Struct2
    = Struct2 {struct2_x :: CInt
               {- ^ __C declaration:__ @x@

                    __defined at:__ @skip_over_long_double.h:14:7@

                    __exported by:__ @skip_over_long_double.h@
               -}}
      {- ^ __C declaration:__ @struct2@

           __defined at:__ @skip_over_long_double.h:13:8@

           __exported by:__ @skip_over_long_double.h@
      -}
    deriving stock (Eq, Show)
instance Storable Struct2
    where sizeOf = \_ -> 4 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> pure Struct2 <*> peekByteOff ptr_0 (0 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Struct2 struct2_x_3 -> pokeByteOff ptr_1 (0 :: Int) struct2_x_3
