TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "definitions.h:13:5",
        declId = NamePair {
          nameC = Name "foo",
          nameHsIdent = Identifier "foo"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["definitions.h"],
            headerInclude =
            "definitions.h"},
        declComment = Nothing},
      declKind = DeclFunction
        Function {
          functionArgs = [
            _Ã—_
              (Just
                NamePair {
                  nameC = Name "x",
                  nameHsIdent = Identifier "x"})
              (TypePrim
                (PrimFloating PrimDouble))],
          functionAttrs =
          FunctionAttributes
            ImpureFunction,
          functionRes = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "definitions.h:18:5",
        declId = NamePair {
          nameC = Name "n",
          nameHsIdent = Identifier "n"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["definitions.h"],
            headerInclude =
            "definitions.h"},
        declComment = Nothing},
      declKind = DeclGlobal
        (TypePrim
          (PrimIntegral PrimInt Signed)),
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "definitions.h:23:8",
        declId = NamePair {
          nameC = Name "X",
          nameHsIdent = Identifier "X"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["definitions.h"],
            headerInclude =
            "definitions.h"},
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (Name "@NsConstr" "X"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc =
                "definitions.h:23:16",
                fieldName = NamePair {
                  nameC = Name "n",
                  nameHsIdent = Identifier "x_n"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "definitions.h:26:7",
        declId = NamePair {
          nameC = Name "Y",
          nameHsIdent = Identifier "Y"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["definitions.h"],
            headerInclude =
            "definitions.h"},
        declComment = Nothing},
      declKind = DeclUnion
        Union {
          unionNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Y",
            newtypeField = Name
              "@NsVar"
              "un_Y"},
          unionSizeof = 4,
          unionAlignment = 4,
          unionFields = [
            UnionField {
              unionFieldInfo = FieldInfo {
                fieldLoc =
                "definitions.h:26:15",
                fieldName = NamePair {
                  nameC = Name "m",
                  nameHsIdent = Identifier "y_m"},
                fieldComment = Nothing},
              unionFieldType = TypePrim
                (PrimIntegral PrimInt Signed)},
            UnionField {
              unionFieldInfo = FieldInfo {
                fieldLoc =
                "definitions.h:26:22",
                fieldName = NamePair {
                  nameC = Name "o",
                  nameHsIdent = Identifier "y_o"},
                fieldComment = Nothing},
              unionFieldType = TypePrim
                (PrimIntegral
                  PrimInt
                  Signed)}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}}],
  unitDeps = ["definitions"]}
