newtype CFirst = MkCFirst {unCFirst :: CUInt}
instance Storable CFirst
    where {sizeOf = \_ -> 4;
           alignment = \_ -> 4;
           peek = \ptr_0 -> pure MkCFirst <*> peekByteOff ptr_0 0;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {MkCFirst unCFirst_3 -> pokeByteOff ptr_1 0 unCFirst_3}}
newtype CSecond = MkCSecond {unCSecond :: CInt}
instance Storable CSecond
    where {sizeOf = \_ -> 4;
           alignment = \_ -> 4;
           peek = \ptr_0 -> pure MkCSecond <*> peekByteOff ptr_0 0;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {MkCSecond unCSecond_3 -> pokeByteOff ptr_1 0 unCSecond_3}}
newtype CSame = MkCSame {unCSame :: CUInt}
instance Storable CSame
    where {sizeOf = \_ -> 4;
           alignment = \_ -> 4;
           peek = \ptr_0 -> pure MkCSame <*> peekByteOff ptr_0 0;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {MkCSame unCSame_3 -> pokeByteOff ptr_1 0 unCSame_3}}
newtype CPackad = MkCPackad {unCPackad :: CSChar}
instance Storable CPackad
    where {sizeOf = \_ -> 1;
           alignment = \_ -> 1;
           peek = \ptr_0 -> pure MkCPackad <*> peekByteOff ptr_0 0;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {MkCPackad unCPackad_3 -> pokeByteOff ptr_1 0 unCPackad_3}}
