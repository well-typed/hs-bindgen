newtype BOOL = BOOL {unBOOL :: CBool}
deriving newtype instance Storable BOOL
deriving stock instance Eq BOOL
deriving stock instance Ord BOOL
deriving stock instance Read BOOL
deriving stock instance Show BOOL
deriving newtype instance Enum BOOL
deriving newtype instance Ix BOOL
deriving newtype instance Bounded BOOL
deriving newtype instance Bits BOOL
deriving newtype instance FiniteBits BOOL
deriving newtype instance Integral BOOL
deriving newtype instance Num BOOL
deriving newtype instance Real BOOL
data Bools1 = Bools1 {bools1_x :: CBool, bools1_y :: CBool}
instance Storable Bools1
    where {sizeOf = \_ -> 2 :: Int;
           alignment = \_ -> 1 :: Int;
           peek = \ptr_0 -> (pure Bools1 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (1 :: Int);
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Bools1 bools1_x_3
                                            bools1_y_4 -> pokeByteOff ptr_1 (0 :: Int) bools1_x_3 >> pokeByteOff ptr_1 (1 :: Int) bools1_y_4}}
deriving stock instance Show Bools1
deriving stock instance Eq Bools1
data Bools2 = Bools2 {bools2_x :: CBool, bools2_y :: CBool}
instance Storable Bools2
    where {sizeOf = \_ -> 2 :: Int;
           alignment = \_ -> 1 :: Int;
           peek = \ptr_0 -> (pure Bools2 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (1 :: Int);
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Bools2 bools2_x_3
                                            bools2_y_4 -> pokeByteOff ptr_1 (0 :: Int) bools2_x_3 >> pokeByteOff ptr_1 (1 :: Int) bools2_y_4}}
deriving stock instance Show Bools2
deriving stock instance Eq Bools2
data Bools3 = Bools3 {bools3_x :: BOOL, bools3_y :: BOOL}
instance Storable Bools3
    where {sizeOf = \_ -> 2 :: Int;
           alignment = \_ -> 1 :: Int;
           peek = \ptr_0 -> (pure Bools3 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (1 :: Int);
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Bools3 bools3_x_3
                                            bools3_y_4 -> pokeByteOff ptr_1 (0 :: Int) bools3_x_3 >> pokeByteOff ptr_1 (1 :: Int) bools3_y_4}}
deriving stock instance Show Bools3
deriving stock instance Eq Bools3
