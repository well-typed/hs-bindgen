DeclData (Struct {structName = "Foo", structConstr = "Foo", structFields = Field {fieldName = "foo_i", fieldType = HsPrimType HsPrimCInt} ::: Field {fieldName = "foo_c", fieldType = HsPrimType HsPrimCChar} ::: VNil})
DeclInstance (InstanceStorable (Struct {structName = "Foo", structConstr = "Foo", structFields = Field {fieldName = "foo_i", fieldType = HsPrimType HsPrimCInt} ::: Field {fieldName = "foo_c", fieldType = HsPrimType HsPrimCChar} ::: VNil}) (StorableInstance {storableSizeOf = 8, storableAlignment = 4, storablePeek = Lambda "ptr" (Ap (StructCon (Struct {structName = "Foo", structConstr = "Foo", structFields = Field {fieldName = "foo_i", fieldType = HsPrimType HsPrimCInt} ::: Field {fieldName = "foo_c", fieldType = HsPrimType HsPrimCChar} ::: VNil})) [PeekByteOff 0 0,PeekByteOff 0 4]), storablePoke = Lambda "ptr" (Lambda "s" (ElimStruct 0 (Struct {structName = "Foo", structConstr = "Foo", structFields = Field {fieldName = "foo_i", fieldType = HsPrimType HsPrimCInt} ::: Field {fieldName = "foo_c", fieldType = HsPrimType HsPrimCChar} ::: VNil}) 2 (Seq [PokeByteOff 3 0 0,PokeByteOff 3 4 1])))}))
DeclData (Struct {structName = "Bar", structConstr = "Bar", structFields = Field {fieldName = "bar_foo1", fieldType = HsTypRef "Foo"} ::: Field {fieldName = "bar_foo2", fieldType = HsTypRef "Foo"} ::: VNil})
DeclInstance (InstanceStorable (Struct {structName = "Bar", structConstr = "Bar", structFields = Field {fieldName = "bar_foo1", fieldType = HsTypRef "Foo"} ::: Field {fieldName = "bar_foo2", fieldType = HsTypRef "Foo"} ::: VNil}) (StorableInstance {storableSizeOf = 16, storableAlignment = 4, storablePeek = Lambda "ptr" (Ap (StructCon (Struct {structName = "Bar", structConstr = "Bar", structFields = Field {fieldName = "bar_foo1", fieldType = HsTypRef "Foo"} ::: Field {fieldName = "bar_foo2", fieldType = HsTypRef "Foo"} ::: VNil})) [PeekByteOff 0 0,PeekByteOff 0 8]), storablePoke = Lambda "ptr" (Lambda "s" (ElimStruct 0 (Struct {structName = "Bar", structConstr = "Bar", structFields = Field {fieldName = "bar_foo1", fieldType = HsTypRef "Foo"} ::: Field {fieldName = "bar_foo2", fieldType = HsTypRef "Foo"} ::: VNil}) 2 (Seq [PokeByteOff 3 0 0,PokeByteOff 3 8 1])))}))
