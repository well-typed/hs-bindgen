Header
  [
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "manual_examples.h:48:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName
            "FIELD_OFFSET",
          macroArgs = [],
          macroBody = MTerm
            (MInt
              IntegerLiteral {
                integerLiteralText = "4",
                integerLiteralType = Just
                  (_×_ PrimInt Signed),
                integerLiteralValue = 4})},
        macroDeclMacroTy =
        "IntLike (CIntegralType (IntLike (Int Signed)))",
        macroDeclSourceLoc =
        "manual_examples.h:48:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "manual_examples.h:49:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "EPSILON",
          macroArgs = [],
          macroBody = MTerm
            (MFloat
              FloatingLiteral {
                floatingLiteralText = "0.1",
                floatingLiteralType = Just
                  PrimDouble,
                floatingLiteralFloatValue = 0.1,
                floatingLiteralDoubleValue =
                0.1})},
        macroDeclMacroTy =
        "FloatLike DoubleType",
        macroDeclSourceLoc =
        "manual_examples.h:49:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "manual_examples.h:51:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName
            "PTR_TO_FIELD",
          macroArgs = [CName "ptr"],
          macroBody = MApp
            MAdd
            [
              MTerm (MVar (CName "ptr") []),
              MTerm
                (MInt
                  IntegerLiteral {
                    integerLiteralText = "4",
                    integerLiteralType = Just
                      (_×_ PrimInt Signed),
                    integerLiteralValue = 4})]},
        macroDeclMacroTy =
        "(forall a. Add a (IntLike (CIntegralType (IntLike (Int Signed)))) => (a -> AddRes a (IntLike (CIntegralType (IntLike (Int Signed))))))",
        macroDeclSourceLoc =
        "manual_examples.h:51:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "manual_examples.h:53:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "YEAR",
          macroArgs = [],
          macroBody = MTerm
            (MType
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed)))},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "manual_examples.h:53:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "manual_examples.h:54:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "MONTH",
          macroArgs = [],
          macroBody = MTerm
            (MType
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed)))},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "manual_examples.h:54:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "manual_examples.h:55:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "DAY",
          macroArgs = [],
          macroBody = MTerm
            (MType
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed)))},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "manual_examples.h:55:9"},
    DeclFunction
      Function {
        functionName = CName
          "mk_triple",
        functionArgs = [
          TypePrim
            (PrimIntegral PrimInt Signed),
          TypePrim
            (PrimIntegral PrimInt Signed),
          TypePrim
            (PrimIntegral PrimInt Signed),
          TypePointer
            (TypeStruct
              (DeclPathName
                (CName "triple")
                DeclPathCtxtTop))],
        functionRes = TypeVoid,
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:20:6"},
    DeclFunction
      Function {
        functionName = CName
          "index_triple",
        functionArgs = [
          TypePointer
            (TypeStruct
              (DeclPathName
                (CName "triple")
                DeclPathCtxtTop)),
          TypeEnum
            (DeclPathName
              (CName "index")
              DeclPathCtxtTop)],
        functionRes = TypePrim
          (PrimIntegral PrimInt Signed),
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:32:5"},
    DeclFunction
      Function {
        functionName = CName
          "sum_triple",
        functionArgs = [
          TypePointer
            (TypeStruct
              (DeclPathName
                (CName "triple")
                DeclPathCtxtTop))],
        functionRes = TypeTypedef
          (CName "sum"),
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:41:5"},
    DeclFunction
      Function {
        functionName = CName
          "average_triple",
        functionArgs = [
          TypePointer
            (TypeStruct
              (DeclPathName
                (CName "triple")
                DeclPathCtxtTop))],
        functionRes = TypeTypedef
          (CName "average"),
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:42:9"},
    DeclFunction
      Function {
        functionName = CName "getYear",
        functionArgs = [
          TypePointer
            (TypeTypedef (CName "date"))],
        functionRes = TypeTypedef
          (CName "YEAR"),
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:63:6"},
    DeclFunction
      Function {
        functionName = CName
          "print_occupation",
        functionArgs = [
          TypePrim
            (PrimIntegral PrimInt Signed),
          TypePointer
            (TypeUnion
              (DeclPathName
                (CName "occupation")
                DeclPathCtxtTop))],
        functionRes = TypeVoid,
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:82:6"},
    DeclFunction
      Function {
        functionName = CName
          "\25308\25308",
        functionArgs = [],
        functionRes = TypeVoid,
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:110:6"},
    DeclFunction
      Function {
        functionName = CName "\978",
        functionArgs = [],
        functionRes = TypeVoid,
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:112:6"},
    DeclFunction
      Function {
        functionName = CName "import",
        functionArgs = [],
        functionRes = TypeVoid,
        functionHeader =
        "manual_examples.h",
        functionSourceLoc =
        "manual_examples.h:114:6"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "triple")
          DeclPathCtxtTop,
        structAliases = [
          CName "triple"],
        structSizeof = 12,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "a",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:15:9"},
          StructField {
            fieldName = CName "b",
            fieldOffset = 32,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:16:9"},
          StructField {
            fieldName = CName "c",
            fieldOffset = 64,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:17:9"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:14:16"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "index")
          DeclPathCtxtTop,
        enumAliases = [CName "index"],
        enumType = TypePrim
          (PrimIntegral PrimInt Unsigned),
        enumSizeof = 4,
        enumAlignment = 4,
        enumValues = [
          EnumValue {
            valueName = CName "A",
            valueValue = 0,
            valueSourceLoc =
            "manual_examples.h:27:5"},
          EnumValue {
            valueName = CName "B",
            valueValue = 1,
            valueSourceLoc =
            "manual_examples.h:28:5"},
          EnumValue {
            valueName = CName "C",
            valueValue = 2,
            valueSourceLoc =
            "manual_examples.h:29:5"}],
        enumSourceLoc =
        "manual_examples.h:26:14"},
    DeclTypedef
      Typedef {
        typedefName = CName "sum",
        typedefType = TypePrim
          (PrimIntegral PrimInt Signed),
        typedefSourceLoc =
        "manual_examples.h:38:13"},
    DeclTypedef
      Typedef {
        typedefName = CName "average",
        typedefType = TypePrim
          (PrimFloating PrimDouble),
        typedefSourceLoc =
        "manual_examples.h:39:16"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "date")
          DeclPathCtxtTop,
        structAliases = [CName "date"],
        structSizeof = 12,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "year",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "YEAR"),
            fieldSourceLoc =
            "manual_examples.h:58:11"},
          StructField {
            fieldName = CName "month",
            fieldOffset = 32,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "MONTH"),
            fieldSourceLoc =
            "manual_examples.h:59:11"},
          StructField {
            fieldName = CName "day",
            fieldOffset = 64,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "DAY"),
            fieldSourceLoc =
            "manual_examples.h:60:11"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:57:16"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "student")
          (DeclPathCtxtField
            (Just (CName "occupation"))
            (CName "student")
            DeclPathCtxtTop),
        structAliases = [],
        structSizeof = 16,
        structAlignment = 8,
        structFields = [
          StructField {
            fieldName = CName "university",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePointer
              (TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed)))),
            fieldSourceLoc =
            "manual_examples.h:71:11"},
          StructField {
            fieldName = CName "year",
            fieldOffset = 64,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:72:9"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:70:10"},
    DeclOpaqueStruct
      OpaqueStruct {
        opaqueStructTag = CName
          "person",
        opaqueStructAliases = [],
        opaqueStructSourceLoc =
        "manual_examples.h:77:12"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "employee")
          (DeclPathCtxtField
            (Just (CName "occupation"))
            (CName "employee")
            DeclPathCtxtTop),
        structAliases = [],
        structSizeof = 24,
        structAlignment = 8,
        structFields = [
          StructField {
            fieldName = CName "company",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePointer
              (TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed)))),
            fieldSourceLoc =
            "manual_examples.h:76:11"},
          StructField {
            fieldName = CName "supervisor",
            fieldOffset = 64,
            fieldWidth = Nothing,
            fieldType = TypePointer
              (TypeStruct
                (DeclPathName
                  (CName "person")
                  (DeclPathCtxtPtr
                    (DeclPathCtxtField
                      (Just (CName "employee"))
                      (CName "supervisor")
                      (DeclPathCtxtField
                        (Just (CName "occupation"))
                        (CName "employee")
                        DeclPathCtxtTop))))),
            fieldSourceLoc =
            "manual_examples.h:77:20"},
          StructField {
            fieldName = CName "salary",
            fieldOffset = 128,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:78:9"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:75:10"},
    DeclUnion
      Union {
        unionDeclPath = DeclPathName
          (CName "occupation")
          DeclPathCtxtTop,
        unionAliases = [
          CName "occupation"],
        unionSizeof = 24,
        unionAlignment = 8,
        unionFields = [
          UnionField {
            ufieldName = CName "student",
            ufieldType = TypeStruct
              (DeclPathName
                (CName "student")
                (DeclPathCtxtField
                  (Just (CName "occupation"))
                  (CName "student")
                  DeclPathCtxtTop)),
            ufieldSourceLoc =
            "manual_examples.h:73:5"},
          UnionField {
            ufieldName = CName "employee",
            ufieldType = TypeStruct
              (DeclPathName
                (CName "employee")
                (DeclPathCtxtField
                  (Just (CName "occupation"))
                  (CName "employee")
                  DeclPathCtxtTop)),
            ufieldSourceLoc =
            "manual_examples.h:79:5"}],
        unionSourceLoc =
        "manual_examples.h:69:15"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathAnon
          (DeclPathCtxtField
            (Just (CName "rect"))
            (CName "lower_left")
            DeclPathCtxtTop),
        structAliases = [],
        structSizeof = 8,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "x",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:90:9"},
          StructField {
            fieldName = CName "y",
            fieldOffset = 32,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:91:9"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:89:3"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathAnon
          (DeclPathCtxtField
            (Just (CName "rect"))
            (CName "upper_right")
            DeclPathCtxtTop),
        structAliases = [],
        structSizeof = 8,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "x",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:95:9"},
          StructField {
            fieldName = CName "y",
            fieldOffset = 32,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:96:9"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:94:3"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "rect")
          DeclPathCtxtTop,
        structAliases = [],
        structSizeof = 16,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "lower_left",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypeStruct
              (DeclPathAnon
                (DeclPathCtxtField
                  (Just (CName "rect"))
                  (CName "lower_left")
                  DeclPathCtxtTop)),
            fieldSourceLoc =
            "manual_examples.h:92:5"},
          StructField {
            fieldName = CName "upper_right",
            fieldOffset = 64,
            fieldWidth = Nothing,
            fieldType = TypeStruct
              (DeclPathAnon
                (DeclPathCtxtField
                  (Just (CName "rect"))
                  (CName "upper_right")
                  DeclPathCtxtTop)),
            fieldSourceLoc =
            "manual_examples.h:97:5"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:88:8"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathAnon
          (DeclPathCtxtPtr
            (DeclPathCtxtTypedef
              (CName "config"))),
        structAliases = [],
        structSizeof = 8,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "width",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:101:7"},
          StructField {
            fieldName = CName "height",
            fieldOffset = 32,
            fieldWidth = Nothing,
            fieldType = TypePrim
              (PrimIntegral PrimInt Signed),
            fieldSourceLoc =
            "manual_examples.h:102:7"}],
        structFlam = Nothing,
        structSourceLoc =
        "manual_examples.h:100:9"},
    DeclTypedef
      Typedef {
        typedefName = CName "config",
        typedefType = TypePointer
          (TypeStruct
            (DeclPathAnon
              (DeclPathCtxtPtr
                (DeclPathCtxtTypedef
                  (CName "config"))))),
        typedefSourceLoc =
        "manual_examples.h:103:4"},
    DeclTypedef
      Typedef {
        typedefName = CName "adio\769s",
        typedefType = TypePrim
          (PrimIntegral PrimInt Signed),
        typedefSourceLoc =
        "manual_examples.h:109:13"},
    DeclTypedef
      Typedef {
        typedefName = CName
          "\25968\23383",
        typedefType = TypePrim
          (PrimIntegral PrimInt Signed),
        typedefSourceLoc =
        "manual_examples.h:111:13"},
    DeclTypedef
      Typedef {
        typedefName = CName "data",
        typedefType = TypePrim
          (PrimIntegral PrimInt Signed),
        typedefSourceLoc =
        "manual_examples.h:113:13"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "signal")
          DeclPathCtxtTop,
        enumAliases = [],
        enumType = TypePrim
          (PrimIntegral PrimInt Unsigned),
        enumSizeof = 4,
        enumAlignment = 4,
        enumValues = [
          EnumValue {
            valueName = CName "start",
            valueValue = 1,
            valueSourceLoc =
            "manual_examples.h:121:3"},
          EnumValue {
            valueName = CName "pause",
            valueValue = 2,
            valueSourceLoc =
            "manual_examples.h:122:3"},
          EnumValue {
            valueName = CName "resume",
            valueValue = 3,
            valueSourceLoc =
            "manual_examples.h:123:3"},
          EnumValue {
            valueName = CName "stop",
            valueValue = 4,
            valueSourceLoc =
            "manual_examples.h:124:3"}],
        enumSourceLoc =
        "manual_examples.h:120:6"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "HTTP_status")
          DeclPathCtxtTop,
        enumAliases = [],
        enumType = TypePrim
          (PrimIntegral PrimInt Unsigned),
        enumSizeof = 4,
        enumAlignment = 4,
        enumValues = [
          EnumValue {
            valueName = CName "ok",
            valueValue = 200,
            valueSourceLoc =
            "manual_examples.h:128:3"},
          EnumValue {
            valueName = CName "moved",
            valueValue = 301,
            valueSourceLoc =
            "manual_examples.h:129:3"},
          EnumValue {
            valueName = CName "bad_request",
            valueValue = 400,
            valueSourceLoc =
            "manual_examples.h:130:3"},
          EnumValue {
            valueName = CName
              "unauthorized",
            valueValue = 401,
            valueSourceLoc =
            "manual_examples.h:131:3"},
          EnumValue {
            valueName = CName "not_found",
            valueValue = 404,
            valueSourceLoc =
            "manual_examples.h:132:3"}],
        enumSourceLoc =
        "manual_examples.h:127:6"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "descending")
          DeclPathCtxtTop,
        enumAliases = [],
        enumType = TypePrim
          (PrimIntegral PrimInt Unsigned),
        enumSizeof = 4,
        enumAlignment = 4,
        enumValues = [
          EnumValue {
            valueName = CName "X",
            valueValue = 100,
            valueSourceLoc =
            "manual_examples.h:136:3"},
          EnumValue {
            valueName = CName "Y",
            valueValue = 99,
            valueSourceLoc =
            "manual_examples.h:137:3"},
          EnumValue {
            valueName = CName "Y_alias",
            valueValue = 99,
            valueSourceLoc =
            "manual_examples.h:138:3"},
          EnumValue {
            valueName = CName "Z",
            valueValue = 98,
            valueSourceLoc =
            "manual_examples.h:139:3"}],
        enumSourceLoc =
        "manual_examples.h:135:6"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "result")
          DeclPathCtxtTop,
        enumAliases = [],
        enumType = TypePrim
          (PrimIntegral PrimInt Signed),
        enumSizeof = 4,
        enumAlignment = 4,
        enumValues = [
          EnumValue {
            valueName = CName "failed",
            valueValue = `-1`,
            valueSourceLoc =
            "manual_examples.h:143:3"},
          EnumValue {
            valueName = CName "success",
            valueValue = 0,
            valueSourceLoc =
            "manual_examples.h:144:3"},
          EnumValue {
            valueName = CName "postponed",
            valueValue = 1,
            valueSourceLoc =
            "manual_examples.h:145:3"},
          EnumValue {
            valueName = CName
              "already_done",
            valueValue = 2,
            valueSourceLoc =
            "manual_examples.h:146:3"}],
        enumSourceLoc =
        "manual_examples.h:142:6"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "vote")
          DeclPathCtxtTop,
        enumAliases = [],
        enumType = TypePrim
          (PrimChar
            (PrimSignExplicit Unsigned)),
        enumSizeof = 1,
        enumAlignment = 1,
        enumValues = [
          EnumValue {
            valueName = CName "infavour",
            valueValue = 0,
            valueSourceLoc =
            "manual_examples.h:150:3"},
          EnumValue {
            valueName = CName "against",
            valueValue = 1,
            valueSourceLoc =
            "manual_examples.h:151:3"},
          EnumValue {
            valueName = CName "abstain",
            valueValue = 2,
            valueSourceLoc =
            "manual_examples.h:152:3"}],
        enumSourceLoc =
        "manual_examples.h:149:6"},
    DeclEnum
      Enu {
        enumDeclPath = DeclPathName
          (CName "CXCursorKind")
          DeclPathCtxtTop,
        enumAliases = [],
        enumType = TypePrim
          (PrimIntegral PrimInt Unsigned),
        enumSizeof = 4,
        enumAlignment = 4,
        enumValues = [
          EnumValue {
            valueName = CName
              "CXCursor_FirstExpr",
            valueValue = 100,
            valueSourceLoc =
            "manual_examples.h:158:3"},
          EnumValue {
            valueName = CName
              "CXCursor_UnexposedExpr",
            valueValue = 100,
            valueSourceLoc =
            "manual_examples.h:159:3"},
          EnumValue {
            valueName = CName
              "CXCursor_DeclRefExpr",
            valueValue = 101,
            valueSourceLoc =
            "manual_examples.h:160:3"},
          EnumValue {
            valueName = CName
              "CXCursor_MemberRefExpr",
            valueValue = 102,
            valueSourceLoc =
            "manual_examples.h:161:3"},
          EnumValue {
            valueName = CName
              "CXCursor_PackIndexingExpr",
            valueValue = 156,
            valueSourceLoc =
            "manual_examples.h:163:3"},
          EnumValue {
            valueName = CName
              "CXCursor_LastExpr",
            valueValue = 156,
            valueSourceLoc =
            "manual_examples.h:164:3"},
          EnumValue {
            valueName = CName
              "CXCursor_FirstStmt",
            valueValue = 200,
            valueSourceLoc =
            "manual_examples.h:166:3"},
          EnumValue {
            valueName = CName
              "CXCursor_UnexposedStmt",
            valueValue = 200,
            valueSourceLoc =
            "manual_examples.h:167:3"},
          EnumValue {
            valueName = CName
              "CXCursor_LabelStmt",
            valueValue = 201,
            valueSourceLoc =
            "manual_examples.h:168:3"},
          EnumValue {
            valueName = CName
              "CXCursor_CompoundStmt",
            valueValue = 202,
            valueSourceLoc =
            "manual_examples.h:169:3"},
          EnumValue {
            valueName = CName
              "CXCursor_OpenACCUpdateConstruct",
            valueValue = 331,
            valueSourceLoc =
            "manual_examples.h:171:3"},
          EnumValue {
            valueName = CName
              "CXCursor_LastStmt",
            valueValue = 331,
            valueSourceLoc =
            "manual_examples.h:172:3"}],
        enumSourceLoc =
        "manual_examples.h:157:6"}]
