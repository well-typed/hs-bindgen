TranslationUnit {
  unitDecls =
  [
    Decl {
      declInfo = DeclInfo {
        declLoc = "flam.h:2:8",
        declId = NamePair {
          nameC = Name "pascal",
          nameHsIdent = HsIdentifier
            "Pascal"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "flam.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Pascal"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:3:9",
                fieldName = NamePair {
                  nameC = Name "len",
                  nameHsIdent = HsIdentifier
                    "pascal_len"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Just
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:4:10",
                fieldName = NamePair {
                  nameC = Name "data",
                  nameHsIdent = HsIdentifier
                    "pascal_data"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 32,
              structFieldWidth = Nothing}},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "flam.h:10:2",
        declId = NamePair {
          nameC = Name "foo_bar",
          nameHsIdent = HsIdentifier
            "Foo_bar"},
        declOrigin = NameOriginGenerated
          (AnonId "flam.h:10:2"),
        declAliases = [],
        declHeader = "flam.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Foo_bar"),
          structSizeof = 8,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:11:7",
                fieldName = NamePair {
                  nameC = Name "x",
                  nameHsIdent = HsIdentifier
                    "foo_bar_x"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:12:7",
                fieldName = NamePair {
                  nameC = Name "y",
                  nameHsIdent = HsIdentifier
                    "foo_bar_y"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 32,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "flam.h:8:8",
        declId = NamePair {
          nameC = Name "foo",
          nameHsIdent = HsIdentifier
            "Foo"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "flam.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Foo"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:9:6",
                fieldName = NamePair {
                  nameC = Name "len",
                  nameHsIdent = HsIdentifier
                    "foo_len"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Just
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:13:4",
                fieldName = NamePair {
                  nameC = Name "bar",
                  nameHsIdent = HsIdentifier
                    "foo_bar"},
                fieldComment = Nothing},
              structFieldType = TypeStruct
                NamePair {
                  nameC = Name "foo_bar",
                  nameHsIdent = HsIdentifier
                    "Foo_bar"}
                (NameOriginGenerated
                  (AnonId "flam.h:10:2")),
              structFieldOffset = 32,
              structFieldWidth = Nothing}},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "flam.h:17:8",
        declId = NamePair {
          nameC = Name "diff",
          nameHsIdent = HsIdentifier
            "Diff"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "flam.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Diff"),
          structSizeof = 16,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:18:7",
                fieldName = NamePair {
                  nameC = Name "first",
                  nameHsIdent = HsIdentifier
                    "diff_first"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimLong Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:19:7",
                fieldName = NamePair {
                  nameC = Name "second",
                  nameHsIdent = HsIdentifier
                    "diff_second"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 64,
              structFieldWidth = Nothing}],
          structFlam = Just
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:20:7",
                fieldName = NamePair {
                  nameC = Name "flam",
                  nameHsIdent = HsIdentifier
                    "diff_flam"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 72,
              structFieldWidth = Nothing}},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo =
      DeclInfo {
        declLoc = "flam.h:26:8",
        declId = NamePair {
          nameC = Name "triplets",
          nameHsIdent = HsIdentifier
            "Triplets"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "flam.h",
        declComment =
        Just
          (Comment
            [
              Paragraph
                [
                  TextContent
                    "The flexible array member is a multi-dimensional array of unknown size. In",
                  TextContent
                    "particular, it is a is an array of unknown size, where each element is of",
                  TextContent
                    "type length-3-array-of-int."]])},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Triplets"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:27:7",
                fieldName = NamePair {
                  nameC = Name "len",
                  nameHsIdent = HsIdentifier
                    "triplets_len"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Just
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "flam.h:28:7",
                fieldName = NamePair {
                  nameC = Name "flam",
                  nameHsIdent = HsIdentifier
                    "triplets_flam"},
                fieldComment = Nothing},
              structFieldType = TypeConstArray
                3
                (TypePrim
                  (PrimIntegral PrimInt Signed)),
              structFieldOffset = 32,
              structFieldWidth = Nothing}},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["flam"]}
