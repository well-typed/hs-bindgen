TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "opaque_declaration.h:1:8",
        declId = NamePair {
          nameC = CName "foo",
          nameHsIdent = HsIdentifier
            "Foo"}},
      declKind = DeclStructOpaque,
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "opaque_declaration.h:4:8",
        declId = NamePair {
          nameC = CName "bar",
          nameHsIdent = HsIdentifier
            "Bar"}},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Bar"),
          structSizeof = 16,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldLoc =
              "opaque_declaration.h:5:17",
              structFieldName = NamePair {
                nameC = CName "ptrA",
                nameHsIdent = HsIdentifier
                  "bar_ptrA"},
              structFieldType = TypePointer
                (TypeStruct
                  NamePair {
                    nameC = CName "foo",
                    nameHsIdent = HsIdentifier
                      "Foo"}),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "opaque_declaration.h:6:17",
              structFieldName = NamePair {
                nameC = CName "ptrB",
                nameHsIdent = HsIdentifier
                  "bar_ptrB"},
              structFieldType = TypePointer
                (TypeStruct
                  NamePair {
                    nameC = CName "bar",
                    nameHsIdent = HsIdentifier
                      "Bar"}),
              structFieldOffset = 64,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "opaque_declaration.h:9:8",
        declId = NamePair {
          nameC = CName "baz",
          nameHsIdent = HsIdentifier
            "Baz"}},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Baz"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "opaque_declaration.h:11:6",
        declId = NamePair {
          nameC = CName "quu",
          nameHsIdent = HsIdentifier
            "Quu"}},
      declKind = DeclEnumOpaque,
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "opaque_declaration.h:13:7",
        declId = NamePair {
          nameC = CName "opaque_union",
          nameHsIdent = HsIdentifier
            "Opaque_union"}},
      declKind = DeclUnionOpaque,
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps =
  [
    "/home/edsko/wt/clients/anduril/hs-bindgen/hs-bindgen/examples/opaque_declaration.h"]}
