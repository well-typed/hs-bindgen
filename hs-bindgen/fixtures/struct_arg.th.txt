-- addDependentFile examples/golden/struct_arg.h
-- #include <struct_arg.h>
-- signed int hs_bindgen_test_struct_arg_61dfa2c4506feb8f (struct thing *arg1) { return thing_fun_1(*arg1); }
-- void hs_bindgen_test_struct_arg_022cc8107f565c95 (signed int arg1, struct thing *arg2) { *arg2 = thing_fun_2(arg1); }
-- void hs_bindgen_test_struct_arg_4d9304280cca3098 (signed int arg1, struct thing *arg2, double arg3, struct thing *arg4) { *arg4 = thing_fun_3a(arg1, *arg2, arg3); }
-- char hs_bindgen_test_struct_arg_f39687b254852452 (signed int arg1, struct thing *arg2, double arg3) { return thing_fun_3b(arg1, *arg2, arg3); }
-- signed int hs_bindgen_test_struct_arg_409d8c948bf989f6 (struct thing *arg1) { return thing_fun_1(*arg1); }
-- void hs_bindgen_test_struct_arg_2d20059791239ef2 (signed int arg1, struct thing *arg2) { *arg2 = thing_fun_2(arg1); }
-- void hs_bindgen_test_struct_arg_ce442967da2c37cd (signed int arg1, struct thing *arg2, double arg3, struct thing *arg4) { *arg4 = thing_fun_3a(arg1, *arg2, arg3); }
-- char hs_bindgen_test_struct_arg_e8bc8fce45854092 (signed int arg1, struct thing *arg2, double arg3) { return thing_fun_3b(arg1, *arg2, arg3); }
-- /* get_thing_fun_1_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_struct_arg_c5f0c295b311010a (void)) (struct thing arg1) { return &thing_fun_1; } 
-- /* get_thing_fun_2_ptr */ __attribute__ ((const)) struct thing (*hs_bindgen_test_struct_arg_24edf6600396b62a (void)) (signed int arg1) { return &thing_fun_2; } 
-- /* get_thing_fun_3a_ptr */ __attribute__ ((const)) struct thing (*hs_bindgen_test_struct_arg_29a42b48992cd0bf (void)) (signed int arg1, struct thing arg2, double arg3) { return &thing_fun_3a; } 
-- /* get_thing_fun_3b_ptr */ __attribute__ ((const)) char (*hs_bindgen_test_struct_arg_0d6597dfc03e312f (void)) (signed int arg1, struct thing arg2, double arg3) { return &thing_fun_3b; } 
{-| __C declaration:__ @thing@

    __defined at:__ @struct_arg.h:2:8@

    __exported by:__ @struct_arg.h@
-}
data Thing
    = Thing {thing_x :: CInt
             {- ^ __C declaration:__ @x@

                  __defined at:__ @struct_arg.h:3:9@

                  __exported by:__ @struct_arg.h@
             -}}
      {- ^ __C declaration:__ @thing@

           __defined at:__ @struct_arg.h:2:8@

           __exported by:__ @struct_arg.h@
      -}
    deriving stock (Eq, Show)
instance Storable Thing
    where sizeOf = \_ -> 4 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> pure Thing <*> peekByteOff ptr_0 (0 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Thing thing_x_3 -> pokeByteOff ptr_1 (0 :: Int) thing_x_3
{-| Pointer-based API for 'thing_fun_1'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_61dfa2c4506feb8f" thing_fun_1_wrapper :: Ptr Thing ->
                                                                                               IO CInt
{-| __C declaration:__ @thing_fun_1@

    __defined at:__ @struct_arg.h:6:5@

    __exported by:__ @struct_arg.h@
-}
thing_fun_1 :: Thing -> IO CInt
{-| __C declaration:__ @thing_fun_1@

    __defined at:__ @struct_arg.h:6:5@

    __exported by:__ @struct_arg.h@
-}
thing_fun_1 = \x_0 -> with x_0 (\y_1 -> thing_fun_1_wrapper y_1)
{-| Pointer-based API for 'thing_fun_2'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_022cc8107f565c95" thing_fun_2_wrapper :: CInt ->
                                                                                               Ptr Thing ->
                                                                                               IO Unit
{-| __C declaration:__ @thing_fun_2@

    __defined at:__ @struct_arg.h:7:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_2 :: CInt -> IO Thing
{-| __C declaration:__ @thing_fun_2@

    __defined at:__ @struct_arg.h:7:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_2 = \x_0 -> allocaAndPeek (\z_1 -> thing_fun_2_wrapper x_0 z_1)
{-| Pointer-based API for 'thing_fun_3a'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_4d9304280cca3098" thing_fun_3a_wrapper :: CInt ->
                                                                                                Ptr Thing ->
                                                                                                CDouble ->
                                                                                                Ptr Thing ->
                                                                                                IO Unit
{-| __C declaration:__ @thing_fun_3a@

    __defined at:__ @struct_arg.h:9:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3a :: CInt -> Thing -> CDouble -> IO Thing
{-| __C declaration:__ @thing_fun_3a@

    __defined at:__ @struct_arg.h:9:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3a = \x_0 -> \x_1 -> \x_2 -> with x_1 (\y_3 -> allocaAndPeek (\z_4 -> thing_fun_3a_wrapper x_0 y_3 x_2 z_4))
{-| Pointer-based API for 'thing_fun_3b'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_f39687b254852452" thing_fun_3b_wrapper :: CInt ->
                                                                                                Ptr Thing ->
                                                                                                CDouble ->
                                                                                                IO CChar
{-| __C declaration:__ @thing_fun_3b@

    __defined at:__ @struct_arg.h:10:6@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3b :: CInt -> Thing -> CDouble -> IO CChar
{-| __C declaration:__ @thing_fun_3b@

    __defined at:__ @struct_arg.h:10:6@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3b = \x_0 -> \x_1 -> \x_2 -> with x_1 (\y_3 -> thing_fun_3b_wrapper x_0 y_3 x_2)
{-| Pointer-based API for 'thing_fun_1'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_409d8c948bf989f6" thing_fun_1_wrapper :: Ptr Thing ->
                                                                                               IO CInt
{-| __C declaration:__ @thing_fun_1@

    __defined at:__ @struct_arg.h:6:5@

    __exported by:__ @struct_arg.h@
-}
thing_fun_1 :: Thing -> IO CInt
{-| __C declaration:__ @thing_fun_1@

    __defined at:__ @struct_arg.h:6:5@

    __exported by:__ @struct_arg.h@
-}
thing_fun_1 = \x_0 -> with x_0 (\y_1 -> thing_fun_1_wrapper y_1)
{-| Pointer-based API for 'thing_fun_2'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_2d20059791239ef2" thing_fun_2_wrapper :: CInt ->
                                                                                               Ptr Thing ->
                                                                                               IO Unit
{-| __C declaration:__ @thing_fun_2@

    __defined at:__ @struct_arg.h:7:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_2 :: CInt -> IO Thing
{-| __C declaration:__ @thing_fun_2@

    __defined at:__ @struct_arg.h:7:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_2 = \x_0 -> allocaAndPeek (\z_1 -> thing_fun_2_wrapper x_0 z_1)
{-| Pointer-based API for 'thing_fun_3a'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_ce442967da2c37cd" thing_fun_3a_wrapper :: CInt ->
                                                                                                Ptr Thing ->
                                                                                                CDouble ->
                                                                                                Ptr Thing ->
                                                                                                IO Unit
{-| __C declaration:__ @thing_fun_3a@

    __defined at:__ @struct_arg.h:9:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3a :: CInt -> Thing -> CDouble -> IO Thing
{-| __C declaration:__ @thing_fun_3a@

    __defined at:__ @struct_arg.h:9:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3a = \x_0 -> \x_1 -> \x_2 -> with x_1 (\y_3 -> allocaAndPeek (\z_4 -> thing_fun_3a_wrapper x_0 y_3 x_2 z_4))
{-| Pointer-based API for 'thing_fun_3b'

-}
foreign import ccall safe "hs_bindgen_test_struct_arg_e8bc8fce45854092" thing_fun_3b_wrapper :: CInt ->
                                                                                                Ptr Thing ->
                                                                                                CDouble ->
                                                                                                IO CChar
{-| __C declaration:__ @thing_fun_3b@

    __defined at:__ @struct_arg.h:10:6@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3b :: CInt -> Thing -> CDouble -> IO CChar
{-| __C declaration:__ @thing_fun_3b@

    __defined at:__ @struct_arg.h:10:6@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3b = \x_0 -> \x_1 -> \x_2 -> with x_1 (\y_3 -> thing_fun_3b_wrapper x_0 y_3 x_2)
foreign import ccall safe "hs_bindgen_test_struct_arg_c5f0c295b311010a" hs_bindgen_test_struct_arg_c5f0c295b311010a :: IO (FunPtr (Thing ->
                                                                                                                                   IO CInt))
{-# NOINLINE thing_fun_1_ptr #-}
{-| __C declaration:__ @thing_fun_1@

    __defined at:__ @struct_arg.h:6:5@

    __exported by:__ @struct_arg.h@
-}
thing_fun_1_ptr :: FunPtr (Thing -> IO CInt)
{-| __C declaration:__ @thing_fun_1@

    __defined at:__ @struct_arg.h:6:5@

    __exported by:__ @struct_arg.h@
-}
thing_fun_1_ptr = unsafePerformIO hs_bindgen_test_struct_arg_c5f0c295b311010a
foreign import ccall safe "hs_bindgen_test_struct_arg_24edf6600396b62a" hs_bindgen_test_struct_arg_24edf6600396b62a :: IO (FunPtr (CInt ->
                                                                                                                                   IO Thing))
{-# NOINLINE thing_fun_2_ptr #-}
{-| __C declaration:__ @thing_fun_2@

    __defined at:__ @struct_arg.h:7:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_2_ptr :: FunPtr (CInt -> IO Thing)
{-| __C declaration:__ @thing_fun_2@

    __defined at:__ @struct_arg.h:7:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_2_ptr = unsafePerformIO hs_bindgen_test_struct_arg_24edf6600396b62a
foreign import ccall safe "hs_bindgen_test_struct_arg_29a42b48992cd0bf" hs_bindgen_test_struct_arg_29a42b48992cd0bf :: IO (FunPtr (CInt ->
                                                                                                                                   Thing ->
                                                                                                                                   CDouble ->
                                                                                                                                   IO Thing))
{-# NOINLINE thing_fun_3a_ptr #-}
{-| __C declaration:__ @thing_fun_3a@

    __defined at:__ @struct_arg.h:9:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3a_ptr :: FunPtr (CInt -> Thing -> CDouble -> IO Thing)
{-| __C declaration:__ @thing_fun_3a@

    __defined at:__ @struct_arg.h:9:14@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3a_ptr = unsafePerformIO hs_bindgen_test_struct_arg_29a42b48992cd0bf
foreign import ccall safe "hs_bindgen_test_struct_arg_0d6597dfc03e312f" hs_bindgen_test_struct_arg_0d6597dfc03e312f :: IO (FunPtr (CInt ->
                                                                                                                                   Thing ->
                                                                                                                                   CDouble ->
                                                                                                                                   IO CChar))
{-# NOINLINE thing_fun_3b_ptr #-}
{-| __C declaration:__ @thing_fun_3b@

    __defined at:__ @struct_arg.h:10:6@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3b_ptr :: FunPtr (CInt -> Thing -> CDouble -> IO CChar)
{-| __C declaration:__ @thing_fun_3b@

    __defined at:__ @struct_arg.h:10:6@

    __exported by:__ @struct_arg.h@
-}
thing_fun_3b_ptr = unsafePerformIO hs_bindgen_test_struct_arg_0d6597dfc03e312f
