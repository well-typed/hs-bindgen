-- addDependentFile examples/golden/decls_in_signature.h
-- #include <decls_in_signature.h>
-- void hs_bindgen_test_decls_in_signature_16f5d4c94f55e369 (struct opaque *arg1, struct outside *arg2, struct outside *arg3) { normal(arg1, arg2, *arg3); }
-- void hs_bindgen_test_decls_in_signature_8b60d38de80093fa (struct named_struct *arg1) { f1(*arg1); }
-- void hs_bindgen_test_decls_in_signature_4a86b0420a250963 (union named_union *arg1) { f2(*arg1); }
data Opaque
data Outside
    = Outside {outside_x :: CInt, outside_y :: CInt}
    deriving stock (Eq, Show)
instance Storable Outside
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure Outside <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Outside outside_x_3
                                           outside_y_4 -> pokeByteOff ptr_1 (0 :: Int) outside_x_3 >> pokeByteOff ptr_1 (4 :: Int) outside_y_4
{-| -}
foreign import ccall safe "hs_bindgen_test_decls_in_signature_16f5d4c94f55e369" normal_wrapper :: Ptr Opaque ->
                                                                                                  Ptr Outside ->
                                                                                                  Ptr Outside ->
                                                                                                  IO Unit
normal :: Ptr Opaque -> Ptr Outside -> Outside -> IO Unit
normal = \x_0 -> \x_1 -> \x_2 -> with x_2 (\y_3 -> normal_wrapper x_0 x_1 y_3)
{-| Error cases

  See 'UnexpectedAnonInSignature' for discussion (of both these error cases and the edge cases below).

-}
data Named_struct
    = Named_struct {named_struct_x :: CInt, named_struct_y :: CInt}
      {- ^ Error cases

         See 'UnexpectedAnonInSignature' for discussion (of both these error cases and the edge cases below).

      -}
    deriving stock (Eq, Show)
instance Storable Named_struct
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure Named_struct <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Named_struct named_struct_x_3
                                                named_struct_y_4 -> pokeByteOff ptr_1 (0 :: Int) named_struct_x_3 >> pokeByteOff ptr_1 (4 :: Int) named_struct_y_4
{-| Error cases

  See 'UnexpectedAnonInSignature' for discussion (of both these error cases and the edge cases below).

-}
foreign import ccall safe "hs_bindgen_test_decls_in_signature_8b60d38de80093fa" f1_wrapper :: Ptr Named_struct ->
                                                                                              IO Unit
f1 :: Named_struct -> IO Unit
f1 = \x_0 -> with x_0 (\y_1 -> f1_wrapper y_1)
newtype Named_union = Named_union {un_Named_union :: ByteArray}
deriving via (SizedByteArray 4 4) instance Storable Named_union
{-|

  __See:__ 'set_named_union_x'

-}
get_named_union_x :: Named_union -> CInt
{-|

  __See:__ 'set_named_union_x'

-}
get_named_union_x = getUnionPayload
{-|

  __See:__ 'get_named_union_x'

-}
set_named_union_x :: CInt -> Named_union
{-|

  __See:__ 'get_named_union_x'

-}
set_named_union_x = setUnionPayload
{-|

  __See:__ 'set_named_union_y'

-}
get_named_union_y :: Named_union -> CChar
{-|

  __See:__ 'set_named_union_y'

-}
get_named_union_y = getUnionPayload
{-|

  __See:__ 'get_named_union_y'

-}
set_named_union_y :: CChar -> Named_union
{-|

  __See:__ 'get_named_union_y'

-}
set_named_union_y = setUnionPayload
{-| -}
foreign import ccall safe "hs_bindgen_test_decls_in_signature_4a86b0420a250963" f2_wrapper :: Ptr Named_union ->
                                                                                              IO Unit
f2 :: Named_union -> IO Unit
f2 = \x_0 -> with x_0 (\y_1 -> f2_wrapper y_1)
