-- addDependentFile examples/golden/unions.h
{-| __C declaration:__ @Dim2@

    __defined at:__ @unions.h:1:8@

    __exported by:__ @unions.h@
-}
data Dim2
    = Dim2 {dim2_x :: CInt
            {- ^ __C declaration:__ @x@

                 __defined at:__ @unions.h:2:9@

                 __exported by:__ @unions.h@
            -},
            dim2_y :: CInt
            {- ^ __C declaration:__ @y@

                 __defined at:__ @unions.h:3:9@

                 __exported by:__ @unions.h@
            -}}
      {- ^ __C declaration:__ @Dim2@

           __defined at:__ @unions.h:1:8@

           __exported by:__ @unions.h@
      -}
    deriving stock (Eq, Show)
instance Storable Dim2
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure Dim2 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Dim2 dim2_x_3
                                        dim2_y_4 -> pokeByteOff ptr_1 (0 :: Int) dim2_x_3 >> pokeByteOff ptr_1 (4 :: Int) dim2_y_4
{-| __C declaration:__ @Dim3@

    __defined at:__ @unions.h:6:8@

    __exported by:__ @unions.h@
-}
data Dim3
    = Dim3 {dim3_x :: CInt
            {- ^ __C declaration:__ @x@

                 __defined at:__ @unions.h:7:9@

                 __exported by:__ @unions.h@
            -},
            dim3_y :: CInt
            {- ^ __C declaration:__ @y@

                 __defined at:__ @unions.h:8:9@

                 __exported by:__ @unions.h@
            -},
            dim3_z :: CInt
            {- ^ __C declaration:__ @z@

                 __defined at:__ @unions.h:9:9@

                 __exported by:__ @unions.h@
            -}}
      {- ^ __C declaration:__ @Dim3@

           __defined at:__ @unions.h:6:8@

           __exported by:__ @unions.h@
      -}
    deriving stock (Eq, Show)
instance Storable Dim3
    where sizeOf = \_ -> 12 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> ((pure Dim3 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Dim3 dim3_x_3
                                        dim3_y_4
                                        dim3_z_5 -> pokeByteOff ptr_1 (0 :: Int) dim3_x_3 >> (pokeByteOff ptr_1 (4 :: Int) dim3_y_4 >> pokeByteOff ptr_1 (8 :: Int) dim3_z_5)
{-| __C declaration:__ @DimPayload@

    __defined at:__ @unions.h:12:7@

    __exported by:__ @unions.h@
-}
newtype DimPayload
    = DimPayload {un_DimPayload :: ByteArray}
      {- ^ __C declaration:__ @DimPayload@

           __defined at:__ @unions.h:12:7@

           __exported by:__ @unions.h@
      -}
deriving via (SizedByteArray 8 4) instance Storable DimPayload
{-|

  __See:__ 'set_dimPayload_dim2'

__C declaration:__ @dim2@

__defined at:__ @unions.h:13:17@

__exported by:__ @unions.h@
-}
get_dimPayload_dim2 :: DimPayload -> Dim2
{-|

  __See:__ 'set_dimPayload_dim2'

__C declaration:__ @dim2@

__defined at:__ @unions.h:13:17@

__exported by:__ @unions.h@
-}
get_dimPayload_dim2 = getUnionPayload
{-|

  __See:__ 'get_dimPayload_dim2'

-}
set_dimPayload_dim2 :: Dim2 -> DimPayload
{-|

  __See:__ 'get_dimPayload_dim2'

-}
set_dimPayload_dim2 = setUnionPayload
{-|

  __See:__ 'set_dimPayload_dim3'

__C declaration:__ @dim3@

__defined at:__ @unions.h:14:17@

__exported by:__ @unions.h@
-}
get_dimPayload_dim3 :: DimPayload -> Dim2
{-|

  __See:__ 'set_dimPayload_dim3'

__C declaration:__ @dim3@

__defined at:__ @unions.h:14:17@

__exported by:__ @unions.h@
-}
get_dimPayload_dim3 = getUnionPayload
{-|

  __See:__ 'get_dimPayload_dim3'

-}
set_dimPayload_dim3 :: Dim2 -> DimPayload
{-|

  __See:__ 'get_dimPayload_dim3'

-}
set_dimPayload_dim3 = setUnionPayload
{-| __C declaration:__ @Dim@

    __defined at:__ @unions.h:17:8@

    __exported by:__ @unions.h@
-}
data Dim
    = Dim {dim_tag :: CInt
           {- ^ __C declaration:__ @tag@

                __defined at:__ @unions.h:18:9@

                __exported by:__ @unions.h@
           -},
           dim_payload :: DimPayload
           {- ^ __C declaration:__ @payload@

                __defined at:__ @unions.h:19:22@

                __exported by:__ @unions.h@
           -}}
      {- ^ __C declaration:__ @Dim@

           __defined at:__ @unions.h:17:8@

           __exported by:__ @unions.h@
      -}
instance Storable Dim
    where sizeOf = \_ -> 12 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure Dim <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Dim dim_tag_3
                                       dim_payload_4 -> pokeByteOff ptr_1 (0 :: Int) dim_tag_3 >> pokeByteOff ptr_1 (4 :: Int) dim_payload_4
{-| __C declaration:__ @DimPayloadB@

    __defined at:__ @unions.h:23:15@

    __exported by:__ @unions.h@
-}
newtype DimPayloadB
    = DimPayloadB {un_DimPayloadB :: ByteArray}
      {- ^ __C declaration:__ @DimPayloadB@

           __defined at:__ @unions.h:23:15@

           __exported by:__ @unions.h@
      -}
deriving via (SizedByteArray 8 4) instance Storable DimPayloadB
{-|

  __See:__ 'set_dimPayloadB_dim2'

__C declaration:__ @dim2@

__defined at:__ @unions.h:24:17@

__exported by:__ @unions.h@
-}
get_dimPayloadB_dim2 :: DimPayloadB -> Dim2
{-|

  __See:__ 'set_dimPayloadB_dim2'

__C declaration:__ @dim2@

__defined at:__ @unions.h:24:17@

__exported by:__ @unions.h@
-}
get_dimPayloadB_dim2 = getUnionPayload
{-|

  __See:__ 'get_dimPayloadB_dim2'

-}
set_dimPayloadB_dim2 :: Dim2 -> DimPayloadB
{-|

  __See:__ 'get_dimPayloadB_dim2'

-}
set_dimPayloadB_dim2 = setUnionPayload
{-|

  __See:__ 'set_dimPayloadB_dim3'

__C declaration:__ @dim3@

__defined at:__ @unions.h:25:17@

__exported by:__ @unions.h@
-}
get_dimPayloadB_dim3 :: DimPayloadB -> Dim2
{-|

  __See:__ 'set_dimPayloadB_dim3'

__C declaration:__ @dim3@

__defined at:__ @unions.h:25:17@

__exported by:__ @unions.h@
-}
get_dimPayloadB_dim3 = getUnionPayload
{-|

  __See:__ 'get_dimPayloadB_dim3'

-}
set_dimPayloadB_dim3 :: Dim2 -> DimPayloadB
{-|

  __See:__ 'get_dimPayloadB_dim3'

-}
set_dimPayloadB_dim3 = setUnionPayload
{-| __C declaration:__ @DimB@

    __defined at:__ @unions.h:28:8@

    __exported by:__ @unions.h@
-}
data DimB
    = DimB {dimB_tag :: CInt
            {- ^ __C declaration:__ @tag@

                 __defined at:__ @unions.h:29:9@

                 __exported by:__ @unions.h@
            -},
            dimB_payload :: DimPayloadB
            {- ^ __C declaration:__ @payload@

                 __defined at:__ @unions.h:30:17@

                 __exported by:__ @unions.h@
            -}}
      {- ^ __C declaration:__ @DimB@

           __defined at:__ @unions.h:28:8@

           __exported by:__ @unions.h@
      -}
instance Storable DimB
    where sizeOf = \_ -> 12 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure DimB <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   DimB dimB_tag_3
                                        dimB_payload_4 -> pokeByteOff ptr_1 (0 :: Int) dimB_tag_3 >> pokeByteOff ptr_1 (4 :: Int) dimB_payload_4
{-| __C declaration:__ @AnonA_xy@

    __defined at:__ @unions.h:35:5@

    __exported by:__ @unions.h@
-}
data AnonA_xy
    = AnonA_xy {anonA_xy_x :: CDouble
                {- ^ __C declaration:__ @x@

                     __defined at:__ @unions.h:35:21@

                     __exported by:__ @unions.h@
                -},
                anonA_xy_y :: CDouble
                {- ^ __C declaration:__ @y@

                     __defined at:__ @unions.h:35:31@

                     __exported by:__ @unions.h@
                -}}
      {- ^ __C declaration:__ @AnonA_xy@

           __defined at:__ @unions.h:35:5@

           __exported by:__ @unions.h@
      -}
    deriving stock (Eq, Show)
instance Storable AnonA_xy
    where sizeOf = \_ -> 16 :: Int
          alignment = \_ -> 8 :: Int
          peek = \ptr_0 -> (pure AnonA_xy <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   AnonA_xy anonA_xy_x_3
                                            anonA_xy_y_4 -> pokeByteOff ptr_1 (0 :: Int) anonA_xy_x_3 >> pokeByteOff ptr_1 (8 :: Int) anonA_xy_y_4
{-| __C declaration:__ @AnonA_polar@

    __defined at:__ @unions.h:36:5@

    __exported by:__ @unions.h@
-}
data AnonA_polar
    = AnonA_polar {anonA_polar_r :: CDouble
                   {- ^ __C declaration:__ @r@

                        __defined at:__ @unions.h:36:21@

                        __exported by:__ @unions.h@
                   -},
                   anonA_polar_p :: CDouble
                   {- ^ __C declaration:__ @p@

                        __defined at:__ @unions.h:36:31@

                        __exported by:__ @unions.h@
                   -}}
      {- ^ __C declaration:__ @AnonA_polar@

           __defined at:__ @unions.h:36:5@

           __exported by:__ @unions.h@
      -}
    deriving stock (Eq, Show)
instance Storable AnonA_polar
    where sizeOf = \_ -> 16 :: Int
          alignment = \_ -> 8 :: Int
          peek = \ptr_0 -> (pure AnonA_polar <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   AnonA_polar anonA_polar_r_3
                                               anonA_polar_p_4 -> pokeByteOff ptr_1 (0 :: Int) anonA_polar_r_3 >> pokeByteOff ptr_1 (8 :: Int) anonA_polar_p_4
{-| __C declaration:__ @AnonA@

    __defined at:__ @unions.h:34:7@

    __exported by:__ @unions.h@
-}
newtype AnonA
    = AnonA {un_AnonA :: ByteArray}
      {- ^ __C declaration:__ @AnonA@

           __defined at:__ @unions.h:34:7@

           __exported by:__ @unions.h@
      -}
deriving via (SizedByteArray 16 8) instance Storable AnonA
{-|

  __See:__ 'set_anonA_xy'

__C declaration:__ @xy@

__defined at:__ @unions.h:35:36@

__exported by:__ @unions.h@
-}
get_anonA_xy :: AnonA -> AnonA_xy
{-|

  __See:__ 'set_anonA_xy'

__C declaration:__ @xy@

__defined at:__ @unions.h:35:36@

__exported by:__ @unions.h@
-}
get_anonA_xy = getUnionPayload
{-|

  __See:__ 'get_anonA_xy'

-}
set_anonA_xy :: AnonA_xy -> AnonA
{-|

  __See:__ 'get_anonA_xy'

-}
set_anonA_xy = setUnionPayload
{-|

  __See:__ 'set_anonA_polar'

__C declaration:__ @polar@

__defined at:__ @unions.h:36:36@

__exported by:__ @unions.h@
-}
get_anonA_polar :: AnonA -> AnonA_polar
{-|

  __See:__ 'set_anonA_polar'

__C declaration:__ @polar@

__defined at:__ @unions.h:36:36@

__exported by:__ @unions.h@
-}
get_anonA_polar = getUnionPayload
{-|

  __See:__ 'get_anonA_polar'

-}
set_anonA_polar :: AnonA_polar -> AnonA
{-|

  __See:__ 'get_anonA_polar'

-}
set_anonA_polar = setUnionPayload
