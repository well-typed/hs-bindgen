/* automatically generated by rust-bindgen 0.70.1 */

pub const A: u32 = 5;
pub const B: u32 = 3;
pub const SOME_DEFINED_CONSTANT: u32 = 4;
pub const A_DEFINE_0: u32 = 0;
pub const A_DEFINE_1: u32 = 20560;
pub const A_DEFINE_2: u32 = 2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct another_typedef_struct_t {
    pub foo: ::std::os::raw::c_int,
    pub bar: ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    [
        "Size of another_typedef_struct_t",
    ][::std::mem::size_of::<another_typedef_struct_t>() - 8usize];
    [
        "Alignment of another_typedef_struct_t",
    ][::std::mem::align_of::<another_typedef_struct_t>() - 4usize];
    [
        "Offset of field: another_typedef_struct_t::foo",
    ][::std::mem::offset_of!(another_typedef_struct_t, foo) - 0usize];
    [
        "Offset of field: another_typedef_struct_t::bar",
    ][::std::mem::offset_of!(another_typedef_struct_t, bar) - 4usize];
};
pub const another_typedef_enum_e_FOO: another_typedef_enum_e = 0;
pub const another_typedef_enum_e_BAR: another_typedef_enum_e = 1;
pub type another_typedef_enum_e = ::std::os::raw::c_uint;
pub type a_type_t = ::std::os::raw::c_int;
pub type var_t = ::std::os::raw::c_int;
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct a_typedef_struct {
    pub field_0: bool,
    pub field_1: u8,
    pub field_2: u16,
    pub field_3: u32,
    pub field_4: another_typedef_struct_t,
    pub field_5: *mut another_typedef_struct_t,
    pub field_6: *mut ::std::os::raw::c_void,
    pub field_7: [u32; 7usize],
    pub field_8: another_typedef_enum_e,
    pub field_9: [another_typedef_enum_e; 4usize],
    pub field_10: [[another_typedef_enum_e; 3usize]; 5usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of a_typedef_struct"][::std::mem::size_of::<a_typedef_struct>() - 140usize];
    [
        "Alignment of a_typedef_struct",
    ][::std::mem::align_of::<a_typedef_struct>() - 1usize];
    [
        "Offset of field: a_typedef_struct::field_0",
    ][::std::mem::offset_of!(a_typedef_struct, field_0) - 0usize];
    [
        "Offset of field: a_typedef_struct::field_1",
    ][::std::mem::offset_of!(a_typedef_struct, field_1) - 1usize];
    [
        "Offset of field: a_typedef_struct::field_2",
    ][::std::mem::offset_of!(a_typedef_struct, field_2) - 2usize];
    [
        "Offset of field: a_typedef_struct::field_3",
    ][::std::mem::offset_of!(a_typedef_struct, field_3) - 4usize];
    [
        "Offset of field: a_typedef_struct::field_4",
    ][::std::mem::offset_of!(a_typedef_struct, field_4) - 8usize];
    [
        "Offset of field: a_typedef_struct::field_5",
    ][::std::mem::offset_of!(a_typedef_struct, field_5) - 16usize];
    [
        "Offset of field: a_typedef_struct::field_6",
    ][::std::mem::offset_of!(a_typedef_struct, field_6) - 24usize];
    [
        "Offset of field: a_typedef_struct::field_7",
    ][::std::mem::offset_of!(a_typedef_struct, field_7) - 32usize];
    [
        "Offset of field: a_typedef_struct::field_8",
    ][::std::mem::offset_of!(a_typedef_struct, field_8) - 60usize];
    [
        "Offset of field: a_typedef_struct::field_9",
    ][::std::mem::offset_of!(a_typedef_struct, field_9) - 64usize];
    [
        "Offset of field: a_typedef_struct::field_10",
    ][::std::mem::offset_of!(a_typedef_struct, field_10) - 80usize];
};
pub type a_typedef_struct_t = a_typedef_struct;
pub const a_typedef_enum_e_ENUM_CASE_0: a_typedef_enum_e = 0;
pub const a_typedef_enum_e_ENUM_CASE_1: a_typedef_enum_e = 1;
pub const a_typedef_enum_e_ENUM_CASE_2: a_typedef_enum_e = 2;
pub const a_typedef_enum_e_ENUM_CASE_3: a_typedef_enum_e = 3;
pub type a_typedef_enum_e = ::std::os::raw::c_uchar;
extern "C" {
    pub fn some_fun(i: *mut a_type_t, j: u32, k: *mut u8) -> i32;
}
pub type callback_t = ::std::option::Option<
    unsafe extern "C" fn(p: *mut ::std::os::raw::c_void, k: u32) -> u32,
>;
extern "C" {
    pub static mut v: var_t;
}
