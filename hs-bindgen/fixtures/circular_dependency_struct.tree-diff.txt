TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "circular_dependency_struct.h:3:8",
        declId = NamePair {
          nameC = Name "b",
          nameHsIdent = Identifier "B"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              [
                "circular_dependency_struct.h"],
            headerInclude =
            "circular_dependency_struct.h"},
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (Name "@NsConstr" "B"),
          structSizeof = 8,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc =
                "circular_dependency_struct.h:4:13",
                fieldName = NamePair {
                  nameC = Name "toA",
                  nameHsIdent = Identifier
                    "b_toA"},
                fieldComment = Nothing},
              structFieldType = TypePointer
                (TypeStruct
                  NamePair {
                    nameC = Name "a",
                    nameHsIdent = Identifier "A"}
                  NameOriginInSource),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = Nothing,
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "circular_dependency_struct.h:7:8",
        declId = NamePair {
          nameC = Name "a",
          nameHsIdent = Identifier "A"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              [
                "circular_dependency_struct.h"],
            headerInclude =
            "circular_dependency_struct.h"},
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (Name "@NsConstr" "A"),
          structSizeof = 8,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc =
                "circular_dependency_struct.h:8:12",
                fieldName = NamePair {
                  nameC = Name "toB",
                  nameHsIdent = Identifier
                    "a_toB"},
                fieldComment = Nothing},
              structFieldType = TypeStruct
                NamePair {
                  nameC = Name "b",
                  nameHsIdent = Identifier "B"}
                NameOriginInSource,
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = Nothing,
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}}],
  unitDeps = [
    "circular_dependency_struct"]}
