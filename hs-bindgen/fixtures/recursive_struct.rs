/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct linked_list_A_s {
    pub x: ::std::os::raw::c_int,
    pub next: *mut linked_list_A_s,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linked_list_A_s"][::std::mem::size_of::<linked_list_A_s>() - 16usize];
    ["Alignment of linked_list_A_s"][::std::mem::align_of::<linked_list_A_s>() - 8usize];
    [
        "Offset of field: linked_list_A_s::x",
    ][::std::mem::offset_of!(linked_list_A_s, x) - 0usize];
    [
        "Offset of field: linked_list_A_s::next",
    ][::std::mem::offset_of!(linked_list_A_s, next) - 8usize];
};
pub type linked_list_A_t = linked_list_A_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct linked_list_B_t {
    pub x: ::std::os::raw::c_int,
    pub next: *mut linked_list_B_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linked_list_B_t"][::std::mem::size_of::<linked_list_B_t>() - 16usize];
    ["Alignment of linked_list_B_t"][::std::mem::align_of::<linked_list_B_t>() - 8usize];
    [
        "Offset of field: linked_list_B_t::x",
    ][::std::mem::offset_of!(linked_list_B_t, x) - 0usize];
    [
        "Offset of field: linked_list_B_t::next",
    ][::std::mem::offset_of!(linked_list_B_t, next) - 8usize];
};
