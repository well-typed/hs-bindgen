TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "program_slicing_selection.h:7:6",
        declId = NamePair {
          nameC = Name
            "FileOperationStatus",
          nameHsIdent = HsIdentifier
            "FileOperationStatus"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "program_slicing_selection.h",
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "FileOperationStatus",
            newtypeField = HsName
              "@NsVar"
              "un_FileOperationStatus"},
          enumType = TypePrim
            (PrimIntegral PrimInt Signed),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantLoc =
              "program_slicing_selection.h:8:3",
              enumConstantName = NamePair {
                nameC = Name "SUCCESS",
                nameHsIdent = HsIdentifier
                  "SUCCESS"},
              enumConstantValue = 0,
              enumConstantComment = Nothing},
            EnumConstant {
              enumConstantLoc =
              "program_slicing_selection.h:9:3",
              enumConstantName = NamePair {
                nameC = Name "NOT_FOUND",
                nameHsIdent = HsIdentifier
                  "NOT_FOUND"},
              enumConstantValue = 2,
              enumConstantComment = Nothing},
            EnumConstant {
              enumConstantLoc =
              "program_slicing_selection.h:10:3",
              enumConstantName = NamePair {
                nameC = Name
                  "PERMISSION_DENIED",
                nameHsIdent = HsIdentifier
                  "PERMISSION_DENIED"},
              enumConstantValue = 13,
              enumConstantComment = Nothing},
            EnumConstant {
              enumConstantLoc =
              "program_slicing_selection.h:11:3",
              enumConstantName = NamePair {
                nameC = Name "INVALID_ARGUMENT",
                nameHsIdent = HsIdentifier
                  "INVALID_ARGUMENT"},
              enumConstantValue = 22,
              enumConstantComment = Nothing},
            EnumConstant {
              enumConstantLoc =
              "program_slicing_selection.h:12:3",
              enumConstantName = NamePair {
                nameC = Name "OUT_OF_MEMORY",
                nameHsIdent = HsIdentifier
                  "OUT_OF_MEMORY"},
              enumConstantValue = 12,
              enumConstantComment = Nothing},
            EnumConstant {
              enumConstantLoc =
              "program_slicing_selection.h:13:3",
              enumConstantName = NamePair {
                nameC = Name
                  "CUSTOM_ERROR_OTHER",
                nameHsIdent = HsIdentifier
                  "CUSTOM_ERROR_OTHER"},
              enumConstantValue = `-1`,
              enumConstantComment =
              Nothing}]},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "program_slicing_selection.h:16:8",
        declId = NamePair {
          nameC = Name
            "FileOperationRecord",
          nameHsIdent = HsIdentifier
            "FileOperationRecord"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "program_slicing_selection.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName
              "@NsConstr"
              "FileOperationRecord"),
          structSizeof = 16,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldLoc =
              "program_slicing_selection.h:17:28",
              structFieldName = NamePair {
                nameC = Name "status",
                nameHsIdent = HsIdentifier
                  "fileOperationRecord_status"},
              structFieldType = TypeEnum
                NamePair {
                  nameC = Name
                    "FileOperationStatus",
                  nameHsIdent = HsIdentifier
                    "FileOperationStatus"}
                NameOriginInSource,
              structFieldOffset = 0,
              structFieldWidth = Nothing,
              structFieldComment = Nothing},
            StructField {
              structFieldLoc =
              "program_slicing_selection.h:18:10",
              structFieldName = NamePair {
                nameC = Name "bytes_processed",
                nameHsIdent = HsIdentifier
                  "fileOperationRecord_bytes_processed"},
              structFieldType = TypeExtBinding
                ResolvedExtBinding {
                  extCName = QualName {
                    qualNameName = Name "size_t",
                    qualNameKind =
                    NameKindOrdinary},
                  extHsRef = ExtHsRef {
                    extHsRefModule = HsModuleName
                      "HsBindgen.Runtime.Prelude",
                    extHsRefIdentifier =
                    HsIdentifier "CSize"},
                  extHsSpec = TypeSpec {
                    typeSpecModule = Just
                      (HsModuleName
                        "HsBindgen.Runtime.Prelude"),
                    typeSpecIdentifier = Just
                      (HsIdentifier "CSize"),
                    typeSpecInstances = Map.fromList
                      [
                        _×_
                          Eq
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Ord
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Enum
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Ix
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Bounded
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Read
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Show
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Bits
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          FiniteBits
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Integral
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Num
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Real
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          StaticSize
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          ReadRaw
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          WriteRaw
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Storable
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = [
                                ]})]}},
              structFieldOffset = 64,
              structFieldWidth = Nothing,
              structFieldComment = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "program_slicing_selection.h:21:26",
        declId = NamePair {
          nameC = Name "read_file_chunk",
          nameHsIdent = HsIdentifier
            "read_file_chunk"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "program_slicing_selection.h",
        declComment = Nothing},
      declKind = DeclFunction
        Function {
          functionArgs = [
            _×_
              (Just
                NamePair {
                  nameC = Name "file_ptr",
                  nameHsIdent = HsIdentifier
                    "file_ptr"})
              (TypePointer
                (TypeExtBinding
                  ResolvedExtBinding {
                    extCName = QualName {
                      qualNameName = Name "FILE",
                      qualNameKind =
                      NameKindOrdinary},
                    extHsRef = ExtHsRef {
                      extHsRefModule = HsModuleName
                        "HsBindgen.Runtime.Prelude",
                      extHsRefIdentifier =
                      HsIdentifier "CFile"},
                    extHsSpec = TypeSpec {
                      typeSpecModule = Just
                        (HsModuleName
                          "HsBindgen.Runtime.Prelude"),
                      typeSpecIdentifier = Just
                        (HsIdentifier "CFile"),
                      typeSpecInstances = Map.fromList
                        []}})),
            _×_
              (Just
                NamePair {
                  nameC = Name "buffer",
                  nameHsIdent = HsIdentifier
                    "buffer"})
              (TypePointer TypeVoid),
            _×_
              (Just
                NamePair {
                  nameC = Name "bytes_to_read",
                  nameHsIdent = HsIdentifier
                    "bytes_to_read"})
              (TypeExtBinding
                ResolvedExtBinding {
                  extCName = QualName {
                    qualNameName = Name "size_t",
                    qualNameKind =
                    NameKindOrdinary},
                  extHsRef = ExtHsRef {
                    extHsRefModule = HsModuleName
                      "HsBindgen.Runtime.Prelude",
                    extHsRefIdentifier =
                    HsIdentifier "CSize"},
                  extHsSpec = TypeSpec {
                    typeSpecModule = Just
                      (HsModuleName
                        "HsBindgen.Runtime.Prelude"),
                    typeSpecIdentifier = Just
                      (HsIdentifier "CSize"),
                    typeSpecInstances = Map.fromList
                      [
                        _×_
                          Eq
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Ord
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Enum
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Ix
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Bounded
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Read
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Show
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Bits
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          FiniteBits
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Integral
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Num
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Real
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          StaticSize
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          ReadRaw
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          WriteRaw
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Storable
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = [
                                ]})]}})],
          functionAttrs =
          FunctionAttributes
            ImpureFunction,
          functionRes = TypeEnum
            NamePair {
              nameC = Name
                "FileOperationStatus",
              nameHsIdent = HsIdentifier
                "FileOperationStatus"}
            NameOriginInSource},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = [
    "stdint",
    "alltypes",
    "stdint",
    "stddef",
    "errno",
    "features",
    "time",
    "stdio",
    "errno",
    "program_slicing_selection"]}
