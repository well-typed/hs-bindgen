TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:15:8",
        declId = NamePair {
          nameC = CName "a",
          nameHsIdent = HsIdentifier "A"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "A"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:16:8",
        declId = NamePair {
          nameC = CName "struct1",
          nameHsIdent = HsIdentifier
            "Struct1"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct1"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:19:8",
        declId = NamePair {
          nameC = CName "b_s",
          nameHsIdent = HsIdentifier
            "B_s"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "B_s"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:20:8",
        declId = NamePair {
          nameC = CName "struct2_s",
          nameHsIdent = HsIdentifier
            "Struct2_s"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName
              "@NsConstr"
              "Struct2_s"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:23:36",
        declId = NamePair {
          nameC = CName "c",
          nameHsIdent = HsIdentifier "C"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "C"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:24:36",
        declId = NamePair {
          nameC = CName "struct3",
          nameHsIdent = HsIdentifier
            "Struct3"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct3"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:27:15",
        declId = NamePair {
          nameC = CName "d",
          nameHsIdent = HsIdentifier "D"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "D"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:28:15",
        declId = NamePair {
          nameC = CName "struct4",
          nameHsIdent = HsIdentifier
            "Struct4"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct4"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:31:15",
        declId = NamePair {
          nameC = CName "e_s",
          nameHsIdent = HsIdentifier
            "E_s"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "E_s"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:32:15",
        declId = NamePair {
          nameC = CName "struct5_s",
          nameHsIdent = HsIdentifier
            "Struct5_s"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName
              "@NsConstr"
              "Struct5_s"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:35:9",
        declId = NamePair {
          nameC = CName "f",
          nameHsIdent = HsIdentifier "F"},
        declOrigin = NameOriginGenerated
          (AnonId "named_vs_anon.h:35:9"),
        declAliases = [CName "f"],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "F"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:36:9",
        declId = NamePair {
          nameC = CName "typedef1",
          nameHsIdent = HsIdentifier
            "Typedef1"},
        declOrigin = NameOriginGenerated
          (AnonId "named_vs_anon.h:36:9"),
        declAliases = [
          CName "typedef1"],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Typedef1"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:39:9",
        declId = NamePair {
          nameC = CName "g",
          nameHsIdent = HsIdentifier "G"},
        declOrigin = NameOriginGenerated
          (AnonId "named_vs_anon.h:39:9"),
        declAliases = [CName "g"],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "G"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:40:9",
        declId = NamePair {
          nameC = CName "typedef2",
          nameHsIdent = HsIdentifier
            "Typedef2"},
        declOrigin = NameOriginGenerated
          (AnonId "named_vs_anon.h:40:9"),
        declAliases = [
          CName "typedef2"],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Typedef2"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:43:9",
        declId = NamePair {
          nameC = CName "h",
          nameHsIdent = HsIdentifier "H"},
        declOrigin = NameOriginGenerated
          (AnonId "named_vs_anon.h:43:9"),
        declAliases = [CName "h"],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "H"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "named_vs_anon.h:44:9",
        declId = NamePair {
          nameC = CName "typedef3",
          nameHsIdent = HsIdentifier
            "Typedef3"},
        declOrigin = NameOriginGenerated
          (AnonId "named_vs_anon.h:44:9"),
        declAliases = [
          CName "typedef3"],
        declHeader = "named_vs_anon.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Typedef3"),
          structSizeof = 0,
          structAlignment = 1,
          structFields = [],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["named_vs_anon"]}
