/* automatically generated by rust-bindgen 0.70.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct foo {
    pub i: ::std::os::raw::c_int,
    pub c: ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of foo"][::std::mem::size_of::<foo>() - 8usize];
    ["Alignment of foo"][::std::mem::align_of::<foo>() - 4usize];
    ["Offset of field: foo::i"][::std::mem::offset_of!(foo, i) - 0usize];
    ["Offset of field: foo::c"][::std::mem::offset_of!(foo, c) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bar {
    pub foo1: foo,
    pub foo2: foo,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bar"][::std::mem::size_of::<bar>() - 16usize];
    ["Alignment of bar"][::std::mem::align_of::<bar>() - 4usize];
    ["Offset of field: bar::foo1"][::std::mem::offset_of!(bar, foo1) - 0usize];
    ["Offset of field: bar::foo2"][::std::mem::offset_of!(bar, foo2) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ex3 {
    pub __bindgen_anon_1: ex3__bindgen_ty_1,
    pub ex3_c: f32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ex3__bindgen_ty_1 {
    pub ex3_a: ::std::os::raw::c_int,
    pub ex3_b: ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ex3__bindgen_ty_1"][::std::mem::size_of::<ex3__bindgen_ty_1>() - 8usize];
    [
        "Alignment of ex3__bindgen_ty_1",
    ][::std::mem::align_of::<ex3__bindgen_ty_1>() - 4usize];
    [
        "Offset of field: ex3__bindgen_ty_1::ex3_a",
    ][::std::mem::offset_of!(ex3__bindgen_ty_1, ex3_a) - 0usize];
    [
        "Offset of field: ex3__bindgen_ty_1::ex3_b",
    ][::std::mem::offset_of!(ex3__bindgen_ty_1, ex3_b) - 4usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ex3"][::std::mem::size_of::<ex3>() - 12usize];
    ["Alignment of ex3"][::std::mem::align_of::<ex3>() - 4usize];
    ["Offset of field: ex3::ex3_c"][::std::mem::offset_of!(ex3, ex3_c) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ex4_odd {
    pub ex4_odd_value: ::std::os::raw::c_int,
    pub next: *mut ex4_odd_ex4_even,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ex4_odd_ex4_even {
    pub ex4_even_value: f64,
    pub next: *mut ex4_odd,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ex4_odd_ex4_even"][::std::mem::size_of::<ex4_odd_ex4_even>() - 16usize];
    [
        "Alignment of ex4_odd_ex4_even",
    ][::std::mem::align_of::<ex4_odd_ex4_even>() - 8usize];
    [
        "Offset of field: ex4_odd_ex4_even::ex4_even_value",
    ][::std::mem::offset_of!(ex4_odd_ex4_even, ex4_even_value) - 0usize];
    [
        "Offset of field: ex4_odd_ex4_even::next",
    ][::std::mem::offset_of!(ex4_odd_ex4_even, next) - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ex4_odd"][::std::mem::size_of::<ex4_odd>() - 16usize];
    ["Alignment of ex4_odd"][::std::mem::align_of::<ex4_odd>() - 8usize];
    [
        "Offset of field: ex4_odd::ex4_odd_value",
    ][::std::mem::offset_of!(ex4_odd, ex4_odd_value) - 0usize];
    ["Offset of field: ex4_odd::next"][::std::mem::offset_of!(ex4_odd, next) - 8usize];
};
