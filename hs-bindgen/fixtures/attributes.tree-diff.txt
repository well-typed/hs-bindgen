TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "attributes.h:10:36",
        declId = NamePair {
          nameC = CName "foo",
          nameHsIdent = HsIdentifier
            "Foo"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "attributes.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Foo"),
          structSizeof = 5,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldLoc =
              "attributes.h:11:10",
              structFieldName = NamePair {
                nameC = CName "c",
                nameHsIdent = HsIdentifier
                  "foo_c"},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "attributes.h:12:10",
              structFieldName = NamePair {
                nameC = CName "i",
                nameHsIdent = HsIdentifier
                  "foo_i"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "attributes.h:16:15",
        declId = NamePair {
          nameC = CName "bar",
          nameHsIdent = HsIdentifier
            "Bar"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "attributes.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Bar"),
          structSizeof = 5,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldLoc =
              "attributes.h:17:10",
              structFieldName = NamePair {
                nameC = CName "c",
                nameHsIdent = HsIdentifier
                  "bar_c"},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "attributes.h:18:10",
              structFieldName = NamePair {
                nameC = CName "i",
                nameHsIdent = HsIdentifier
                  "bar_i"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "attributes.h:22:9",
        declId = NamePair {
          nameC = CName "baz",
          nameHsIdent = HsIdentifier
            "Baz"},
        declOrigin = NameOriginGenerated
          (AnonId "attributes.h:22:9"),
        declAliases = [CName "baz"],
        declHeader = "attributes.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Baz"),
          structSizeof = 5,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldLoc =
              "attributes.h:23:10",
              structFieldName = NamePair {
                nameC = CName "c",
                nameHsIdent = HsIdentifier
                  "baz_c"},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "attributes.h:24:10",
              structFieldName = NamePair {
                nameC = CName "i",
                nameHsIdent = HsIdentifier
                  "baz_i"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "attributes.h:28:9",
        declId = NamePair {
          nameC = CName "qux",
          nameHsIdent = HsIdentifier
            "Qux"},
        declOrigin = NameOriginGenerated
          (AnonId "attributes.h:28:9"),
        declAliases = [CName "qux"],
        declHeader = "attributes.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Qux"),
          structSizeof = 5,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldLoc =
              "attributes.h:29:10",
              structFieldName = NamePair {
                nameC = CName "c",
                nameHsIdent = HsIdentifier
                  "qux_c"},
              structFieldType = TypePrim
                (PrimChar
                  (PrimSignImplicit
                    (Just Signed))),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "attributes.h:30:10",
              structFieldName = NamePair {
                nameC = CName "i",
                nameHsIdent = HsIdentifier
                  "qux_i"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "attributes.h:34:16",
        declId = NamePair {
          nameC = CName "FILE",
          nameHsIdent = HsIdentifier
            "FILE"},
        declOrigin =
        NameOriginRenamedFrom
          (CName "__sFILE"),
        declAliases = [CName "FILE"],
        declHeader = "attributes.h"},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "FILE"),
          structSizeof = 16,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldLoc =
              "attributes.h:35:9",
              structFieldName = NamePair {
                nameC = CName "_r",
                nameHsIdent = HsIdentifier
                  "fILE__r"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "attributes.h:36:9",
              structFieldName = NamePair {
                nameC = CName "_w",
                nameHsIdent = HsIdentifier
                  "fILE__w"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 32,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "attributes.h:37:22",
              structFieldName = NamePair {
                nameC = CName "_close",
                nameHsIdent = HsIdentifier
                  "fILE__close"},
              structFieldType = TypePointer
                (TypeFun
                  [TypePointer TypeVoid]
                  (TypePrim
                    (PrimIntegral PrimInt Signed))),
              structFieldOffset = 64,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["attributes"]}
