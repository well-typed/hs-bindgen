TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "vector.h:1:9",
        declId = NamePair {
          nameC = Name "vector",
          nameHsIdent = HsIdentifier
            "Vector"},
        declOrigin = NameOriginGenerated
          (AnonId "vector.h:1:9"),
        declAliases = [Name "vector"],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["vector.h"],
            headerInclude = "vector.h"},
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Vector"),
          structSizeof = 16,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "vector.h:2:12",
                fieldName = NamePair {
                  nameC = Name "x",
                  nameHsIdent = HsIdentifier
                    "vector_x"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimFloating PrimDouble),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "vector.h:3:12",
                fieldName = NamePair {
                  nameC = Name "y",
                  nameHsIdent = HsIdentifier
                    "vector_y"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                (PrimFloating PrimDouble),
              structFieldOffset = 64,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "vector.h:6:9",
        declId = NamePair {
          nameC = Name "new_vector",
          nameHsIdent = HsIdentifier
            "new_vector"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["vector.h"],
            headerInclude = "vector.h"},
        declComment = Nothing},
      declKind = DeclFunction
        Function {
          functionArgs = [
            _×_
              (Just
                NamePair {
                  nameC = Name "x",
                  nameHsIdent = HsIdentifier "x"})
              (TypePrim
                (PrimFloating PrimDouble)),
            _×_
              (Just
                NamePair {
                  nameC = Name "y",
                  nameHsIdent = HsIdentifier "y"})
              (TypePrim
                (PrimFloating PrimDouble))],
          functionAttrs =
          FunctionAttributes
            ImpureFunction,
          functionRes = TypePointer
            (TypeTypedef
              (TypedefSquashed
                (Name "vector")
                (TypeStruct
                  NamePair {
                    nameC = Name "vector",
                    nameHsIdent = HsIdentifier
                      "Vector"}
                  (NameOriginGenerated
                    (AnonId "vector.h:1:9")))))},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["vector"]}
