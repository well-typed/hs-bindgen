foreign import capi safe "weird01.h func" func :: Ptr Bar ->
                                                  IO Unit
data Foo = Foo {foo_z :: CInt}
instance Storable Foo
    where {sizeOf = \_ -> 4 :: Int;
           alignment = \_ -> 4 :: Int;
           peek = \ptr_0 -> pure Foo <*> peekByteOff ptr_0 (0 :: Int);
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Foo foo_z_3 -> pokeByteOff ptr_1 (0 :: Int) foo_z_3}}
deriving stock instance Show Foo
deriving stock instance Eq Foo
data Bar = Bar {bar_x :: CInt}
instance Storable Bar
    where {sizeOf = \_ -> 4 :: Int;
           alignment = \_ -> 4 :: Int;
           peek = \ptr_0 -> pure Bar <*> peekByteOff ptr_0 (0 :: Int);
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Bar bar_x_3 -> pokeByteOff ptr_1 (0 :: Int) bar_x_3}}
deriving stock instance Show Bar
deriving stock instance Eq Bar
