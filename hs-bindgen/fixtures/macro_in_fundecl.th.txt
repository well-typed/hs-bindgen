-- addDependentFile examples/golden/macro_in_fundecl.h
-- #include <macro_in_fundecl.h>
-- char hs_bindgen_test_macro_in_fundecl_206ab5e09886d1e7 (F arg1, char arg2) { return quux(arg1, arg2); }
-- C *hs_bindgen_test_macro_in_fundecl_5e951ebfcf556c2b (float arg1, C *arg2) { return wam(arg1, arg2); }
-- char *hs_bindgen_test_macro_in_fundecl_beb332fafcb4f833 (float arg1, signed int (*arg2) (signed int arg1)) { return foo1(arg1, arg2); }
-- char *hs_bindgen_test_macro_in_fundecl_e1f27efd2405af7b (F arg1, signed int (*arg2) (signed int arg1)) { return foo2(arg1, arg2); }
-- C *hs_bindgen_test_macro_in_fundecl_4c3cb01285513c07 (float arg1, signed int (*arg2) (signed int arg1)) { return foo3(arg1, arg2); }
-- signed int (*hs_bindgen_test_macro_in_fundecl_105b4afb95e972a0 (signed long arg1)) (signed short arg1) { return bar1(arg1); }
-- signed int (*hs_bindgen_test_macro_in_fundecl_111e58aa3ace1ef5 (L arg1)) (signed short arg1) { return bar2(arg1); }
-- signed int (*hs_bindgen_test_macro_in_fundecl_ab5779d2bff0d08e (signed long arg1)) (S arg1) { return bar3(arg1); }
-- I (*hs_bindgen_test_macro_in_fundecl_819bcb2cfe998801 (signed long arg1)) (signed short arg1) { return bar4(arg1); }
-- signed int (*hs_bindgen_test_macro_in_fundecl_5ae188a985c17f69 (signed int arg1))[2][3] { return baz1(arg1); }
-- signed int (*hs_bindgen_test_macro_in_fundecl_5b4ef76ef034352c (signed int arg1))[2][3] { return baz2(arg1); }
-- signed int (*hs_bindgen_test_macro_in_fundecl_f47e020b23c5aa4d (signed int arg1))[2][3] { return baz3(arg1); }
-- I hs_bindgen_test_macro_in_fundecl_9d7e58d4e189732b (void) { return no_args_no_void(); }
newtype I
    = I {un_I :: CInt}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Bits,
                      Bounded,
                      Enum,
                      FiniteBits,
                      Integral,
                      Ix,
                      Num,
                      Real)
newtype C
    = C {un_C :: CChar}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Bits,
                      Bounded,
                      Enum,
                      FiniteBits,
                      Integral,
                      Ix,
                      Num,
                      Real)
newtype F
    = F {un_F :: CFloat}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Enum,
                      Floating,
                      Fractional,
                      Num,
                      Real,
                      RealFloat,
                      RealFrac)
newtype L
    = L {un_L :: CLong}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Bits,
                      Bounded,
                      Enum,
                      FiniteBits,
                      Integral,
                      Ix,
                      Num,
                      Real)
newtype S
    = S {un_S :: CShort}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Bits,
                      Bounded,
                      Enum,
                      FiniteBits,
                      Integral,
                      Ix,
                      Num,
                      Real)
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_206ab5e09886d1e7" quux :: F ->
                                                                                      CChar ->
                                                                                      IO CChar
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_5e951ebfcf556c2b" wam :: CFloat ->
                                                                                     Ptr C ->
                                                                                     IO (Ptr C)
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_beb332fafcb4f833" foo1 :: CFloat ->
                                                                                      FunPtr (CInt ->
                                                                                              IO CInt) ->
                                                                                      IO (Ptr CChar)
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_e1f27efd2405af7b" foo2 :: F ->
                                                                                      FunPtr (CInt ->
                                                                                              IO CInt) ->
                                                                                      IO (Ptr CChar)
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_4c3cb01285513c07" foo3 :: CFloat ->
                                                                                      FunPtr (CInt ->
                                                                                              IO CInt) ->
                                                                                      IO (Ptr C)
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_105b4afb95e972a0" bar1 :: CLong ->
                                                                                      IO (FunPtr (CShort ->
                                                                                                  IO CInt))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_111e58aa3ace1ef5" bar2 :: L ->
                                                                                      IO (FunPtr (CShort ->
                                                                                                  IO CInt))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_ab5779d2bff0d08e" bar3 :: CLong ->
                                                                                      IO (FunPtr (S ->
                                                                                                  IO CInt))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_819bcb2cfe998801" bar4 :: CLong ->
                                                                                      IO (FunPtr (CShort ->
                                                                                                  IO I))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_5ae188a985c17f69" baz1 :: CInt ->
                                                                                      IO (Ptr (ConstantArray 2
                                                                                                             (ConstantArray 3
                                                                                                                            CInt)))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_5b4ef76ef034352c" baz2 :: CInt ->
                                                                                      IO (Ptr (ConstantArray 2
                                                                                                             (ConstantArray 3
                                                                                                                            CInt)))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_f47e020b23c5aa4d" baz3 :: CInt ->
                                                                                      IO (Ptr (ConstantArray 2
                                                                                                             (ConstantArray 3
                                                                                                                            CInt)))
foreign import ccall safe "hs_bindgen_test_macro_in_fundecl_9d7e58d4e189732b" no_args_no_void :: IO I
