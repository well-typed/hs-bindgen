-- addDependentFile musl-include/x86_64/bits/stdint.h
-- addDependentFile musl-include/x86_64/bits/alltypes.h
-- addDependentFile musl-include/x86_64/stdint.h
-- addDependentFile examples/golden/program_slicing_simple.h
{-| __C declaration:__ @uint32_t@

    __defined at:__ @bits\/alltypes.h:131:25@

    __exported by:__ @program_slicing_simple.h@
-}
newtype Uint32_t
    = Uint32_t {un_Uint32_t :: CUInt}
      {- ^ __C declaration:__ @uint32_t@

           __defined at:__ @bits\/alltypes.h:131:25@

           __exported by:__ @program_slicing_simple.h@
      -}
    deriving stock (Eq, Ord, Read, Show)
    deriving newtype (Storable,
                      Bits,
                      Bounded,
                      Enum,
                      FiniteBits,
                      Integral,
                      Ix,
                      Num,
                      Real)
{-| __C declaration:__ @foo@

    __defined at:__ @program_slicing_simple.h:3:8@

    __exported by:__ @program_slicing_simple.h@
-}
data Foo
    = Foo {foo_sixty_four :: Example.Uint64_t
           {- ^ __C declaration:__ @sixty_four@

                __defined at:__ @program_slicing_simple.h:4:12@

                __exported by:__ @program_slicing_simple.h@
           -},
           foo_thirty_two :: Uint32_t
           {- ^ __C declaration:__ @thirty_two@

                __defined at:__ @program_slicing_simple.h:5:12@

                __exported by:__ @program_slicing_simple.h@
           -}}
      {- ^ __C declaration:__ @foo@

           __defined at:__ @program_slicing_simple.h:3:8@

           __exported by:__ @program_slicing_simple.h@
      -}
    deriving stock (Eq, Show)
instance Storable Foo
    where sizeOf = \_ -> 16 :: Int
          alignment = \_ -> 8 :: Int
          peek = \ptr_0 -> (pure Foo <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Foo foo_sixty_four_3
                                       foo_thirty_two_4 -> pokeByteOff ptr_1 (0 :: Int) foo_sixty_four_3 >> pokeByteOff ptr_1 (8 :: Int) foo_thirty_two_4
