WrapCHeader
  (Header
    [
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:1:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "INCR",
            macroArgs = [CName "x"],
            macroBody = MApp
              MAdd
              [
                MTerm (MVar (CName "x") []),
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "1",
                      integerLiteralType = Just
                        (_×_ PrimInt Signed),
                      integerLiteralValue = 1})]},
          macroDeclMacroTy =
          "(forall a. Add a (IntLike (IntLike (Int Signed))) => (a -> AddRes a (IntLike (IntLike (Int Signed)))))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:1:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:2:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "ADD",
            macroArgs = [
              CName "x",
              CName "y"],
            macroBody = MApp
              MAdd
              [
                MTerm (MVar (CName "x") []),
                MTerm (MVar (CName "y") [])]},
          macroDeclMacroTy =
          "(forall a b. Add a b => (a -> b -> AddRes a b))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:2:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:4:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "ID",
            macroArgs = [CName "X"],
            macroBody = MTerm
              (MVar (CName "X") [])},
          macroDeclMacroTy =
          "(forall a. (a -> a))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:4:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:5:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "CONST",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MTerm
              (MVar (CName "X") [])},
          macroDeclMacroTy =
          "(forall a b. (a -> b -> a))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:5:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:7:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "CMP",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MApp
              MRelLT
              [
                MTerm (MVar (CName "X") []),
                MTerm (MVar (CName "Y") [])]},
          macroDeclMacroTy =
          "(forall a b. RelOrd a b => (a -> b -> IntLike (IntLike (Int Signed))))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:7:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:8:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FUN1",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MApp
              MAdd
              [
                MTerm (MVar (CName "X") []),
                MApp
                  MMult
                  [
                    MTerm
                      (MInt
                        IntegerLiteral {
                          integerLiteralText = "12ull",
                          integerLiteralType = Just
                            (_×_ PrimLongLong Unsigned),
                          integerLiteralValue = 12}),
                    MTerm (MVar (CName "Y") [])]]},
          macroDeclMacroTy =
          "(forall a b. Add a (MultRes (IntLike (IntLike (LongLong Unsigned))) b) => Mult (IntLike (IntLike (LongLong Unsigned))) b => (a -> b -> AddRes a (MultRes (IntLike (IntLike (LongLong Unsigned))) b)))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:8:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:9:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FUN2",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MApp
              MShiftLeft
              [
                MTerm (MVar (CName "X") []),
                MApp
                  MMult
                  [
                    MTerm
                      (MInt
                        IntegerLiteral {
                          integerLiteralText = "3ull",
                          integerLiteralType = Just
                            (_×_ PrimLongLong Unsigned),
                          integerLiteralValue = 3}),
                    MTerm (MVar (CName "Y") [])]]},
          macroDeclMacroTy =
          "(forall a b. Mult (IntLike (IntLike (LongLong Unsigned))) b => IntLike b_10[tau] ~ MultRes (IntLike (IntLike (LongLong Unsigned))) b => (IntLike a -> b -> ShiftRes (IntLike a)))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:9:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:11:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "G",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MTerm
              (MVar
                (CName "CONST")
                [
                  MTerm
                    (MVar
                      (CName "INCR")
                      [MTerm (MVar (CName "Y") [])]),
                  MTerm
                    (MVar
                      (CName "ID")
                      [
                        MTerm
                          (MVar (CName "X") [])])])},
          macroDeclMacroTy =
          "(forall a b. Add b (IntLike (IntLike (Int Signed))) => (a -> b -> AddRes b (IntLike (IntLike (Int Signed)))))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:11:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:13:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "DIV1",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MApp
              MDiv
              [
                MTerm (MVar (CName "X") []),
                MApp
                  MAdd
                  [
                    MTerm (MVar (CName "Y") []),
                    MTerm
                      (MInt
                        IntegerLiteral {
                          integerLiteralText = "12u",
                          integerLiteralType = Just
                            (_×_ PrimInt Unsigned),
                          integerLiteralValue = 12})]]},
          macroDeclMacroTy =
          "(forall a b. Add b (IntLike (IntLike (Int Unsigned))) => Div a (AddRes b (IntLike (IntLike (Int Unsigned)))) => (a -> b -> DivRes a (AddRes b (IntLike (IntLike (Int Unsigned))))))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:13:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macro_functions.h:14:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "DIV2",
            macroArgs = [
              CName "X",
              CName "Y"],
            macroBody = MApp
              MDiv
              [
                MApp
                  MMult
                  [
                    MTerm
                      (MFloat
                        FloatingLiteral {
                          floatingLiteralText = "10.0f",
                          floatingLiteralType = Just
                            PrimFloat,
                          floatingLiteralFloatValue =
                          10.0,
                          floatingLiteralDoubleValue =
                          10.0}),
                    MTerm (MVar (CName "X") [])],
                MTerm (MVar (CName "Y") [])]},
          macroDeclMacroTy =
          "(forall a b. Mult (FloatLike FloatType) a => Div (MultRes (FloatLike FloatType) a) b => (a -> b -> DivRes (MultRes (FloatLike FloatType) a) b))",
          macroDeclSourceLoc =
          "examples/macro_functions.h:14:9"}])
