-- addDependentFile examples/golden/anonymous.h
{-| __C declaration:__ @S1_c@

    __defined at:__ @anonymous.h:3:3@

    __exported by:__ @anonymous.h@
-}
data S1_c
    = S1_c {s1_c_a :: CInt
            {- ^ __C declaration:__ @a@

                 __defined at:__ @anonymous.h:4:9@

                 __exported by:__ @anonymous.h@
            -},
            s1_c_b :: CInt
            {- ^ __C declaration:__ @b@

                 __defined at:__ @anonymous.h:5:9@

                 __exported by:__ @anonymous.h@
            -}}
      {- ^ __C declaration:__ @S1_c@

           __defined at:__ @anonymous.h:3:3@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S1_c
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure S1_c <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S1_c s1_c_a_3
                                        s1_c_b_4 -> pokeByteOff ptr_1 (0 :: Int) s1_c_a_3 >> pokeByteOff ptr_1 (4 :: Int) s1_c_b_4
{-| __C declaration:__ @S1@

    __defined at:__ @anonymous.h:2:8@

    __exported by:__ @anonymous.h@
-}
data S1
    = S1 {s1_c :: S1_c
          {- ^ __C declaration:__ @c@

               __defined at:__ @anonymous.h:6:5@

               __exported by:__ @anonymous.h@
          -},
          s1_d :: CInt
          {- ^ __C declaration:__ @d@

               __defined at:__ @anonymous.h:8:7@

               __exported by:__ @anonymous.h@
          -}}
      {- ^ __C declaration:__ @S1@

           __defined at:__ @anonymous.h:2:8@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S1
    where sizeOf = \_ -> 12 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure S1 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S1 s1_c_3
                                      s1_d_4 -> pokeByteOff ptr_1 (0 :: Int) s1_c_3 >> pokeByteOff ptr_1 (8 :: Int) s1_d_4
{-| __C declaration:__ @S2_inner_deep@

    __defined at:__ @anonymous.h:15:5@

    __exported by:__ @anonymous.h@
-}
data S2_inner_deep
    = S2_inner_deep {s2_inner_deep_b :: CInt
                     {- ^ __C declaration:__ @b@

                          __defined at:__ @anonymous.h:16:11@

                          __exported by:__ @anonymous.h@
                     -}}
      {- ^ __C declaration:__ @S2_inner_deep@

           __defined at:__ @anonymous.h:15:5@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S2_inner_deep
    where sizeOf = \_ -> 4 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> pure S2_inner_deep <*> peekByteOff ptr_0 (0 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S2_inner_deep s2_inner_deep_b_3 -> pokeByteOff ptr_1 (0 :: Int) s2_inner_deep_b_3
{-| __C declaration:__ @S2_inner@

    __defined at:__ @anonymous.h:13:3@

    __exported by:__ @anonymous.h@
-}
data S2_inner
    = S2_inner {s2_inner_a :: CInt
                {- ^ __C declaration:__ @a@

                     __defined at:__ @anonymous.h:14:9@

                     __exported by:__ @anonymous.h@
                -},
                s2_inner_deep :: S2_inner_deep
                {- ^ __C declaration:__ @deep@

                     __defined at:__ @anonymous.h:17:7@

                     __exported by:__ @anonymous.h@
                -}}
      {- ^ __C declaration:__ @S2_inner@

           __defined at:__ @anonymous.h:13:3@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S2_inner
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure S2_inner <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S2_inner s2_inner_a_3
                                            s2_inner_deep_4 -> pokeByteOff ptr_1 (0 :: Int) s2_inner_a_3 >> pokeByteOff ptr_1 (4 :: Int) s2_inner_deep_4
{-| __C declaration:__ @S2@

    __defined at:__ @anonymous.h:12:8@

    __exported by:__ @anonymous.h@
-}
data S2
    = S2 {s2_inner :: S2_inner
          {- ^ __C declaration:__ @inner@

               __defined at:__ @anonymous.h:18:5@

               __exported by:__ @anonymous.h@
          -},
          s2_d :: CInt
          {- ^ __C declaration:__ @d@

               __defined at:__ @anonymous.h:20:7@

               __exported by:__ @anonymous.h@
          -}}
      {- ^ __C declaration:__ @S2@

           __defined at:__ @anonymous.h:12:8@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S2
    where sizeOf = \_ -> 12 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure S2 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S2 s2_inner_3
                                      s2_d_4 -> pokeByteOff ptr_1 (0 :: Int) s2_inner_3 >> pokeByteOff ptr_1 (8 :: Int) s2_d_4
{-| __C declaration:__ @S3_c@

    __defined at:__ @anonymous.h:25:3@

    __exported by:__ @anonymous.h@
-}
data S3_c
    = S3_c {s3_c_a :: CInt
            {- ^ __C declaration:__ @a@

                 __defined at:__ @anonymous.h:26:9@

                 __exported by:__ @anonymous.h@
            -},
            s3_c_b :: CInt
            {- ^ __C declaration:__ @b@

                 __defined at:__ @anonymous.h:27:9@

                 __exported by:__ @anonymous.h@
            -}}
      {- ^ __C declaration:__ @S3_c@

           __defined at:__ @anonymous.h:25:3@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S3_c
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 4 :: Int
          peek = \ptr_0 -> (pure S3_c <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (4 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S3_c s3_c_a_3
                                        s3_c_b_4 -> pokeByteOff ptr_1 (0 :: Int) s3_c_a_3 >> pokeByteOff ptr_1 (4 :: Int) s3_c_b_4
{-| __C declaration:__ @S3@

    __defined at:__ @anonymous.h:24:8@

    __exported by:__ @anonymous.h@
-}
data S3
    = S3 {s3_c :: (Ptr (Ptr S3_c))
          {- ^ __C declaration:__ @c@

               __defined at:__ @anonymous.h:28:7@

               __exported by:__ @anonymous.h@
          -},
          s3_d :: CInt
          {- ^ __C declaration:__ @d@

               __defined at:__ @anonymous.h:30:7@

               __exported by:__ @anonymous.h@
          -}}
      {- ^ __C declaration:__ @S3@

           __defined at:__ @anonymous.h:24:8@

           __exported by:__ @anonymous.h@
      -}
    deriving stock (Eq, Show)
instance Storable S3
    where sizeOf = \_ -> 16 :: Int
          alignment = \_ -> 8 :: Int
          peek = \ptr_0 -> (pure S3 <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   S3 s3_c_3
                                      s3_d_4 -> pokeByteOff ptr_1 (0 :: Int) s3_c_3 >> pokeByteOff ptr_1 (8 :: Int) s3_d_4
