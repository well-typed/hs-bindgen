/* automatically generated by rust-bindgen 0.71.1 */

#[derive(PartialEq, Copy, Clone, Hash, Debug, Default)]
#[repr(C)]
pub struct __BindgenComplex<T> {
    pub re: T,
    pub im: T,
}
unsafe extern "C" {
    pub static mut global_complex_float: __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub static mut global_complex_double: __BindgenComplex<f64>;
}
unsafe extern "C" {
    pub static mut global_complex_float_flipped: __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub static mut global_complex_double_flipped: __BindgenComplex<f64>;
}
unsafe extern "C" {
    pub static mut global_Complex_float: __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub static mut global_Complex_double: __BindgenComplex<f64>;
}
unsafe extern "C" {
    pub static mut global_Complex_float_flipped: __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub static mut global_Complex_double_flipped: __BindgenComplex<f64>;
}
unsafe extern "C" {
    pub static const_complex_float: __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub static const_complex_double: __BindgenComplex<f64>;
}
unsafe extern "C" {
    pub static mut volatile_complex_float: __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub static mut volatile_complex_double: __BindgenComplex<f64>;
}
unsafe extern "C" {
    pub fn multiply_complex_f(
        a: __BindgenComplex<f32>,
        b: __BindgenComplex<f32>,
    ) -> __BindgenComplex<f32>;
}
unsafe extern "C" {
    pub fn add_complex(
        a: __BindgenComplex<f64>,
        b: __BindgenComplex<f64>,
    ) -> __BindgenComplex<f64>;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct complex_object_t {
    pub velocity: __BindgenComplex<f32>,
    pub position: __BindgenComplex<f64>,
    pub id: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of complex_object_t"][::std::mem::size_of::<complex_object_t>() - 32usize];
    [
        "Alignment of complex_object_t",
    ][::std::mem::align_of::<complex_object_t>() - 8usize];
    [
        "Offset of field: complex_object_t::velocity",
    ][::std::mem::offset_of!(complex_object_t, velocity) - 0usize];
    [
        "Offset of field: complex_object_t::position",
    ][::std::mem::offset_of!(complex_object_t, position) - 8usize];
    [
        "Offset of field: complex_object_t::id",
    ][::std::mem::offset_of!(complex_object_t, id) - 24usize];
};
unsafe extern "C" {
    pub static mut complex_float_array: [__BindgenComplex<f32>; 10usize];
}
unsafe extern "C" {
    pub static mut complex_double_array: [__BindgenComplex<f64>; 10usize];
}
