/* automatically generated by rust-bindgen 0.70.1 */

pub type TC = ::std::os::raw::c_char;
extern "C" {
    pub fn quux1(x: ::std::os::raw::c_char, y: TC) -> ::std::os::raw::c_char;
}
extern "C" {
    pub fn quux2(x: ::std::os::raw::c_char, y: ::std::os::raw::c_char) -> TC;
}
extern "C" {
    pub fn wam1(x: f32, y: *mut TC) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn wam2(x: f32, y: *mut ::std::os::raw::c_char) -> *mut TC;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct struct1 {
    pub a: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of struct1"][::std::mem::size_of::<struct1>() - 4usize];
    ["Alignment of struct1"][::std::mem::align_of::<struct1>() - 4usize];
    ["Offset of field: struct1::a"][::std::mem::offset_of!(struct1, a) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct struct2 {
    pub a: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of struct2"][::std::mem::size_of::<struct2>() - 4usize];
    ["Alignment of struct2"][::std::mem::align_of::<struct2>() - 4usize];
    ["Offset of field: struct2::a"][::std::mem::offset_of!(struct2, a) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct struct3 {
    pub a: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of struct3"][::std::mem::size_of::<struct3>() - 4usize];
    ["Alignment of struct3"][::std::mem::align_of::<struct3>() - 4usize];
    ["Offset of field: struct3::a"][::std::mem::offset_of!(struct3, a) - 0usize];
};
pub type struct3_t = struct3;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct struct4 {
    pub a: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of struct4"][::std::mem::size_of::<struct4>() - 4usize];
    ["Alignment of struct4"][::std::mem::align_of::<struct4>() - 4usize];
    ["Offset of field: struct4::a"][::std::mem::offset_of!(struct4, a) - 0usize];
};
extern "C" {
    pub fn struct_typedef1(s: *mut struct2, x: ::std::os::raw::c_char);
}
extern "C" {
    pub fn struct_typedef2(s: *mut struct3_t, x: ::std::os::raw::c_char);
}
extern "C" {
    pub fn struct_typedef3(s: *mut struct4, x: ::std::os::raw::c_char);
}
