TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:1:13",
        declId = NamePair {
          nameC = CName "T1",
          nameHsIdent = HsIdentifier
            "T1"}},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "T1",
            newtypeField = HsName
              "@NsVar"
              "un_T1"},
          typedefType = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:2:14",
        declId = NamePair {
          nameC = CName "T2",
          nameHsIdent = HsIdentifier
            "T2"}},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "T2",
            newtypeField = HsName
              "@NsVar"
              "un_T2"},
          typedefType = TypePrim
            (PrimChar
              (PrimSignImplicit
                (Just Signed)))},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:4:9",
        declId = NamePair {
          nameC = CName "M1",
          nameHsIdent = HsIdentifier
            "M1"}},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "M1",
              newtypeField = HsName
                "@NsVar"
                "un_M1"},
            macroType = TypePrim
              (PrimIntegral PrimInt Signed)}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:5:9",
        declId = NamePair {
          nameC = CName "M2",
          nameHsIdent = HsIdentifier
            "M2"}},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "M2",
              newtypeField = HsName
                "@NsVar"
                "un_M2"},
            macroType = TypePrim
              (PrimChar
                (PrimSignImplicit Nothing))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:6:9",
        declId = NamePair {
          nameC = CName "M3",
          nameHsIdent = HsIdentifier
            "M3"}},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "M3",
              newtypeField = HsName
                "@NsVar"
                "un_M3"},
            macroType = TypeConstArray
              3
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:7:9",
        declId = NamePair {
          nameC = CName "M4",
          nameHsIdent = HsIdentifier
            "M4"}},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "M4",
              newtypeField = HsName
                "@NsVar"
                "un_M4"},
            macroType = TypePointer
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:9:8",
        declId = NamePair {
          nameC = CName "ExampleStruct",
          nameHsIdent = HsIdentifier
            "ExampleStruct"}},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName
              "@NsConstr"
              "ExampleStruct"),
          structSizeof = 16,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldLoc =
              "typedef_vs_macro.h:10:6",
              structFieldName = NamePair {
                nameC = CName "t1",
                nameHsIdent = HsIdentifier
                  "exampleStruct_t1"},
              structFieldType = TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = CName "T1",
                    nameHsIdent = HsIdentifier
                      "T1"}),
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "typedef_vs_macro.h:11:6",
              structFieldName = NamePair {
                nameC = CName "t2",
                nameHsIdent = HsIdentifier
                  "exampleStruct_t2"},
              structFieldType = TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = CName "T2",
                    nameHsIdent = HsIdentifier
                      "T2"}),
              structFieldOffset = 32,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "typedef_vs_macro.h:12:6",
              structFieldName = NamePair {
                nameC = CName "m1",
                nameHsIdent = HsIdentifier
                  "exampleStruct_m1"},
              structFieldType = TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = CName "M1",
                    nameHsIdent = HsIdentifier
                      "M1"}),
              structFieldOffset = 64,
              structFieldWidth = Nothing},
            StructField {
              structFieldLoc =
              "typedef_vs_macro.h:13:6",
              structFieldName = NamePair {
                nameC = CName "m2",
                nameHsIdent = HsIdentifier
                  "exampleStruct_m2"},
              structFieldType = TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = CName "M2",
                    nameHsIdent = HsIdentifier
                      "M2"}),
              structFieldOffset = 96,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:16:9",
        declId = NamePair {
          nameC = CName "uint64_t",
          nameHsIdent = HsIdentifier
            "Uint64_t"}},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Uint64_t",
              newtypeField = HsName
                "@NsVar"
                "un_Uint64_t"},
            macroType = TypePrim
              (PrimIntegral PrimInt Signed)}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "typedef_vs_macro.h:18:8",
        declId = NamePair {
          nameC = CName "foo",
          nameHsIdent = HsIdentifier
            "Foo"}},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Foo"),
          structSizeof = 8,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldLoc =
              "typedef_vs_macro.h:19:13",
              structFieldName = NamePair {
                nameC = CName "a",
                nameHsIdent = HsIdentifier
                  "foo_a"},
              structFieldType = TypePointer
                (TypeTypedef
                  (TypedefRegular
                    NamePair {
                      nameC = CName "uint64_t",
                      nameHsIdent = HsIdentifier
                        "Uint64_t"})),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["typedef_vs_macro"]}
