Header
  [
    DeclTypedef
      Typedef {
        typedefName = CName "T1",
        typedefType = TypePrim
          (PrimIntegral PrimInt Signed),
        typedefSourceLoc =
        "typedef_vs_macro.h:1:13"},
    DeclTypedef
      Typedef {
        typedefName = CName "T2",
        typedefType = TypePrim
          (PrimChar
            (PrimSignImplicit
              (Just Signed))),
        typedefSourceLoc =
        "typedef_vs_macro.h:2:14"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "typedef_vs_macro.h:4:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "M1",
          macroArgs = [],
          macroBody = TypeMacro
            (TypeName
              (TypeSpecifier
                (TypePrim
                  (PrimIntegral PrimInt Signed)))
              []
              Declarator {
                declaratorPointer = Pointers [],
                directDeclarator =
                IdentifierDeclarator
                  AbstractName
                  []})},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "typedef_vs_macro.h:4:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "typedef_vs_macro.h:5:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "M2",
          macroArgs = [],
          macroBody = TypeMacro
            (TypeName
              (TypeSpecifier
                (TypePrim
                  (PrimChar
                    (PrimSignImplicit Nothing))))
              []
              Declarator {
                declaratorPointer = Pointers [],
                directDeclarator =
                IdentifierDeclarator
                  AbstractName
                  []})},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "typedef_vs_macro.h:5:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "typedef_vs_macro.h:6:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "M3",
          macroArgs = [],
          macroBody = TypeMacro
            (TypeName
              (TypeSpecifier
                (TypePrim
                  (PrimIntegral PrimInt Signed)))
              []
              Declarator {
                declaratorPointer = Pointers [],
                directDeclarator =
                ArrayDirectDeclarator
                  ArrayDeclarator {
                    arrayDirectDeclarator =
                    IdentifierDeclarator
                      AbstractName
                      [],
                    arrayStatic = False,
                    arrayTypeQualifiers = [],
                    arraySize = ArraySize
                      (MTerm
                        (MInt
                          IntegerLiteral {
                            integerLiteralText = "3",
                            integerLiteralType = Int Signed,
                            integerLiteralValue = 3})),
                    arrayAttributes = []}})},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "typedef_vs_macro.h:6:9"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "typedef_vs_macro.h:7:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "M4",
          macroArgs = [],
          macroBody = TypeMacro
            (TypeName
              (TypeSpecifier
                (TypePrim
                  (PrimIntegral PrimInt Signed)))
              []
              Declarator {
                declaratorPointer = Pointers
                  [_Ã—_ [] []],
                directDeclarator =
                IdentifierDeclarator
                  AbstractName
                  []})},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "typedef_vs_macro.h:7:9"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "ExampleStruct"),
        structAliases = [],
        structSizeof = 16,
        structAlignment = 4,
        structFields = [
          StructField {
            fieldName = CName "t1",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "T1"),
            fieldSourceLoc =
            "typedef_vs_macro.h:10:6"},
          StructField {
            fieldName = CName "t2",
            fieldOffset = 32,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "T2"),
            fieldSourceLoc =
            "typedef_vs_macro.h:11:6"},
          StructField {
            fieldName = CName "m1",
            fieldOffset = 64,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "M1"),
            fieldSourceLoc =
            "typedef_vs_macro.h:12:6"},
          StructField {
            fieldName = CName "m2",
            fieldOffset = 96,
            fieldWidth = Nothing,
            fieldType = TypeTypedef
              (CName "M2"),
            fieldSourceLoc =
            "typedef_vs_macro.h:13:6"}],
        structFlam = Nothing,
        structSourceLoc =
        "typedef_vs_macro.h:9:8"},
    DeclMacro
      MacroDecl {
        macroDeclMacro = Macro {
          macroLoc = MultiLoc {
            multiLocExpansion =
            "typedef_vs_macro.h:16:9",
            multiLocPresumed = Nothing,
            multiLocSpelling = Nothing,
            multiLocFile = Nothing},
          macroName = CName "uint64_t",
          macroArgs = [],
          macroBody = TypeMacro
            (TypeName
              (TypeSpecifier
                (TypePrim
                  (PrimIntegral PrimInt Signed)))
              []
              Declarator {
                declaratorPointer = Pointers [],
                directDeclarator =
                IdentifierDeclarator
                  AbstractName
                  []})},
        macroDeclMacroTy = "PrimTy",
        macroDeclSourceLoc =
        "typedef_vs_macro.h:16:9"},
    DeclStruct
      Struct {
        structDeclPath = DeclPathName
          (CName "foo"),
        structAliases = [],
        structSizeof = 8,
        structAlignment = 8,
        structFields = [
          StructField {
            fieldName = CName "a",
            fieldOffset = 0,
            fieldWidth = Nothing,
            fieldType = TypePointer
              (TypeTypedef
                (CName "uint64_t")),
            fieldSourceLoc =
            "typedef_vs_macro.h:19:13"}],
        structFlam = Nothing,
        structSourceLoc =
        "typedef_vs_macro.h:18:8"}]
