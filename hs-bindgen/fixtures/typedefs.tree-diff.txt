TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "typedefs.h:1:13",
        declId = NamePair {
          nameC = Name "myint",
          nameHsIdent = Identifier
            "Myint"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["typedefs.h"],
            headerInclude = "typedefs.h"},
        declComment = Nothing},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Myint",
            newtypeField = Name
              "@NsVar"
              "un_Myint"},
          typedefType = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "typedefs.h:2:15",
        declId = NamePair {
          nameC = Name "intptr",
          nameHsIdent = Identifier
            "Intptr"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["typedefs.h"],
            headerInclude = "typedefs.h"},
        declComment = Nothing},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Intptr",
            newtypeField = Name
              "@NsVar"
              "un_Intptr"},
          typedefType = TypePointer
            (TypePrim
              (PrimIntegral PrimInt Signed))},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["typedefs"]}
