WrapCHeader
  (Header
    [
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion = SingleLoc {
                singleLocPath = [
                  "examples",
                  "enums.h"],
                singleLocLine = 2,
                singleLocColumn = 9},
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "ENUMS_H",
            macroArgs = [],
            macroBody = MTerm MEmpty},
          macroDeclMacroTy = "Empty"},
      DeclEnum
        Enu {
          enumTag = CName "first",
          enumType = TypePrim
            (PrimIntegral
              (PrimInt Unsigned)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "FIRST1",
              valueValue = 0},
            EnumValue {
              valueName = CName "FIRST2",
              valueValue = 1}]},
      DeclEnum
        Enu {
          enumTag = CName "second",
          enumType = TypePrim
            (PrimIntegral (PrimInt Signed)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "SECOND_A",
              valueValue = `-1`},
            EnumValue {
              valueName = CName "SECOND_B",
              valueValue = 0},
            EnumValue {
              valueName = CName "SECOND_C",
              valueValue = 1}]},
      DeclEnum
        Enu {
          enumTag = CName "same",
          enumType = TypePrim
            (PrimIntegral
              (PrimInt Unsigned)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "SAME_A",
              valueValue = 1},
            EnumValue {
              valueName = CName "SAME_B",
              valueValue = 1}]},
      DeclEnum
        Enu {
          enumTag = CName "packad",
          enumType = TypePrim
            (PrimChar (Just Unsigned)),
          enumSizeof = 1,
          enumAlignment = 1,
          enumValues = [
            EnumValue {
              valueName = CName "PACKED_A",
              valueValue = 0},
            EnumValue {
              valueName = CName "PACKED_B",
              valueValue = 1},
            EnumValue {
              valueName = CName "PACKED_C",
              valueValue = 2}]},
      DeclEnum
        Enu {
          enumTag = CName "enumA",
          enumType = TypePrim
            (PrimIntegral
              (PrimInt Unsigned)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "A_FOO",
              valueValue = 0},
            EnumValue {
              valueName = CName "A_BAR",
              valueValue = 1}]},
      DeclEnum
        Enu {
          enumTag = CName "enumB",
          enumType = TypePrim
            (PrimIntegral
              (PrimInt Unsigned)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "B_FOO",
              valueValue = 0},
            EnumValue {
              valueName = CName "B_BAR",
              valueValue = 1}]},
      DeclEnum
        Enu {
          enumTag = CName "enumC",
          enumType = TypePrim
            (PrimIntegral
              (PrimInt Unsigned)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "C_FOO",
              valueValue = 0},
            EnumValue {
              valueName = CName "C_BAR",
              valueValue = 1}]},
      DeclEnum
        Enu {
          enumTag = CName "enumD",
          enumType = TypePrim
            (PrimIntegral
              (PrimInt Unsigned)),
          enumSizeof = 4,
          enumAlignment = 4,
          enumValues = [
            EnumValue {
              valueName = CName "D_FOO",
              valueValue = 0},
            EnumValue {
              valueName = CName "D_BAR",
              valueValue = 1}]},
      DeclTypedef
        Typedef {
          typedefName = CName "enumD_t",
          typedefType = TypeEnum
            (CName "enumD")}])
