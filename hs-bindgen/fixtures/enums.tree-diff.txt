TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:4:6",
        declId = NamePair {
          nameC = Name "first",
          nameHsIdent = Identifier
            "First"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "First",
            newtypeField = Name
              "@NsVar"
              "un_First"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:5:5",
                fieldName = NamePair {
                  nameC = Name "FIRST1",
                  nameHsIdent = Identifier
                    "FIRST1"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:6:5",
                fieldName = NamePair {
                  nameC = Name "FIRST2",
                  nameHsIdent = Identifier
                    "FIRST2"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:9:6",
        declId = NamePair {
          nameC = Name "second",
          nameHsIdent = Identifier
            "Second"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Second",
            newtypeField = Name
              "@NsVar"
              "un_Second"},
          enumType = TypePrim
            (PrimIntegral PrimInt Signed),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:10:5",
                fieldName = NamePair {
                  nameC = Name "SECOND_A",
                  nameHsIdent = Identifier
                    "SECOND_A"},
                fieldComment = Nothing},
              enumConstantValue = `-1`},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:11:5",
                fieldName = NamePair {
                  nameC = Name "SECOND_B",
                  nameHsIdent = Identifier
                    "SECOND_B"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:12:5",
                fieldName = NamePair {
                  nameC = Name "SECOND_C",
                  nameHsIdent = Identifier
                    "SECOND_C"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:15:6",
        declId = NamePair {
          nameC = Name "same",
          nameHsIdent = Identifier
            "Same"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Same",
            newtypeField = Name
              "@NsVar"
              "un_Same"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:16:5",
                fieldName = NamePair {
                  nameC = Name "SAME_A",
                  nameHsIdent = Identifier
                    "SAME_A"},
                fieldComment = Nothing},
              enumConstantValue = 1},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:17:5",
                fieldName = NamePair {
                  nameC = Name "SAME_B",
                  nameHsIdent = Identifier
                    "SAME_B"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:20:6",
        declId = NamePair {
          nameC = Name "nonseq",
          nameHsIdent = Identifier
            "Nonseq"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Nonseq",
            newtypeField = Name
              "@NsVar"
              "un_Nonseq"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:21:5",
                fieldName = NamePair {
                  nameC = Name "NONSEQ_A",
                  nameHsIdent = Identifier
                    "NONSEQ_A"},
                fieldComment = Nothing},
              enumConstantValue = 200},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:22:5",
                fieldName = NamePair {
                  nameC = Name "NONSEQ_B",
                  nameHsIdent = Identifier
                    "NONSEQ_B"},
                fieldComment = Nothing},
              enumConstantValue = 301},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:23:5",
                fieldName = NamePair {
                  nameC = Name "NONSEQ_C",
                  nameHsIdent = Identifier
                    "NONSEQ_C"},
                fieldComment = Nothing},
              enumConstantValue = 404}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:26:6",
        declId = NamePair {
          nameC = Name "packed",
          nameHsIdent = Identifier
            "Packed"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Packed",
            newtypeField = Name
              "@NsVar"
              "un_Packed"},
          enumType = TypePrim
            (PrimChar
              (PrimSignExplicit Unsigned)),
          enumSizeof = 1,
          enumAlignment = 1,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:27:5",
                fieldName = NamePair {
                  nameC = Name "PACKED_A",
                  nameHsIdent = Identifier
                    "PACKED_A"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:27:15",
                fieldName = NamePair {
                  nameC = Name "PACKED_B",
                  nameHsIdent = Identifier
                    "PACKED_B"},
                fieldComment = Nothing},
              enumConstantValue = 1},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:27:25",
                fieldName = NamePair {
                  nameC = Name "PACKED_C",
                  nameHsIdent = Identifier
                    "PACKED_C"},
                fieldComment = Nothing},
              enumConstantValue = 2}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:30:9",
        declId = NamePair {
          nameC = Name "enumA",
          nameHsIdent = Identifier
            "EnumA"},
        declOrigin = NameOriginGenerated
          (AnonId "enums.h:30:9"),
        declAliases = [Name "enumA"],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "EnumA",
            newtypeField = Name
              "@NsVar"
              "un_EnumA"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:30:16",
                fieldName = NamePair {
                  nameC = Name "A_FOO",
                  nameHsIdent = Identifier
                    "A_FOO"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:30:23",
                fieldName = NamePair {
                  nameC = Name "A_BAR",
                  nameHsIdent = Identifier
                    "A_BAR"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:32:14",
        declId = NamePair {
          nameC = Name "enumB",
          nameHsIdent = Identifier
            "EnumB"},
        declOrigin = NameOriginInSource,
        declAliases = [Name "enumB"],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "EnumB",
            newtypeField = Name
              "@NsVar"
              "un_EnumB"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:32:22",
                fieldName = NamePair {
                  nameC = Name "B_FOO",
                  nameHsIdent = Identifier
                    "B_FOO"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:32:29",
                fieldName = NamePair {
                  nameC = Name "B_BAR",
                  nameHsIdent = Identifier
                    "B_BAR"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:34:6",
        declId = NamePair {
          nameC = Name "enumC",
          nameHsIdent = Identifier
            "EnumC"},
        declOrigin = NameOriginInSource,
        declAliases = [Name "enumC"],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "EnumC",
            newtypeField = Name
              "@NsVar"
              "un_EnumC"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:34:14",
                fieldName = NamePair {
                  nameC = Name "C_FOO",
                  nameHsIdent = Identifier
                    "C_FOO"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:34:21",
                fieldName = NamePair {
                  nameC = Name "C_BAR",
                  nameHsIdent = Identifier
                    "C_BAR"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "enums.h:37:6",
        declId = NamePair {
          nameC = Name "enumD_t",
          nameHsIdent = Identifier
            "EnumD_t"},
        declOrigin =
        NameOriginRenamedFrom
          (Name "enumD"),
        declAliases = [Name "enumD_t"],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["enums.h"],
            headerInclude = "enums.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "EnumD_t",
            newtypeField = Name
              "@NsVar"
              "un_EnumD_t"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:37:14",
                fieldName = NamePair {
                  nameC = Name "D_FOO",
                  nameHsIdent = Identifier
                    "D_FOO"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "enums.h:37:21",
                fieldName = NamePair {
                  nameC = Name "D_BAR",
                  nameHsIdent = Identifier
                    "D_BAR"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = ModuleName
            "Example",
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}}],
  unitDeps = ["enums"]}
