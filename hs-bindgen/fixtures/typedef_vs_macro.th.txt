newtype M1 = M1 {unM1 :: CInt}
newtype M2 = M2 {unM2 :: CChar}
newtype T1 = T1 {unT1 :: CInt}
deriving newtype instance Storable T1
newtype T2 = T2 {unT2 :: CChar}
deriving newtype instance Storable T2
data ExampleStruct
    = ExampleStruct {exampleStruct_t1 :: T1,
                     exampleStruct_t2 :: T2,
                     exampleStruct_m1 :: M1,
                     exampleStruct_m2 :: M2}
instance Storable ExampleStruct
    where {sizeOf = \_ -> 16;
           alignment = \_ -> 4;
           peek = \ptr_0 -> (((pure ExampleStruct <*> peekByteOff ptr_0 0) <*> peekByteOff ptr_0 4) <*> peekByteOff ptr_0 8) <*> peekByteOff ptr_0 12;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {ExampleStruct exampleStruct_t1_3
                                                   exampleStruct_t2_4
                                                   exampleStruct_m1_5
                                                   exampleStruct_m2_6 -> pokeByteOff ptr_1 0 exampleStruct_t1_3 >> (pokeByteOff ptr_1 4 exampleStruct_t2_4 >> (pokeByteOff ptr_1 8 exampleStruct_m1_5 >> pokeByteOff ptr_1 12 exampleStruct_m2_6))}}
deriving stock instance Show ExampleStruct
deriving stock instance Eq ExampleStruct
