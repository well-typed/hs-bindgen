/* automatically generated by rust-bindgen 0.70.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct S1 {
    pub a: ::std::os::raw::c_int,
    pub b: ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of S1"][::std::mem::size_of::<S1>() - 8usize];
    ["Alignment of S1"][::std::mem::align_of::<S1>() - 4usize];
    ["Offset of field: S1::a"][::std::mem::offset_of!(S1, a) - 0usize];
    ["Offset of field: S1::b"][::std::mem::offset_of!(S1, b) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct S2 {
    pub a: ::std::os::raw::c_char,
    pub b: ::std::os::raw::c_int,
    pub c: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of S2"][::std::mem::size_of::<S2>() - 12usize];
    ["Alignment of S2"][::std::mem::align_of::<S2>() - 4usize];
    ["Offset of field: S2::a"][::std::mem::offset_of!(S2, a) - 0usize];
    ["Offset of field: S2::b"][::std::mem::offset_of!(S2, b) - 4usize];
    ["Offset of field: S2::c"][::std::mem::offset_of!(S2, c) - 8usize];
};
pub type S2_t = S2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct S3_t {
    pub a: ::std::os::raw::c_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of S3_t"][::std::mem::size_of::<S3_t>() - 1usize];
    ["Alignment of S3_t"][::std::mem::align_of::<S3_t>() - 1usize];
    ["Offset of field: S3_t::a"][::std::mem::offset_of!(S3_t, a) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct S4 {
    pub b: ::std::os::raw::c_char,
    pub a: ::std::os::raw::c_int,
    pub c: *mut ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of S4"][::std::mem::size_of::<S4>() - 16usize];
    ["Alignment of S4"][::std::mem::align_of::<S4>() - 8usize];
    ["Offset of field: S4::b"][::std::mem::offset_of!(S4, b) - 0usize];
    ["Offset of field: S4::a"][::std::mem::offset_of!(S4, a) - 4usize];
    ["Offset of field: S4::c"][::std::mem::offset_of!(S4, c) - 8usize];
};
