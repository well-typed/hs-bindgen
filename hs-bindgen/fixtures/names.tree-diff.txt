TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:3:6",
        declId = NamePair {
          nameC = CName "by",
          nameHsIdent = HsIdentifier
            "by'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:4:6",
        declId = NamePair {
          nameC = CName "forall",
          nameHsIdent = HsIdentifier
            "forall'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:5:6",
        declId = NamePair {
          nameC = CName "mdo",
          nameHsIdent = HsIdentifier
            "mdo'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:6:6",
        declId = NamePair {
          nameC = CName "pattern",
          nameHsIdent = HsIdentifier
            "pattern'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:7:6",
        declId = NamePair {
          nameC = CName "proc",
          nameHsIdent = HsIdentifier
            "proc'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:8:6",
        declId = NamePair {
          nameC = CName "rec",
          nameHsIdent = HsIdentifier
            "rec'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:9:6",
        declId = NamePair {
          nameC = CName "using",
          nameHsIdent = HsIdentifier
            "using'"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:12:6",
        declId = NamePair {
          nameC = CName "anyclass",
          nameHsIdent = HsIdentifier
            "anyclass"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:13:6",
        declId = NamePair {
          nameC = CName "capi",
          nameHsIdent = HsIdentifier
            "capi"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:14:6",
        declId = NamePair {
          nameC = CName "cases",
          nameHsIdent = HsIdentifier
            "cases"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:15:6",
        declId = NamePair {
          nameC = CName "ccall",
          nameHsIdent = HsIdentifier
            "ccall"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:16:6",
        declId = NamePair {
          nameC = CName "dynamic",
          nameHsIdent = HsIdentifier
            "dynamic"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:17:6",
        declId = NamePair {
          nameC = CName "export",
          nameHsIdent = HsIdentifier
            "export"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:18:6",
        declId = NamePair {
          nameC = CName "family",
          nameHsIdent = HsIdentifier
            "family"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:19:6",
        declId = NamePair {
          nameC = CName "group",
          nameHsIdent = HsIdentifier
            "group"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:20:6",
        declId = NamePair {
          nameC = CName "interruptible",
          nameHsIdent = HsIdentifier
            "interruptible"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:21:6",
        declId = NamePair {
          nameC = CName "javascript",
          nameHsIdent = HsIdentifier
            "javascript"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:22:6",
        declId = NamePair {
          nameC = CName "label",
          nameHsIdent = HsIdentifier
            "label"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:23:6",
        declId = NamePair {
          nameC = CName "prim",
          nameHsIdent = HsIdentifier
            "prim"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:24:6",
        declId = NamePair {
          nameC = CName "role",
          nameHsIdent = HsIdentifier
            "role"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:25:6",
        declId = NamePair {
          nameC = CName "safe",
          nameHsIdent = HsIdentifier
            "safe"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:26:6",
        declId = NamePair {
          nameC = CName "stdcall",
          nameHsIdent = HsIdentifier
            "stdcall"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:27:6",
        declId = NamePair {
          nameC = CName "stock",
          nameHsIdent = HsIdentifier
            "stock"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:28:6",
        declId = NamePair {
          nameC = CName "unsafe",
          nameHsIdent = HsIdentifier
            "unsafe"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "names.h:29:6",
        declId = NamePair {
          nameC = CName "via",
          nameHsIdent = HsIdentifier
            "via"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "names.h"},
      declKind = DeclFunction
        Function {
          functionArgs = [],
          functionRes = TypeVoid},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["names"]}
