data Foo = Foo {foo_i :: CInt, foo_c :: CChar}
instance Storable Foo
    where {sizeOf = \_ -> 8;
           alignment = \_ -> 4;
           peek = \ptr_0 -> (pure Foo <*> peekByteOff ptr_0 0) <*> peekByteOff ptr_0 4;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Foo foo_i_3
                                         foo_c_4 -> pokeByteOff ptr_1 0 foo_i_3 >> pokeByteOff ptr_1 4 foo_c_4}}
data Bar = Bar {bar_foo1 :: Foo, bar_foo2 :: Foo}
instance Storable Bar
    where {sizeOf = \_ -> 16;
           alignment = \_ -> 4;
           peek = \ptr_0 -> (pure Bar <*> peekByteOff ptr_0 0) <*> peekByteOff ptr_0 8;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Bar bar_foo1_3
                                         bar_foo2_4 -> pokeByteOff ptr_1 0 bar_foo1_3 >> pokeByteOff ptr_1 8 bar_foo2_4}}
data Ex3 = Ex3 {ex3_ex3_c :: CFloat}
instance Storable Ex3
    where {sizeOf = \_ -> 12;
           alignment = \_ -> 4;
           peek = \ptr_0 -> pure Ex3 <*> peekByteOff ptr_0 8;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Ex3 ex3_ex3_c_3 -> pokeByteOff ptr_1 8 ex3_ex3_c_3}}
data Ex4_even
    = Ex4_even {ex4_even_ex4_even_value :: CDouble,
                ex4_even_next :: (Ptr Ex4_odd)}
instance Storable Ex4_even
    where {sizeOf = \_ -> 16;
           alignment = \_ -> 8;
           peek = \ptr_0 -> (pure Ex4_even <*> peekByteOff ptr_0 0) <*> peekByteOff ptr_0 8;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Ex4_even ex4_even_ex4_even_value_3
                                              ex4_even_next_4 -> pokeByteOff ptr_1 0 ex4_even_ex4_even_value_3 >> pokeByteOff ptr_1 8 ex4_even_next_4}}
data Ex4_odd
    = Ex4_odd {ex4_odd_ex4_odd_value :: CInt,
               ex4_odd_next :: (Ptr Ex4_even)}
instance Storable Ex4_odd
    where {sizeOf = \_ -> 16;
           alignment = \_ -> 8;
           peek = \ptr_0 -> (pure Ex4_odd <*> peekByteOff ptr_0 0) <*> peekByteOff ptr_0 8;
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Ex4_odd ex4_odd_ex4_odd_value_3
                                             ex4_odd_next_4 -> pokeByteOff ptr_1 0 ex4_odd_ex4_odd_value_3 >> pokeByteOff ptr_1 8 ex4_odd_next_4}}
