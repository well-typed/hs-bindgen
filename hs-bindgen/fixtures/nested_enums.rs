/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct exA {
    pub fieldA1: exA_enumA,
}
pub const exA_enumA_VALA_1: exA_enumA = 0;
pub const exA_enumA_VALA_2: exA_enumA = 1;
pub type exA_enumA = ::std::os::raw::c_uint;
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of exA"][::std::mem::size_of::<exA>() - 4usize];
    ["Alignment of exA"][::std::mem::align_of::<exA>() - 4usize];
    ["Offset of field: exA::fieldA1"][::std::mem::offset_of!(exA, fieldA1) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct exB {
    pub fieldB1: exB__bindgen_ty_1,
}
pub const exB_VALB_1: exB__bindgen_ty_1 = 0;
pub const exB_VALB_2: exB__bindgen_ty_1 = 1;
pub type exB__bindgen_ty_1 = ::std::os::raw::c_uint;
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of exB"][::std::mem::size_of::<exB>() - 4usize];
    ["Alignment of exB"][::std::mem::align_of::<exB>() - 4usize];
    ["Offset of field: exB::fieldB1"][::std::mem::offset_of!(exB, fieldB1) - 0usize];
};
