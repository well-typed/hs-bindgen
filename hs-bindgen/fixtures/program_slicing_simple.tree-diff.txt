TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "alltypes.h:131:25",
        declId = NamePair {
          nameC = Name "uint32_t",
          nameHsIdent = Identifier
            "Uint32_t"},
        declOrigin = NameOriginInSource,
        declAliases = [
          Name "uint_fast16_t",
          Name "uint_fast32_t",
          Name "uint_least32_t"],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["program_slicing_simple.h"],
            headerInclude =
            "bits/alltypes.h"},
        declComment = Nothing},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Uint32_t",
            newtypeField = Name
              "@NsVar"
              "un_Uint32_t"},
          typedefType = TypePrim
            (PrimIntegral
              PrimInt
              Unsigned)},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = Nothing,
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "program_slicing_simple.h:3:8",
        declId = NamePair {
          nameC = Name "foo",
          nameHsIdent = Identifier "Foo"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["program_slicing_simple.h"],
            headerInclude =
            "program_slicing_simple.h"},
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (Name "@NsConstr" "Foo"),
          structSizeof = 16,
          structAlignment = 8,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc =
                "program_slicing_simple.h:4:12",
                fieldName = NamePair {
                  nameC = Name "sixty_four",
                  nameHsIdent = Identifier
                    "foo_sixty_four"},
                fieldComment = Nothing},
              structFieldType = TypeExtBinding
                ResolvedExtBinding {
                  extCName = QualName {
                    qualNameName = Name "uint64_t",
                    qualNameKind =
                    NameKindOrdinary},
                  extHsRef = ExtRef {
                    extRefModule = ModuleName
                      "Example",
                    extRefIdentifier = Identifier
                      "Uint64_t"},
                  extHsSpec = CTypeSpec {
                    cTypeSpecModule = Just
                      (ModuleName "Example"),
                    cTypeSpecIdentifier = Just
                      (Identifier "Uint64_t"),
                    cTypeSpecInstances =
                    Map.fromList
                      [
                        _×_
                          Bits
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Bounded
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Enum
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Eq
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          FiniteBits
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Integral
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Ix
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Num
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Ord
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Read
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Real
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Show
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = []}),
                        _×_
                          Storable
                          (Require
                            InstanceSpec {
                              instanceSpecStrategy = Nothing,
                              instanceSpecConstraints = [
                                ]})]}},
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc =
                "program_slicing_simple.h:5:12",
                fieldName = NamePair {
                  nameC = Name "thirty_two",
                  nameHsIdent = Identifier
                    "foo_thirty_two"},
                fieldComment = Nothing},
              structFieldType = TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = Name "uint32_t",
                    nameHsIdent = Identifier
                      "Uint32_t"}),
              structFieldOffset = 64,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        CTypeSpec {
          cTypeSpecModule = Nothing,
          cTypeSpecIdentifier = Nothing,
          cTypeSpecInstances =
          Map.fromList []}}],
  unitDeps = [
    "stdint",
    "alltypes",
    "stdint",
    "program_slicing_simple"]}
