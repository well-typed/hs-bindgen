TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "typenames.h:14:6",
        declId = NamePair {
          nameC = Name "foo",
          nameHsIdent = Identifier "Foo"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["typenames.h"],
            headerInclude = "typenames.h"},
        declComment = Nothing},
      declKind = DeclEnum
        Enum {
          enumNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Foo",
            newtypeField = Name
              "@NsVar"
              "un_Foo"},
          enumType = TypePrim
            (PrimIntegral PrimInt Unsigned),
          enumSizeof = 4,
          enumAlignment = 4,
          enumConstants = [
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "typenames.h:15:2",
                fieldName = NamePair {
                  nameC = Name "FOO1",
                  nameHsIdent = Identifier
                    "FOO1"},
                fieldComment = Nothing},
              enumConstantValue = 0},
            EnumConstant {
              enumConstantInfo = FieldInfo {
                fieldLoc = "typenames.h:16:2",
                fieldName = NamePair {
                  nameC = Name "FOO2",
                  nameHsIdent = Identifier
                    "FOO2"},
                fieldComment = Nothing},
              enumConstantValue = 1}]},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "typenames.h:19:16",
        declId = NamePair {
          nameC = Name "foo",
          nameHsIdent = Identifier "Foo"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeaderInfo = Just
          HeaderInfo {
            headerMainHeaders = NE.fromList
              ["typenames.h"],
            headerInclude = "typenames.h"},
        declComment = Nothing},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = Name
              "@NsConstr"
              "Foo",
            newtypeField = Name
              "@NsVar"
              "un_Foo"},
          typedefType = TypePrim
            (PrimFloating PrimDouble)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["typenames"]}
