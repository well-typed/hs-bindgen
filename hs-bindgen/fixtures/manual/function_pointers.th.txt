-- addDependentFile examples/golden/manual/function_pointers.h
-- #include <manual/function_pointers.h>
-- signed int hs_bindgen_test_manualfunction_pointers_55e5eb89e54abf83 (signed int arg1) { return square(arg1); }
-- signed int hs_bindgen_test_manualfunction_pointers_680daf766a044980 (signed int arg1, signed int arg2) { return plus(arg1, arg2); }
-- signed int hs_bindgen_test_manualfunction_pointers_abcb860034253564 (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1(arg1, arg2); }
-- signed int hs_bindgen_test_manualfunction_pointers_1ad13c166a710f40 (signed int (*arg1) (signed int arg1, signed int arg2), signed int arg2, signed int arg3) { return apply2(arg1, arg2, arg3); }
-- signed int hs_bindgen_test_manualfunction_pointers_a8ef4d9e6ce68f54 (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1_pointer_arg(arg1, arg2); }
-- signed int hs_bindgen_test_manualfunction_pointers_7dc4caa1f7f0caf0 (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1_nopointer_arg(arg1, arg2); }
-- signed int (*const hs_bindgen_test_manualfunction_pointers_3612aa0d10e36d5b (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1_nopointer_res(); }
-- signed int hs_bindgen_test_manualfunction_pointers_cb3c687f16289bb3 (signed int arg1) { return square(arg1); }
-- signed int hs_bindgen_test_manualfunction_pointers_a9730564387164c0 (signed int arg1, signed int arg2) { return plus(arg1, arg2); }
-- signed int hs_bindgen_test_manualfunction_pointers_3fb9c4a14d502477 (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1(arg1, arg2); }
-- signed int hs_bindgen_test_manualfunction_pointers_75b5699fdabb6333 (signed int (*arg1) (signed int arg1, signed int arg2), signed int arg2, signed int arg3) { return apply2(arg1, arg2, arg3); }
-- signed int hs_bindgen_test_manualfunction_pointers_2d5144fc06502862 (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1_pointer_arg(arg1, arg2); }
-- signed int hs_bindgen_test_manualfunction_pointers_b7597a0c4856ebb3 (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1_nopointer_arg(arg1, arg2); }
-- signed int (*const hs_bindgen_test_manualfunction_pointers_be3907895c70597f (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return apply1_nopointer_res(); }
-- /* get_square_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_manualfunction_pointers_c41111f40a04cdc9 (void)) (signed int arg1) { return &square; } 
-- /* get_plus_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_manualfunction_pointers_bf838c747898dc42 (void)) (signed int arg1, signed int arg2) { return &plus; } 
-- /* get_apply1_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_manualfunction_pointers_4d1935e01bc37070 (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return &apply1; } 
-- /* get_apply2_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_manualfunction_pointers_40cb8952bacd236a (void)) (signed int (*arg1) (signed int arg1, signed int arg2), signed int arg2, signed int arg3) { return &apply2; } 
-- /* get_apply1_pointer_arg_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_manualfunction_pointers_653c5bde7704c3ca (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return &apply1_pointer_arg; } 
-- /* get_apply1_nopointer_arg_ptr */ __attribute__ ((const)) signed int (*hs_bindgen_test_manualfunction_pointers_3bb9417cd7afec81 (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return &apply1_nopointer_arg; } 
-- /* get_apply1_nopointer_res_ptr */ __attribute__ ((const)) signed int (*const (*hs_bindgen_test_manualfunction_pointers_f7a08d090f6f7b0f (void)) (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return &apply1_nopointer_res; } 
-- /* get_apply1_nopointer_var_ptr */ __attribute__ ((const)) signed int (*const *hs_bindgen_test_manualfunction_pointers_c4bb317da29227a6 (void)) (signed int (*arg1) (signed int arg1), signed int arg2) { return &apply1_nopointer_var; } 
-- /* get_apply1_struct_ptr */ __attribute__ ((const)) struct Apply1Struct const *hs_bindgen_test_manualfunction_pointers_6799ff6bc99dff2a (void) { return &apply1_struct; } 
-- /* get_apply1_union_ptr */ __attribute__ ((const)) union Apply1Union const *hs_bindgen_test_manualfunction_pointers_d32b4879673188b6 (void) { return &apply1_union; } 
{-| A struct field pointing to a function like apply1_nopointer().

__C declaration:__ @Apply1Struct@

__defined at:__ @manual\/function_pointers.h:35:8@

__exported by:__ @manual\/function_pointers.h@
-}
data Apply1Struct
    = Apply1Struct {apply1Struct_apply1_nopointer_struct_field :: (FunPtr (FunPtr (CInt ->
                                                                                   IO CInt) ->
                                                                           CInt -> IO CInt))
                    {- ^ __C declaration:__ @apply1_nopointer_struct_field@

                         __defined at:__ @manual\/function_pointers.h:36:16@

                         __exported by:__ @manual\/function_pointers.h@
                    -}}
      {- ^ A struct field pointing to a function like apply1_nopointer().

      __C declaration:__ @Apply1Struct@

      __defined at:__ @manual\/function_pointers.h:35:8@

      __exported by:__ @manual\/function_pointers.h@
      -}
    deriving stock (Eq, Show)
instance Storable Apply1Struct
    where sizeOf = \_ -> 8 :: Int
          alignment = \_ -> 8 :: Int
          peek = \ptr_0 -> pure Apply1Struct <*> peekByteOff ptr_0 (0 :: Int)
          poke = \ptr_1 -> \s_2 -> case s_2 of
                                   Apply1Struct apply1Struct_apply1_nopointer_struct_field_3 -> pokeByteOff ptr_1 (0 :: Int) apply1Struct_apply1_nopointer_struct_field_3
{-| A union field pointing to a function like apply1_nopointer().

__C declaration:__ @Apply1Union@

__defined at:__ @manual\/function_pointers.h:41:7@

__exported by:__ @manual\/function_pointers.h@
-}
newtype Apply1Union
    = Apply1Union {un_Apply1Union :: ByteArray}
      {- ^ A union field pointing to a function like apply1_nopointer().

      __C declaration:__ @Apply1Union@

      __defined at:__ @manual\/function_pointers.h:41:7@

      __exported by:__ @manual\/function_pointers.h@
      -}
deriving via (SizedByteArray 8 8) instance Storable Apply1Union
{-|

  __See:__ 'set_apply1Union_apply1_nopointer_union_field'

__C declaration:__ @apply1_nopointer_union_field@

__defined at:__ @manual\/function_pointers.h:42:16@

__exported by:__ @manual\/function_pointers.h@
-}
get_apply1Union_apply1_nopointer_union_field :: Apply1Union ->
                                                FunPtr (FunPtr (CInt -> IO CInt) -> CInt -> IO CInt)
{-|

  __See:__ 'set_apply1Union_apply1_nopointer_union_field'

__C declaration:__ @apply1_nopointer_union_field@

__defined at:__ @manual\/function_pointers.h:42:16@

__exported by:__ @manual\/function_pointers.h@
-}
get_apply1Union_apply1_nopointer_union_field = getUnionPayload
{-|

  __See:__ 'get_apply1Union_apply1_nopointer_union_field'

-}
set_apply1Union_apply1_nopointer_union_field :: FunPtr (FunPtr (CInt ->
                                                                IO CInt) ->
                                                        CInt -> IO CInt) ->
                                                Apply1Union
{-|

  __See:__ 'get_apply1Union_apply1_nopointer_union_field'

-}
set_apply1Union_apply1_nopointer_union_field = setUnionPayload
{-| __C declaration:__ @square@

    __defined at:__ @manual\/function_pointers.h:5:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_55e5eb89e54abf83" square :: CInt ->
                                                                                               IO CInt
{-| __C declaration:__ @plus@

    __defined at:__ @manual\/function_pointers.h:7:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_680daf766a044980" plus :: CInt ->
                                                                                             CInt ->
                                                                                             IO CInt
{-| __C declaration:__ @apply1@

    __defined at:__ @manual\/function_pointers.h:9:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_abcb860034253564" apply1 :: FunPtr (CInt ->
                                                                                                       IO CInt) ->
                                                                                               CInt ->
                                                                                               IO CInt
{-| __C declaration:__ @apply2@

    __defined at:__ @manual\/function_pointers.h:11:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_1ad13c166a710f40" apply2 :: FunPtr (CInt ->
                                                                                                       CInt ->
                                                                                                       IO CInt) ->
                                                                                               CInt ->
                                                                                               CInt ->
                                                                                               IO CInt
{-| Basically the same as apply1(), but here for illustratory purposes.

__C declaration:__ @apply1_pointer_arg@

__defined at:__ @manual\/function_pointers.h:20:12@

__exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_a8ef4d9e6ce68f54" apply1_pointer_arg :: FunPtr (CInt ->
                                                                                                                   IO CInt) ->
                                                                                                           CInt ->
                                                                                                           IO CInt
{-| A version of apply1_pointer_arg() that declares to take a argument of function type, rather than a pointer-to-function type.

__C declaration:__ @apply1_nopointer_arg@

__defined at:__ @manual\/function_pointers.h:24:12@

__exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_7dc4caa1f7f0caf0" apply1_nopointer_arg :: FunPtr (CInt ->
                                                                                                                     IO CInt) ->
                                                                                                             CInt ->
                                                                                                             IO CInt
{-| A function returning a pointer to a function like apply1_nopointer().

__C declaration:__ @apply1_nopointer_res@

__defined at:__ @manual\/function_pointers.h:29:21@

__exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_3612aa0d10e36d5b" apply1_nopointer_res :: IO (FunPtr (FunPtr (CInt ->
                                                                                                                                 IO CInt) ->
                                                                                                                         CInt ->
                                                                                                                         IO CInt))
{-| __C declaration:__ @square@

    __defined at:__ @manual\/function_pointers.h:5:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_cb3c687f16289bb3" square :: CInt ->
                                                                                               IO CInt
{-| __C declaration:__ @plus@

    __defined at:__ @manual\/function_pointers.h:7:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_a9730564387164c0" plus :: CInt ->
                                                                                             CInt ->
                                                                                             IO CInt
{-| __C declaration:__ @apply1@

    __defined at:__ @manual\/function_pointers.h:9:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_3fb9c4a14d502477" apply1 :: FunPtr (CInt ->
                                                                                                       IO CInt) ->
                                                                                               CInt ->
                                                                                               IO CInt
{-| __C declaration:__ @apply2@

    __defined at:__ @manual\/function_pointers.h:11:12@

    __exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_75b5699fdabb6333" apply2 :: FunPtr (CInt ->
                                                                                                       CInt ->
                                                                                                       IO CInt) ->
                                                                                               CInt ->
                                                                                               CInt ->
                                                                                               IO CInt
{-| Basically the same as apply1(), but here for illustratory purposes.

__C declaration:__ @apply1_pointer_arg@

__defined at:__ @manual\/function_pointers.h:20:12@

__exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_2d5144fc06502862" apply1_pointer_arg :: FunPtr (CInt ->
                                                                                                                   IO CInt) ->
                                                                                                           CInt ->
                                                                                                           IO CInt
{-| A version of apply1_pointer_arg() that declares to take a argument of function type, rather than a pointer-to-function type.

__C declaration:__ @apply1_nopointer_arg@

__defined at:__ @manual\/function_pointers.h:24:12@

__exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_b7597a0c4856ebb3" apply1_nopointer_arg :: FunPtr (CInt ->
                                                                                                                     IO CInt) ->
                                                                                                             CInt ->
                                                                                                             IO CInt
{-| A function returning a pointer to a function like apply1_nopointer().

__C declaration:__ @apply1_nopointer_res@

__defined at:__ @manual\/function_pointers.h:29:21@

__exported by:__ @manual\/function_pointers.h@
-}
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_be3907895c70597f" apply1_nopointer_res :: IO (FunPtr (FunPtr (CInt ->
                                                                                                                                 IO CInt) ->
                                                                                                                         CInt ->
                                                                                                                         IO CInt))
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_c41111f40a04cdc9" hs_bindgen_test_manualfunction_pointers_c41111f40a04cdc9 :: IO (FunPtr (CInt ->
                                                                                                                                                             IO CInt))
{-# NOINLINE square_ptr #-}
{-| __C declaration:__ @square@

    __defined at:__ @manual\/function_pointers.h:5:12@

    __exported by:__ @manual\/function_pointers.h@
-}
square_ptr :: FunPtr (CInt -> IO CInt)
{-| __C declaration:__ @square@

    __defined at:__ @manual\/function_pointers.h:5:12@

    __exported by:__ @manual\/function_pointers.h@
-}
square_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_c41111f40a04cdc9
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_bf838c747898dc42" hs_bindgen_test_manualfunction_pointers_bf838c747898dc42 :: IO (FunPtr (CInt ->
                                                                                                                                                             CInt ->
                                                                                                                                                             IO CInt))
{-# NOINLINE plus_ptr #-}
{-| __C declaration:__ @plus@

    __defined at:__ @manual\/function_pointers.h:7:12@

    __exported by:__ @manual\/function_pointers.h@
-}
plus_ptr :: FunPtr (CInt -> CInt -> IO CInt)
{-| __C declaration:__ @plus@

    __defined at:__ @manual\/function_pointers.h:7:12@

    __exported by:__ @manual\/function_pointers.h@
-}
plus_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_bf838c747898dc42
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_4d1935e01bc37070" hs_bindgen_test_manualfunction_pointers_4d1935e01bc37070 :: IO (FunPtr (FunPtr (CInt ->
                                                                                                                                                                     IO CInt) ->
                                                                                                                                                             CInt ->
                                                                                                                                                             IO CInt))
{-# NOINLINE apply1_ptr #-}
{-| __C declaration:__ @apply1@

    __defined at:__ @manual\/function_pointers.h:9:12@

    __exported by:__ @manual\/function_pointers.h@
-}
apply1_ptr :: FunPtr (FunPtr (CInt -> IO CInt) -> CInt -> IO CInt)
{-| __C declaration:__ @apply1@

    __defined at:__ @manual\/function_pointers.h:9:12@

    __exported by:__ @manual\/function_pointers.h@
-}
apply1_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_4d1935e01bc37070
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_40cb8952bacd236a" hs_bindgen_test_manualfunction_pointers_40cb8952bacd236a :: IO (FunPtr (FunPtr (CInt ->
                                                                                                                                                                     CInt ->
                                                                                                                                                                     IO CInt) ->
                                                                                                                                                             CInt ->
                                                                                                                                                             CInt ->
                                                                                                                                                             IO CInt))
{-# NOINLINE apply2_ptr #-}
{-| __C declaration:__ @apply2@

    __defined at:__ @manual\/function_pointers.h:11:12@

    __exported by:__ @manual\/function_pointers.h@
-}
apply2_ptr :: FunPtr (FunPtr (CInt -> CInt -> IO CInt) ->
                      CInt -> CInt -> IO CInt)
{-| __C declaration:__ @apply2@

    __defined at:__ @manual\/function_pointers.h:11:12@

    __exported by:__ @manual\/function_pointers.h@
-}
apply2_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_40cb8952bacd236a
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_653c5bde7704c3ca" hs_bindgen_test_manualfunction_pointers_653c5bde7704c3ca :: IO (FunPtr (FunPtr (CInt ->
                                                                                                                                                                     IO CInt) ->
                                                                                                                                                             CInt ->
                                                                                                                                                             IO CInt))
{-# NOINLINE apply1_pointer_arg_ptr #-}
{-| Basically the same as apply1(), but here for illustratory purposes.

__C declaration:__ @apply1_pointer_arg@

__defined at:__ @manual\/function_pointers.h:20:12@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_pointer_arg_ptr :: FunPtr (FunPtr (CInt -> IO CInt) ->
                                  CInt -> IO CInt)
{-| Basically the same as apply1(), but here for illustratory purposes.

__C declaration:__ @apply1_pointer_arg@

__defined at:__ @manual\/function_pointers.h:20:12@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_pointer_arg_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_653c5bde7704c3ca
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_3bb9417cd7afec81" hs_bindgen_test_manualfunction_pointers_3bb9417cd7afec81 :: IO (FunPtr (FunPtr (CInt ->
                                                                                                                                                                     IO CInt) ->
                                                                                                                                                             CInt ->
                                                                                                                                                             IO CInt))
{-# NOINLINE apply1_nopointer_arg_ptr #-}
{-| A version of apply1_pointer_arg() that declares to take a argument of function type, rather than a pointer-to-function type.

__C declaration:__ @apply1_nopointer_arg@

__defined at:__ @manual\/function_pointers.h:24:12@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_nopointer_arg_ptr :: FunPtr (FunPtr (CInt -> IO CInt) ->
                                    CInt -> IO CInt)
{-| A version of apply1_pointer_arg() that declares to take a argument of function type, rather than a pointer-to-function type.

__C declaration:__ @apply1_nopointer_arg@

__defined at:__ @manual\/function_pointers.h:24:12@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_nopointer_arg_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_3bb9417cd7afec81
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_f7a08d090f6f7b0f" hs_bindgen_test_manualfunction_pointers_f7a08d090f6f7b0f :: IO (FunPtr (IO (FunPtr (FunPtr (CInt ->
                                                                                                                                                                                 IO CInt) ->
                                                                                                                                                                         CInt ->
                                                                                                                                                                         IO CInt))))
{-# NOINLINE apply1_nopointer_res_ptr #-}
{-| A function returning a pointer to a function like apply1_nopointer().

__C declaration:__ @apply1_nopointer_res@

__defined at:__ @manual\/function_pointers.h:29:21@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_nopointer_res_ptr :: FunPtr (IO (FunPtr (FunPtr (CInt ->
                                                        IO CInt) ->
                                                CInt -> IO CInt)))
{-| A function returning a pointer to a function like apply1_nopointer().

__C declaration:__ @apply1_nopointer_res@

__defined at:__ @manual\/function_pointers.h:29:21@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_nopointer_res_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_f7a08d090f6f7b0f
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_c4bb317da29227a6" hs_bindgen_test_manualfunction_pointers_c4bb317da29227a6 :: IO (Ptr (FunPtr (FunPtr (CInt ->
                                                                                                                                                                          IO CInt) ->
                                                                                                                                                                  CInt ->
                                                                                                                                                                  IO CInt)))
{-# NOINLINE apply1_nopointer_var_ptr #-}
{-| A global variable pointing to a function like apply1_nopointer().

__C declaration:__ @apply1_nopointer_var@

__defined at:__ @manual\/function_pointers.h:32:21@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_nopointer_var_ptr :: Ptr (FunPtr (FunPtr (CInt ->
                                                 IO CInt) ->
                                         CInt -> IO CInt))
{-| A global variable pointing to a function like apply1_nopointer().

__C declaration:__ @apply1_nopointer_var@

__defined at:__ @manual\/function_pointers.h:32:21@

__exported by:__ @manual\/function_pointers.h@
-}
apply1_nopointer_var_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_c4bb317da29227a6
{-# NOINLINE apply1_nopointer_var #-}
apply1_nopointer_var :: FunPtr (FunPtr (CInt -> IO CInt) ->
                                CInt -> IO CInt)
apply1_nopointer_var = unsafePerformIO (peek apply1_nopointer_var_ptr)
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_6799ff6bc99dff2a" hs_bindgen_test_manualfunction_pointers_6799ff6bc99dff2a :: IO (Ptr Apply1Struct)
{-# NOINLINE apply1_struct_ptr #-}
{-| __C declaration:__ @apply1_struct@

    __defined at:__ @manual\/function_pointers.h:38:34@

    __exported by:__ @manual\/function_pointers.h@
-}
apply1_struct_ptr :: Ptr Apply1Struct
{-| __C declaration:__ @apply1_struct@

    __defined at:__ @manual\/function_pointers.h:38:34@

    __exported by:__ @manual\/function_pointers.h@
-}
apply1_struct_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_6799ff6bc99dff2a
{-# NOINLINE apply1_struct #-}
apply1_struct :: Apply1Struct
apply1_struct = unsafePerformIO (peek apply1_struct_ptr)
foreign import ccall safe "hs_bindgen_test_manualfunction_pointers_d32b4879673188b6" hs_bindgen_test_manualfunction_pointers_d32b4879673188b6 :: IO (Ptr Apply1Union)
{-# NOINLINE apply1_union_ptr #-}
{-| __C declaration:__ @apply1_union@

    __defined at:__ @manual\/function_pointers.h:44:32@

    __exported by:__ @manual\/function_pointers.h@
-}
apply1_union_ptr :: Ptr Apply1Union
{-| __C declaration:__ @apply1_union@

    __defined at:__ @manual\/function_pointers.h:44:32@

    __exported by:__ @manual\/function_pointers.h@
-}
apply1_union_ptr = unsafePerformIO hs_bindgen_test_manualfunction_pointers_d32b4879673188b6
{-# NOINLINE apply1_union #-}
apply1_union :: Apply1Union
apply1_union = unsafePerformIO (peek apply1_union_ptr)
