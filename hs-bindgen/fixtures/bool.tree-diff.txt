TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "bool.h:1:8",
        declId = NamePair {
          nameC = Name "bools1",
          nameHsIdent = HsIdentifier
            "Bools1"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "bool.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Bools1"),
          structSizeof = 2,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "bool.h:2:11",
                fieldName = NamePair {
                  nameC = Name "x",
                  nameHsIdent = HsIdentifier
                    "bools1_x"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                PrimBool,
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "bool.h:3:11",
                fieldName = NamePair {
                  nameC = Name "y",
                  nameHsIdent = HsIdentifier
                    "bools1_y"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                PrimBool,
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "bool.h:8:8",
        declId = NamePair {
          nameC = Name "bools2",
          nameHsIdent = HsIdentifier
            "Bools2"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "bool.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Bools2"),
          structSizeof = 2,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "bool.h:9:10",
                fieldName = NamePair {
                  nameC = Name "x",
                  nameHsIdent = HsIdentifier
                    "bools2_x"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                PrimBool,
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "bool.h:10:10",
                fieldName = NamePair {
                  nameC = Name "y",
                  nameHsIdent = HsIdentifier
                    "bools2_y"},
                fieldComment = Nothing},
              structFieldType = TypePrim
                PrimBool,
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "bool.h:13:9",
        declId = NamePair {
          nameC = Name "BOOL",
          nameHsIdent = HsIdentifier
            "BOOL"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "bool.h",
        declComment = Nothing},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "BOOL",
              newtypeField = HsName
                "@NsVar"
                "un_BOOL"},
            macroType = TypePrim PrimBool}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "bool.h:15:8",
        declId = NamePair {
          nameC = Name "bools3",
          nameHsIdent = HsIdentifier
            "Bools3"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "bool.h",
        declComment = Nothing},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Bools3"),
          structSizeof = 2,
          structAlignment = 1,
          structFields = [
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "bool.h:16:10",
                fieldName = NamePair {
                  nameC = Name "x",
                  nameHsIdent = HsIdentifier
                    "bools3_x"},
                fieldComment = Nothing},
              structFieldType =
              TypeMacroTypedef
                NamePair {
                  nameC = Name "BOOL",
                  nameHsIdent = HsIdentifier
                    "BOOL"}
                NameOriginInSource,
              structFieldOffset = 0,
              structFieldWidth = Nothing},
            StructField {
              structFieldInfo = FieldInfo {
                fieldLoc = "bool.h:17:10",
                fieldName = NamePair {
                  nameC = Name "y",
                  nameHsIdent = HsIdentifier
                    "bools3_y"},
                fieldComment = Nothing},
              structFieldType =
              TypeMacroTypedef
                NamePair {
                  nameC = Name "BOOL",
                  nameHsIdent = HsIdentifier
                    "BOOL"}
                NameOriginInSource,
              structFieldOffset = 8,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["stdbool", "bool"]}
