TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:2:9",
        declId = NamePair {
          nameC = CName "PtrInt",
          nameHsIdent = HsIdentifier
            "PtrInt"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "PtrInt",
              newtypeField = HsName
                "@NsVar"
                "un_PtrInt"},
            macroType = TypePointer
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:5:9",
        declId = NamePair {
          nameC = CName "PtrPtrChar",
          nameHsIdent = HsIdentifier
            "PtrPtrChar"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "PtrPtrChar",
              newtypeField = HsName
                "@NsVar"
                "un_PtrPtrChar"},
            macroType = TypePointer
              (TypePointer
                (TypePrim
                  (PrimChar
                    (PrimSignImplicit Nothing))))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:8:9",
        declId = NamePair {
          nameC = CName "Arr1",
          nameHsIdent = HsIdentifier
            "Arr1"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Arr1",
              newtypeField = HsName
                "@NsVar"
                "un_Arr1"},
            macroType = TypeConstArray
              2
              (TypePrim
                (PrimIntegral
                  PrimInt
                  Signed))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:11:9",
        declId = NamePair {
          nameC = CName "Arr2",
          nameHsIdent = HsIdentifier
            "Arr2"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Arr2",
              newtypeField = HsName
                "@NsVar"
                "un_Arr2"},
            macroType = TypeConstArray
              3
              (TypePointer
                (TypePrim
                  (PrimFloating PrimFloat)))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:14:9",
        declId = NamePair {
          nameC = CName "Arr3",
          nameHsIdent = HsIdentifier
            "Arr3"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Arr3",
              newtypeField = HsName
                "@NsVar"
                "un_Arr3"},
            macroType = TypeConstArray
              4
              (TypePointer
                (TypeFun
                  [
                    TypePrim
                      (PrimFloating PrimDouble)]
                  (TypePrim
                    (PrimFloating PrimFloat))))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:17:9",
        declId = NamePair {
          nameC = CName "Fun1",
          nameHsIdent = HsIdentifier
            "Fun1"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Fun1",
              newtypeField = HsName
                "@NsVar"
                "un_Fun1"},
            macroType = TypeFun
              [
                TypePrim
                  (PrimIntegral PrimInt Signed)]
              (TypePointer
                (TypePrim
                  (PrimFloating PrimFloat)))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:20:9",
        declId = NamePair {
          nameC = CName "Fun2",
          nameHsIdent = HsIdentifier
            "Fun2"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Fun2",
              newtypeField = HsName
                "@NsVar"
                "un_Fun2"},
            macroType = TypePointer
              (TypeFun
                [
                  TypePrim
                    (PrimFloating PrimFloat),
                  TypePointer
                    (TypePrim
                      (PrimFloating PrimDouble))]
                (TypePrim
                  (PrimIntegral
                    PrimInt
                    Signed)))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:23:9",
        declId = NamePair {
          nameC = CName "Fun3",
          nameHsIdent = HsIdentifier
            "Fun3"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Fun3",
              newtypeField = HsName
                "@NsVar"
                "un_Fun3"},
            macroType = TypePointer
              (TypeFun
                [
                  TypePointer
                    (TypePrim
                      (PrimFloating PrimFloat))]
                (TypePointer
                  (TypePrim
                    (PrimIntegral
                      PrimInt
                      Signed))))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:26:9",
        declId = NamePair {
          nameC = CName "Fun4",
          nameHsIdent = HsIdentifier
            "Fun4"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Fun4",
              newtypeField = HsName
                "@NsVar"
                "un_Fun4"},
            macroType = TypeFun
              [
                TypePrim
                  (PrimIntegral PrimInt Signed),
                TypePointer
                  (TypePrim
                    (PrimIntegral PrimLong Signed))]
              (TypePointer
                (TypeFun
                  [
                    TypePrim
                      (PrimFloating PrimFloat),
                    TypePointer
                      (TypePrim
                        (PrimFloating PrimDouble))]
                  (TypePointer
                    (TypePrim
                      (PrimIntegral
                        PrimLong
                        Signed)))))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:29:9",
        declId = NamePair {
          nameC = CName "Fun5",
          nameHsIdent = HsIdentifier
            "Fun5"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "Fun5",
              newtypeField = HsName
                "@NsVar"
                "un_Fun5"},
            macroType = TypeFun
              [
                TypeConstArray
                  8
                  (TypePrim
                    (PrimChar
                      (PrimSignImplicit Nothing)))]
              (TypePointer
                (TypeConstArray
                  2
                  (TypePointer
                    (TypePrim
                      (PrimIntegral
                        PrimShort
                        Signed)))))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:33:9",
        declId = NamePair {
          nameC = CName "MTy",
          nameHsIdent = HsIdentifier
            "MTy"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "MTy",
              newtypeField = HsName
                "@NsVar"
                "un_MTy"},
            macroType = TypePrim
              (PrimFloating PrimFloat)}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:34:13",
        declId = NamePair {
          nameC = CName "tty",
          nameHsIdent = HsIdentifier
            "Tty"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "Tty",
            newtypeField = HsName
              "@NsVar"
              "un_Tty"},
          typedefType = TypeMacroTypedef
            NamePair {
              nameC = CName "MTy",
              nameHsIdent = HsIdentifier
                "MTy"}
            NameOriginInSource},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:36:9",
        declId = NamePair {
          nameC = CName "UINT8_T",
          nameHsIdent = HsIdentifier
            "UINT8_T"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "UINT8_T",
              newtypeField = HsName
                "@NsVar"
                "un_UINT8_T"},
            macroType = TypePrim
              (PrimChar
                (PrimSignExplicit Unsigned))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:37:9",
        declId = NamePair {
          nameC = CName "BOOLEAN_T",
          nameHsIdent = HsIdentifier
            "BOOLEAN_T"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "BOOLEAN_T",
              newtypeField = HsName
                "@NsVar"
                "un_BOOLEAN_T"},
            macroType = TypeMacroTypedef
              NamePair {
                nameC = CName "UINT8_T",
                nameHsIdent = HsIdentifier
                  "UINT8_T"}
              NameOriginInSource}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc = "macro_types.h:38:19",
        declId = NamePair {
          nameC = CName "boolean_T",
          nameHsIdent = HsIdentifier
            "Boolean_T"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader = "macro_types.h"},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "Boolean_T",
            newtypeField = HsName
              "@NsVar"
              "un_Boolean_T"},
          typedefType = TypeMacroTypedef
            NamePair {
              nameC = CName "BOOLEAN_T",
              nameHsIdent = HsIdentifier
                "BOOLEAN_T"}
            NameOriginInSource},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = ["macro_types"]}
