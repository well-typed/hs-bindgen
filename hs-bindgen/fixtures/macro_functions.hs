[DeclVar (VarDecl "iNCR" (ForallTy ("a" ::: VNil) (Forall (\(x0 ::: VNil) -> (QuantTy {quantTyCts = [ClassTy Integral [TyVarTy x0]], quantTyBody = FunTy (TyVarTy x0) (TyVarTy x0)})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclApp (InfixAppHead MAdd) [VarDeclVar x0, VarDeclIntegral 1 HsPrimCInt]))))
,DeclVar (VarDecl "aDD" (ForallTy ("a" ::: VNil) (Forall (\(x0 ::: VNil) -> (QuantTy {quantTyCts = [ClassTy Num [TyVarTy x0]], quantTyBody = FunTy (TyVarTy x0) (FunTy (TyVarTy x0) (TyVarTy x0))})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclLambda "y" (Lambda (\x1 -> VarDeclApp (InfixAppHead MAdd) [VarDeclVar x0, VarDeclVar x1]))))))
,DeclVar (VarDecl "iD" (ForallTy ("a" ::: VNil) (Forall (\(x0 ::: VNil) -> (QuantTy {quantTyCts = [], quantTyBody = FunTy (TyVarTy x0) (TyVarTy x0)})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclVar x0))))
,DeclVar (VarDecl "cONST" (ForallTy ("a" ::: "b" ::: VNil) (Forall (\(x0 ::: x1 ::: VNil) -> (QuantTy {quantTyCts = [], quantTyBody = FunTy (TyVarTy x0) (FunTy (TyVarTy x1) (TyVarTy x0))})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclLambda "y" (Lambda (\x1 -> VarDeclVar x0))))))
,DeclVar (VarDecl "cMP" (ForallTy ("a" ::: VNil) (Forall (\(x0 ::: VNil) -> (QuantTy {quantTyCts = [ClassTy Ord [TyVarTy x0]], quantTyBody = FunTy (TyVarTy x0) (FunTy (TyVarTy x0) (TyConAppTy (TyConApp Bool [])))})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclLambda "y" (Lambda (\x1 -> VarDeclApp (InfixAppHead MRelLT) [VarDeclVar x0, VarDeclVar x1]))))))
,DeclVar (VarDecl "fUN1" (ForallTy VNil (Forall (\( ::: VNil) -> (QuantTy {quantTyCts = [], quantTyBody = FunTy (TyConAppTy (TyConApp ULLong [])) (FunTy (TyConAppTy (TyConApp ULLong [])) (TyConAppTy (TyConApp ULLong [])))})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclLambda "y" (Lambda (\x1 -> VarDeclApp (InfixAppHead MAdd) [VarDeclVar x0, VarDeclApp (InfixAppHead MMult) [VarDeclIntegral 12 HsPrimCULLong, VarDeclVar x1]]))))))
,DeclVar (VarDecl "fUN2" (ForallTy ("a" ::: VNil) (Forall (\(x0 ::: VNil) -> (QuantTy {quantTyCts = [ClassTy Bits [TyVarTy x0]], quantTyBody = FunTy (TyVarTy x0) (FunTy (TyConAppTy (TyConApp ULLong [])) (TyVarTy x0))})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclLambda "y" (Lambda (\x1 -> VarDeclApp (InfixAppHead MShiftLeft) [VarDeclVar x0, VarDeclApp (InfixAppHead MMult) [VarDeclIntegral 3 HsPrimCULLong, VarDeclVar x1]]))))))
,DeclVar (VarDecl "g" (ForallTy ("a" ::: "b" ::: VNil) (Forall (\(x0 ::: x1 ::: VNil) -> (QuantTy {quantTyCts = [ClassTy Integral [TyVarTy x1]], quantTyBody = FunTy (TyVarTy x0) (FunTy (TyVarTy x1) (TyVarTy x1))})))) (VarDeclLambda "x" (Lambda (\x0 -> VarDeclLambda "y" (Lambda (\x1 -> VarDeclApp (VarApphead "cONST") [VarDeclApp (VarApphead "iNCR") [VarDeclVar x1], VarDeclApp (VarApphead "iD") [VarDeclVar x0]]))))))
]
