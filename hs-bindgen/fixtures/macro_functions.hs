DeclVar (VarDecl {varDeclName = "iNCR", varDeclType = ForallTy {forallTySize = 1, forallTyBinders = "a" ::: VNil, forallTy = QuantTy {quantTyCts = [ClassTy Integral (TyVarTy 0 ::: VNil)], quantTyBody = FunTy (TyVarTy 0) (TyVarTy 0)}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclApp (InfixAppHead MAdd) [VarDeclVar 0,VarDeclIntegral 1 HsPrimCInt]))})
DeclVar (VarDecl {varDeclName = "aDD", varDeclType = ForallTy {forallTySize = 1, forallTyBinders = "a" ::: VNil, forallTy = QuantTy {quantTyCts = [ClassTy Num (TyVarTy 0 ::: VNil)], quantTyBody = FunTy (TyVarTy 0) (FunTy (TyVarTy 0) (TyVarTy 0))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (InfixAppHead MAdd) [VarDeclVar 1,VarDeclVar 0]))))})
DeclVar (VarDecl {varDeclName = "iD", varDeclType = ForallTy {forallTySize = 1, forallTyBinders = "a" ::: VNil, forallTy = QuantTy {quantTyCts = [], quantTyBody = FunTy (TyVarTy 0) (TyVarTy 0)}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclVar 0))})
DeclVar (VarDecl {varDeclName = "cONST", varDeclType = ForallTy {forallTySize = 2, forallTyBinders = "a" ::: "b" ::: VNil, forallTy = QuantTy {quantTyCts = [], quantTyBody = FunTy (TyVarTy 0) (FunTy (TyVarTy 1) (TyVarTy 0))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclVar 1))))})
DeclVar (VarDecl {varDeclName = "cMP", varDeclType = ForallTy {forallTySize = 1, forallTyBinders = "a" ::: VNil, forallTy = QuantTy {quantTyCts = [ClassTy Ord (TyVarTy 0 ::: VNil)], quantTyBody = FunTy (TyVarTy 0) (FunTy (TyVarTy 0) (TyConAppTy (TyConApp Bool VNil)))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (InfixAppHead MRelLT) [VarDeclVar 1,VarDeclVar 0]))))})
DeclVar (VarDecl {varDeclName = "fUN1", varDeclType = ForallTy {forallTySize = 0, forallTyBinders = VNil, forallTy = QuantTy {quantTyCts = [], quantTyBody = FunTy (TyConAppTy (TyConApp ULLong VNil)) (FunTy (TyConAppTy (TyConApp ULLong VNil)) (TyConAppTy (TyConApp ULLong VNil)))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (InfixAppHead MAdd) [VarDeclVar 1,VarDeclApp (InfixAppHead MMult) [VarDeclIntegral 12 HsPrimCULLong,VarDeclVar 0]]))))})
DeclVar (VarDecl {varDeclName = "fUN2", varDeclType = ForallTy {forallTySize = 1, forallTyBinders = "a" ::: VNil, forallTy = QuantTy {quantTyCts = [ClassTy Bits (TyVarTy 0 ::: VNil)], quantTyBody = FunTy (TyVarTy 0) (FunTy (TyConAppTy (TyConApp ULLong VNil)) (TyVarTy 0))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (InfixAppHead MShiftLeft) [VarDeclVar 1,VarDeclApp (InfixAppHead MMult) [VarDeclIntegral 3 HsPrimCULLong,VarDeclVar 0]]))))})
DeclVar (VarDecl {varDeclName = "g", varDeclType = ForallTy {forallTySize = 2, forallTyBinders = "a" ::: "b" ::: VNil, forallTy = QuantTy {quantTyCts = [ClassTy Integral (TyVarTy 1 ::: VNil)], quantTyBody = FunTy (TyVarTy 0) (FunTy (TyVarTy 1) (TyVarTy 1))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (VarAppHead "cONST") [VarDeclApp (VarAppHead "iNCR") [VarDeclVar 0],VarDeclApp (VarAppHead "iD") [VarDeclVar 1]]))))})
DeclVar (VarDecl {varDeclName = "dIV1", varDeclType = ForallTy {forallTySize = 0, forallTyBinders = VNil, forallTy = QuantTy {quantTyCts = [], quantTyBody = FunTy (TyConAppTy (TyConApp UInt VNil)) (FunTy (TyConAppTy (TyConApp UInt VNil)) (TyConAppTy (TyConApp UInt VNil)))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (InfixAppHead MDiv) [VarDeclVar 1,VarDeclApp (InfixAppHead MAdd) [VarDeclVar 0,VarDeclIntegral 12 HsPrimCUInt]]))))})
DeclVar (VarDecl {varDeclName = "dIV2", varDeclType = ForallTy {forallTySize = 0, forallTyBinders = VNil, forallTy = QuantTy {quantTyCts = [], quantTyBody = FunTy (TyConAppTy (TyConApp Float VNil)) (FunTy (TyConAppTy (TyConApp Float VNil)) (TyConAppTy (TyConApp Float VNil)))}}, varDeclBody = VarDeclLambda (Lambda "x" (VarDeclLambda (Lambda "y" (VarDeclApp (InfixAppHead MDiv) [VarDeclApp (InfixAppHead MMult) [VarDeclFloat 10.0,VarDeclVar 1],VarDeclVar 0]))))})
