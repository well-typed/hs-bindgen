-- addDependentFile examples/vector.h
-- #include "vector.h"
-- vector *test_internal_new_vector (double arg1, double arg2) { return new_vector(arg1, arg2); }
data Vector = Vector {vector_x :: CDouble, vector_y :: CDouble}
instance Storable Vector
    where {sizeOf = \_ -> 16 :: Int;
           alignment = \_ -> 8 :: Int;
           peek = \ptr_0 -> (pure Vector <*> peekByteOff ptr_0 (0 :: Int)) <*> peekByteOff ptr_0 (8 :: Int);
           poke = \ptr_1 -> \s_2 -> case s_2 of
                                    {Vector vector_x_3
                                            vector_y_4 -> pokeByteOff ptr_1 (0 :: Int) vector_x_3 >> pokeByteOff ptr_1 (8 :: Int) vector_y_4}}
deriving stock instance Show Vector
deriving stock instance Eq Vector
foreign import ccall safe "test_internal_new_vector" new_vector :: CDouble ->
                                                                   CDouble -> IO (Ptr Vector)
