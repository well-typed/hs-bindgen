TranslationUnit {
  unitDecls = [
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:4:9",
        declId = NamePair {
          nameC = CName "MC",
          nameHsIdent = HsIdentifier
            "MC"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclMacro
        (MacroType
          CheckedMacroType {
            macroTypeNames = NewtypeNames {
              newtypeConstr = HsName
                "@NsConstr"
                "MC",
              newtypeField = HsName
                "@NsVar"
                "un_MC"},
            macroType = TypePrim
              (PrimChar
                (PrimSignImplicit Nothing))}),
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:5:14",
        declId = NamePair {
          nameC = CName "TC",
          nameHsIdent = HsIdentifier
            "TC"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "TC",
            newtypeField = HsName
              "@NsVar"
              "un_TC"},
          typedefType = TypePrim
            (PrimChar
              (PrimSignImplicit
                (Just Signed)))},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:8:6",
        declId = NamePair {
          nameC = CName "quux1",
          nameHsIdent = HsIdentifier
            "quux1"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource,
            TypeTypedef
              (TypedefRegular
                NamePair {
                  nameC = CName "TC",
                  nameHsIdent = HsIdentifier
                    "TC"})],
          functionRes = TypePrim
            (PrimChar
              (PrimSignImplicit Nothing)),
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:9:4",
        declId = NamePair {
          nameC = CName "quux2",
          nameHsIdent = HsIdentifier
            "quux2"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource,
            TypePrim
              (PrimChar
                (PrimSignImplicit Nothing))],
          functionRes = TypeTypedef
            (TypedefRegular
              NamePair {
                nameC = CName "TC",
                nameHsIdent = HsIdentifier
                  "TC"}),
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:10:5",
        declId = NamePair {
          nameC = CName "wam1",
          nameHsIdent = HsIdentifier
            "wam1"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePrim
              (PrimFloating PrimFloat),
            TypePointer
              (TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = CName "TC",
                    nameHsIdent = HsIdentifier
                      "TC"}))],
          functionRes = TypePointer
            (TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource),
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:11:5",
        declId = NamePair {
          nameC = CName "wam2",
          nameHsIdent = HsIdentifier
            "wam2"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePrim
              (PrimFloating PrimFloat),
            TypePointer
              (TypeMacroTypedef
                NamePair {
                  nameC = CName "MC",
                  nameHsIdent = HsIdentifier "MC"}
                NameOriginInSource)],
          functionRes = TypePointer
            (TypeTypedef
              (TypedefRegular
                NamePair {
                  nameC = CName "TC",
                  nameHsIdent = HsIdentifier
                    "TC"})),
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:18:16",
        declId = NamePair {
          nameC = CName "struct1",
          nameHsIdent = HsIdentifier
            "Struct1"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct1"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldLoc =
              "macro_in_fundecl_vs_typedef.h:18:30",
              structFieldName = NamePair {
                nameC = CName "a",
                nameHsIdent = HsIdentifier
                  "struct1_a"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:19:9",
        declId = NamePair {
          nameC = CName "struct2",
          nameHsIdent = HsIdentifier
            "Struct2"},
        declOrigin = NameOriginGenerated
          (AnonId
            "macro_in_fundecl_vs_typedef.h:19:9"),
        declAliases = [
          CName "struct2"]},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct2"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldLoc =
              "macro_in_fundecl_vs_typedef.h:19:30",
              structFieldName = NamePair {
                nameC = CName "a",
                nameHsIdent = HsIdentifier
                  "struct2_a"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:20:16",
        declId = NamePair {
          nameC = CName "struct3",
          nameHsIdent = HsIdentifier
            "Struct3"},
        declOrigin = NameOriginInSource,
        declAliases = [
          CName "struct3_t"]},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct3"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldLoc =
              "macro_in_fundecl_vs_typedef.h:20:30",
              structFieldName = NamePair {
                nameC = CName "a",
                nameHsIdent = HsIdentifier
                  "struct3_a"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:20:35",
        declId = NamePair {
          nameC = CName "struct3_t",
          nameHsIdent = HsIdentifier
            "Struct3_t"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclTypedef
        Typedef {
          typedefNames = NewtypeNames {
            newtypeConstr = HsName
              "@NsConstr"
              "Struct3_t",
            newtypeField = HsName
              "@NsVar"
              "un_Struct3_t"},
          typedefType = TypeStruct
            NamePair {
              nameC = CName "struct3",
              nameHsIdent = HsIdentifier
                "Struct3"}
            NameOriginInSource},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:21:16",
        declId = NamePair {
          nameC = CName "struct4",
          nameHsIdent = HsIdentifier
            "Struct4"},
        declOrigin = NameOriginInSource,
        declAliases = [
          CName "struct4"]},
      declKind = DeclStruct
        Struct {
          structNames = RecordNames
            (HsName "@NsConstr" "Struct4"),
          structSizeof = 4,
          structAlignment = 4,
          structFields = [
            StructField {
              structFieldLoc =
              "macro_in_fundecl_vs_typedef.h:21:30",
              structFieldName = NamePair {
                nameC = CName "a",
                nameHsIdent = HsIdentifier
                  "struct4_a"},
              structFieldType = TypePrim
                (PrimIntegral PrimInt Signed),
              structFieldOffset = 0,
              structFieldWidth = Nothing}],
          structFlam = Nothing},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:23:6",
        declId = NamePair {
          nameC = CName "struct_typedef1",
          nameHsIdent = HsIdentifier
            "struct_typedef1"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePointer
              (TypeTypedef
                (TypedefSquashed
                  (CName "struct2")
                  (TypeStruct
                    NamePair {
                      nameC = CName "struct2",
                      nameHsIdent = HsIdentifier
                        "Struct2"}
                    (NameOriginGenerated
                      (AnonId
                        "macro_in_fundecl_vs_typedef.h:19:9"))))),
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource],
          functionRes = TypeVoid,
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:24:6",
        declId = NamePair {
          nameC = CName "struct_typedef2",
          nameHsIdent = HsIdentifier
            "struct_typedef2"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePointer
              (TypeTypedef
                (TypedefRegular
                  NamePair {
                    nameC = CName "struct3_t",
                    nameHsIdent = HsIdentifier
                      "Struct3_t"})),
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource],
          functionRes = TypeVoid,
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:25:6",
        declId = NamePair {
          nameC = CName "struct_typedef3",
          nameHsIdent = HsIdentifier
            "struct_typedef3"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePointer
              (TypeTypedef
                (TypedefSquashed
                  (CName "struct4")
                  (TypeStruct
                    NamePair {
                      nameC = CName "struct4",
                      nameHsIdent = HsIdentifier
                        "Struct4"}
                    NameOriginInSource))),
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource],
          functionRes = TypeVoid,
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:27:6",
        declId = NamePair {
          nameC = CName "struct_name1",
          nameHsIdent = HsIdentifier
            "struct_name1"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePointer
              (TypeStruct
                NamePair {
                  nameC = CName "struct1",
                  nameHsIdent = HsIdentifier
                    "Struct1"}
                NameOriginInSource),
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource],
          functionRes = TypeVoid,
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:28:6",
        declId = NamePair {
          nameC = CName "struct_name2",
          nameHsIdent = HsIdentifier
            "struct_name2"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePointer
              (TypeStruct
                NamePair {
                  nameC = CName "struct3",
                  nameHsIdent = HsIdentifier
                    "Struct3"}
                NameOriginInSource),
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource],
          functionRes = TypeVoid,
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "macro_in_fundecl_vs_typedef.h:29:6",
        declId = NamePair {
          nameC = CName "struct_name3",
          nameHsIdent = HsIdentifier
            "struct_name3"},
        declOrigin = NameOriginInSource,
        declAliases = []},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePointer
              (TypeStruct
                NamePair {
                  nameC = CName "struct4",
                  nameHsIdent = HsIdentifier
                    "Struct4"}
                NameOriginInSource),
            TypeMacroTypedef
              NamePair {
                nameC = CName "MC",
                nameHsIdent = HsIdentifier "MC"}
              NameOriginInSource],
          functionRes = TypeVoid,
          functionHeader =
          "macro_in_fundecl_vs_typedef.h"},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = [
    "macro_in_fundecl_vs_typedef"]}
