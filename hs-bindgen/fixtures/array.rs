/* automatically generated by rust-bindgen 0.71.1 */

unsafe extern "C" {
    ///! Global, complete, not initialised
    pub static mut arr0: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Global, complete, initialised
    pub static mut arr1: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Global, extern, complete, not initialised
    pub static mut arr2: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Global, extern, complete, initialised
    pub static mut arr3: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Global, static, complete, not initialised
    pub static mut arr4: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Global, static, complete, initialised
    pub static mut arr5: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Global, incomplete
    pub static mut arr6: [::std::os::raw::c_int; 1usize];
}
unsafe extern "C" {
    ///! Global, extern, incomplete
    pub static mut arr7: [::std::os::raw::c_int; 0usize];
}
unsafe extern "C" {
    ///! Global, static, incomplete
    pub static mut arr8: [::std::os::raw::c_int; 3usize];
}
pub type triplet = [::std::os::raw::c_int; 3usize];
pub type list = [::std::os::raw::c_int; 0usize];
pub type matrix = [[::std::os::raw::c_int; 3usize]; 4usize];
pub type tripletlist = [[::std::os::raw::c_int; 3usize]; 0usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Example {
    pub triple: [::std::os::raw::c_int; 3usize],
    pub sudoku: [[::std::os::raw::c_int; 3usize]; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Example"][::std::mem::size_of::<Example>() - 48usize];
    ["Alignment of Example"][::std::mem::align_of::<Example>() - 4usize];
    [
        "Offset of field: Example::triple",
    ][::std::mem::offset_of!(Example, triple) - 0usize];
    [
        "Offset of field: Example::sudoku",
    ][::std::mem::offset_of!(Example, sudoku) - 12usize];
};
unsafe extern "C" {
    ///! Array of known size
    pub static mut arr_1: [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Array of known size, typedef
    pub static mut arr_2: triplet;
}
unsafe extern "C" {
    ///! Array of unknown size
    pub static mut arr_3: [::std::os::raw::c_int; 0usize];
}
unsafe extern "C" {
    ///! Array of unknown size, typedef
    pub static mut arr_4: list;
}
unsafe extern "C" {
    ///! Multi-dimensional array of known size
    pub static mut arr_5: [[::std::os::raw::c_int; 3usize]; 4usize];
}
unsafe extern "C" {
    ///! Multi-dimensional array of known size, typedef
    pub static mut arr_6: matrix;
}
unsafe extern "C" {
    ///! Multi-dimensional array of unknown size
    pub static mut arr_7: [[::std::os::raw::c_int; 3usize]; 0usize];
}
unsafe extern "C" {
    ///! Multi-dimensional array of unknown size, typedef
    pub static mut arr_8: tripletlist;
}
unsafe extern "C" {
    ///! Array of known size
    pub fn fun_1(
        x: ::std::os::raw::c_int,
        xs: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Array of known size, typedef
    pub fn fun_2(xs: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Array of unknown size
    pub fn fun_3(xs: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Array of unknown size, typedef
    pub fn fun_4(xs: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Multi-dimensional array of known size
    pub fn fun_5(xss: *mut [::std::os::raw::c_int; 3usize]) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Multi-dimensional array of known size, typedef
    pub fn fun_6(xss: *mut [::std::os::raw::c_int; 3usize]) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Multi-dimensional array of unknown size
    pub fn fun_7(xss: *mut [::std::os::raw::c_int; 3usize]) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Multi-dimensional array of unknown size, typedef
    pub fn fun_8(xss: *mut [::std::os::raw::c_int; 3usize]) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    ///! Array of known size
    pub fn fun_9() -> *mut [::std::os::raw::c_int; 3usize];
}
unsafe extern "C" {
    ///! Array of known size, typedef
    pub fn fun_10() -> *mut triplet;
}
unsafe extern "C" {
    ///! Array of unknown size
    pub fn fun_11() -> *mut [::std::os::raw::c_int; 0usize];
}
unsafe extern "C" {
    ///! Array of unknown size, typedef
    pub fn fun_12() -> *mut list;
}
unsafe extern "C" {
    ///! Multi-dimensional array of known size
    pub fn fun_13() -> *mut [[::std::os::raw::c_int; 3usize]; 4usize];
}
unsafe extern "C" {
    ///! Multi-dimensional array of known size, typedef
    pub fn fun_14() -> *mut matrix;
}
unsafe extern "C" {
    ///! Multi-dimensional array of unknown size
    pub fn fun_15() -> *mut [[::std::os::raw::c_int; 3usize]; 0usize];
}
unsafe extern "C" {
    ///! Multi-dimensional array of unknown size, typedef
    pub fn fun_16() -> *mut tripletlist;
}
