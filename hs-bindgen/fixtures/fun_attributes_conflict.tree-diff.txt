TranslationUnit {
  unitDecls =
  [
    Decl {
      declInfo =
      DeclInfo {
        declLoc =
        "fun_attributes_conflict.h:9:5",
        declId = NamePair {
          nameC = Name "square_cp",
          nameHsIdent = HsIdentifier
            "square_cp"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "fun_attributes_conflict.h",
        declComment =
        Just
          Comment {
            commentCName = "square_cp(int)",
            commentChildren =
            [
              Paragraph
                [
                  TextContent
                    "Conflicting attributes on functions for llvm/clang versions 18 and up"],
              Paragraph
                [
                  TextContent
                    "Examples from https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html"]]}},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePrim
              (PrimIntegral PrimInt Signed)],
          functionAttrs =
          FunctionAttributes
            HaskellPureFunction,
          functionRes = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "fun_attributes_conflict.h:11:5",
        declId = NamePair {
          nameC = Name "square_pc",
          nameHsIdent = HsIdentifier
            "square_pc"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "fun_attributes_conflict.h",
        declComment = Nothing},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePrim
              (PrimIntegral PrimInt Signed)],
          functionAttrs =
          FunctionAttributes
            HaskellPureFunction,
          functionRes = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "fun_attributes_conflict.h:13:5",
        declId = NamePair {
          nameC = Name "square_cc",
          nameHsIdent = HsIdentifier
            "square_cc"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "fun_attributes_conflict.h",
        declComment = Nothing},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePrim
              (PrimIntegral PrimInt Signed)],
          functionAttrs =
          FunctionAttributes
            HaskellPureFunction,
          functionRes = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}},
    Decl {
      declInfo = DeclInfo {
        declLoc =
        "fun_attributes_conflict.h:15:5",
        declId = NamePair {
          nameC = Name "square_pp",
          nameHsIdent = HsIdentifier
            "square_pp"},
        declOrigin = NameOriginInSource,
        declAliases = [],
        declHeader =
        "fun_attributes_conflict.h",
        declComment = Nothing},
      declKind = DeclFunction
        Function {
          functionArgs = [
            TypePrim
              (PrimIntegral PrimInt Signed)],
          functionAttrs =
          FunctionAttributes
            CPureFunction,
          functionRes = TypePrim
            (PrimIntegral PrimInt Signed)},
      declSpec = DeclSpec
        TypeSpec {
          typeSpecModule = Nothing,
          typeSpecIdentifier = Nothing,
          typeSpecInstances = Map.fromList
            []}}],
  unitDeps = [
    "fun_attributes_conflict"]}
