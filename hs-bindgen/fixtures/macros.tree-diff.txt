WrapCHeader
  (Header
    [
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:1:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "OBJECTLIKE1",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "1",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 1})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:1:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:2:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "OBJECTLIKE2",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "2",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 2})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:2:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:3:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "OBJECTLIKE3",
            macroArgs = [],
            macroBody = MApp
              MAdd
              [
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "3",
                      integerLiteralType = Nothing,
                      integerLiteralValue = 3}),
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "3",
                      integerLiteralType = Nothing,
                      integerLiteralValue = 3})]},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:3:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:4:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "OBJECTLIKE4",
            macroArgs = [],
            macroBody = MApp
              MAdd
              [
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "4",
                      integerLiteralType = Nothing,
                      integerLiteralValue = 4}),
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "4",
                      integerLiteralType = Nothing,
                      integerLiteralValue = 4})]},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:4:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:6:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "MEANING_OF_LIFE1",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "42",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 42})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:6:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:7:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "MEANING_OF_LIFE2",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "052",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 42})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:7:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:8:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "MEANING_OF_LIFE3",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "0x2a",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 42})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:8:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:9:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "MEANING_OF_LIFE4",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "0X2A",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 42})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:9:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:10:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "MEANING_OF_LIFE5",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText = "0b101010",
                  integerLiteralType = Nothing,
                  integerLiteralValue = 42})},
          macroDeclMacroTy =
          "(forall a. Integral a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:10:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:12:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "LONG_INT_TOKEN1",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText =
                  "18446744073709550592ull",
                  integerLiteralType = Just
                    (PrimLongLong Unsigned),
                  integerLiteralValue =
                  18446744073709550592})},
          macroDeclMacroTy = "ULLong",
          macroDeclSourceLoc =
          "examples/macros.h:12:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:13:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "LONG_INT_TOKEN2",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText =
                  "18'446'744'073'709'550'592llu",
                  integerLiteralType = Just
                    (PrimLongLong Unsigned),
                  integerLiteralValue =
                  18446744073709550592})},
          macroDeclMacroTy = "ULLong",
          macroDeclSourceLoc =
          "examples/macros.h:13:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:14:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "LONG_INT_TOKEN3",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText =
                  "1844'6744'0737'0955'0592uLL",
                  integerLiteralType = Just
                    (PrimLongLong Unsigned),
                  integerLiteralValue =
                  18446744073709550592})},
          macroDeclMacroTy = "ULLong",
          macroDeclSourceLoc =
          "examples/macros.h:14:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:15:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName
              "LONG_INT_TOKEN4",
            macroArgs = [],
            macroBody = MTerm
              (MInt
                IntegerLiteral {
                  integerLiteralText =
                  "184467'440737'0'95505'92LLU",
                  integerLiteralType = Just
                    (PrimLongLong Unsigned),
                  integerLiteralValue =
                  18446744073709550592})},
          macroDeclMacroTy = "ULLong",
          macroDeclSourceLoc =
          "examples/macros.h:15:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:20:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT1_1",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "11e4",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  110000.0,
                  floatingLiteralDoubleValue =
                  110000.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:20:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:21:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT1_2",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "12E-3",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  1.2e-2,
                  floatingLiteralDoubleValue =
                  1.2e-2})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:21:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:22:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT1_3",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "13e-03f",
                  floatingLiteralType = Just
                    PrimFloat,
                  floatingLiteralFloatValue =
                  1.3e-2,
                  floatingLiteralDoubleValue =
                  1.3e-2})},
          macroDeclMacroTy = "Float",
          macroDeclSourceLoc =
          "examples/macros.h:22:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:24:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT2_1",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "21.",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  21.0,
                  floatingLiteralDoubleValue =
                  21.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:24:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:25:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT2_2",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "22.e2",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  2200.0,
                  floatingLiteralDoubleValue =
                  2200.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:25:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:26:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT2_3",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "23.f",
                  floatingLiteralType = Just
                    PrimFloat,
                  floatingLiteralFloatValue =
                  23.0,
                  floatingLiteralDoubleValue =
                  23.0})},
          macroDeclMacroTy = "Float",
          macroDeclSourceLoc =
          "examples/macros.h:26:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:28:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT3_1",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "31.0",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  31.0,
                  floatingLiteralDoubleValue =
                  31.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:28:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:29:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT3_2",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = ".32",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  0.32,
                  floatingLiteralDoubleValue =
                  0.32})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:29:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:30:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT3_3",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = ".33e2",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  33.0,
                  floatingLiteralDoubleValue =
                  33.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:30:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:31:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT3_4",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = ".34e-2f",
                  floatingLiteralType = Just
                    PrimFloat,
                  floatingLiteralFloatValue =
                  3.4e-3,
                  floatingLiteralDoubleValue =
                  3.4e-3})},
          macroDeclMacroTy = "Float",
          macroDeclSourceLoc =
          "examples/macros.h:31:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:33:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT4_1",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "0x41p4",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  650000.0,
                  floatingLiteralDoubleValue =
                  650000.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:33:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:34:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT4_2",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "0x42P-3",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  6.6e-2,
                  floatingLiteralDoubleValue =
                  6.6e-2})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:34:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:35:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT4_3",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText =
                  "0x43p-03f",
                  floatingLiteralType = Just
                    PrimFloat,
                  floatingLiteralFloatValue =
                  6.7e-2,
                  floatingLiteralDoubleValue =
                  6.7e-2})},
          macroDeclMacroTy = "Float",
          macroDeclSourceLoc =
          "examples/macros.h:35:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:37:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT5_1",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "0x51.p0",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  81.0,
                  floatingLiteralDoubleValue =
                  81.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:37:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:38:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT5_2",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText =
                  "0x52.P0f",
                  floatingLiteralType = Just
                    PrimFloat,
                  floatingLiteralFloatValue =
                  82.0,
                  floatingLiteralDoubleValue =
                  82.0})},
          macroDeclMacroTy = "Float",
          macroDeclSourceLoc =
          "examples/macros.h:38:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:40:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT6_1",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText =
                  "0x61.0P2",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  15520.0,
                  floatingLiteralDoubleValue =
                  15520.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:40:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:41:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT6_2",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText = "0x.62p2",
                  floatingLiteralType = Nothing,
                  floatingLiteralFloatValue =
                  98.0,
                  floatingLiteralDoubleValue =
                  98.0})},
          macroDeclMacroTy =
          "(forall a. Fractional a => a)",
          macroDeclSourceLoc =
          "examples/macros.h:41:9"},
      DeclMacro
        MacroDecl {
          macroDeclMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:42:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "FLT6_3",
            macroArgs = [],
            macroBody = MTerm
              (MFloat
                FloatingLiteral {
                  floatingLiteralText =
                  "0x.63p-2f",
                  floatingLiteralType = Just
                    PrimFloat,
                  floatingLiteralFloatValue =
                  9.9e-3,
                  floatingLiteralDoubleValue =
                  9.9e-3})},
          macroDeclMacroTy = "Float",
          macroDeclSourceLoc =
          "examples/macros.h:42:9"},
      DeclMacro
        MacroTcError {
          macroTcErrorMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:45:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "BAD1",
            macroArgs = [],
            macroBody = MApp
              MAdd
              [
                MTerm
                  (MFloat
                    FloatingLiteral {
                      floatingLiteralText = "0.1",
                      floatingLiteralType = Nothing,
                      floatingLiteralFloatValue = 0.1,
                      floatingLiteralDoubleValue =
                      0.1}),
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "1",
                      integerLiteralType = Nothing,
                      integerLiteralValue = 1})]},
          macroTcError = T.concat
            [
              "Failed to typecheck macro:\n",
              "Inconsistent pairs of constraints:\n",
              "  - 'Integral a_0[tau]' and Fractional a_0[tau]\n"]},
      DeclMacro
        MacroTcError {
          macroTcErrorMacro = Macro {
            macroLoc = MultiLoc {
              multiLocExpansion =
              "examples/macros.h:46:9",
              multiLocPresumed = Nothing,
              multiLocSpelling = Nothing,
              multiLocFile = Nothing},
            macroName = CName "BAD2",
            macroArgs = [],
            macroBody = MApp
              MMult
              [
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "2l",
                      integerLiteralType = Just
                        (PrimLong Signed),
                      integerLiteralValue = 2}),
                MTerm
                  (MInt
                    IntegerLiteral {
                      integerLiteralText = "2ul",
                      integerLiteralType = Just
                        (PrimLong Unsigned),
                      integerLiteralValue = 2})]},
          macroTcError = T.concat
            [
              "Failed to typecheck macro:\n",
              "Could not unify:\n",
              "  - ULong\n",
              "  - Long\n",
              "because the type constructors are different.\n",
              "In an application of 'MMult'.\n",
              "\n"]}])
