module HsBindgen.GenTests.Readme (
    genTestsReadme
  ) where

import System.FilePath qualified as FilePath

{-------------------------------------------------------------------------------
  Generation
-------------------------------------------------------------------------------}

genTestsReadme ::
     FilePath  -- ^ README path
  -> String    -- ^ Module name (example: @Acme.Foo@)
  -> FilePath  -- ^ Test suite directory path
  -> FilePath  -- ^ C header path
  -> FilePath  -- ^ C source path
  -> IO ()
genTestsReadme readmePath moduleName testSuitePath cHeaderPath cSourcePath =
    writeFile readmePath $ unlines
      [ "# " ++ moduleName ++ " hs-bindgen Test Suite"
      , ""
      , "The content under this directory is automatically generated by [hs-bindgen][]."
      , ""
      , "[hs-bindgen]: <https://github.com/well-typed/hs-bindgen>"
      , ""
      , "## Example Cabal Configuration"
      , ""
      , "Be sure to add your project to the dependencies."
      , ""
      , "```"
      , "test-suite " ++ testSuite
      , "  type: exitcode-stdio-1.0"
      , "  hs-source-dirs: " ++ testSuite ++ "/src"
      , "  main-is: Main.hs"
      , "  other-modules:"
      , "      " ++ moduleName ++ ".Test"
      , "      Main"
      , "      Spec"
      , "  include-dirs:"
      , "      " ++ testSuite ++ "/cbits"
      , "  install-includes:"
      , "      " ++ FilePath.takeFileName cHeaderPath
      , "  c-sources:"
      , "      " ++ testSuite ++ "/cbits/" ++ FilePath.takeFileName cSourcePath
      , "  build-depends:"
      , "      base"
      , "    , hs-bindgen-testlib"
      , "    , QuickCheck"
      , "    , tasty"
      , "    , tasty-hunit"
      , "    , tasty-quickcheck"
      , "  default-language: Haskell2010"
      , "  ghc-options: -Wall"
      , "```"
      ]
  where
    testSuite :: String
    testSuite = FilePath.takeFileName testSuitePath
